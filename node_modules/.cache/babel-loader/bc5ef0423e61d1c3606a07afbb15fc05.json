{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\pages\\\\tables\\\\IrrigationSchedule.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport useAxios from \"axios-hooks\";\nimport { useParams } from \"react-router-dom\";\nimport Preloader from \"../../components/Preloader\";\nimport { API_URL } from \"../../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faExclamation } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Tooltip, OverlayTrigger } from \"@themesberg/react-bootstrap\";\nimport { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DateTimePicker, LocalizationProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@material-ui/pickers/adapter/moment\";\nimport moment from \"moment\";\nimport { AppName } from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DateTimeEditInputCell = props => {\n  _s();\n\n  const {\n    id,\n    field,\n    value,\n    api\n  } = props;\n  const dateFormat = \"YYYY-MM-DD HH:mm\";\n  const handleChange = useCallback(editedDate => {\n    const editedValue = moment(editedDate).format(dateFormat);\n    api.setEditCellValue({\n      id,\n      field,\n      value: editedValue\n    });\n  }, [id, field, api]);\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: MomentUtils,\n    dateFormat: dateFormat,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        renderInput: props => /*#__PURE__*/_jsxDEV(TextField, { ...props,\n          variant: \"outlined\",\n          margin: \"none\",\n          helperText: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this),\n        inputFormat: dateFormat,\n        value: new Date(value),\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateTimeEditInputCell, \"y/H5GIiu8jog9Hni7mlqNguo+do=\");\n\n_c = DateTimeEditInputCell;\nconst sectionColumns = [{\n  field: \"name\",\n  headerName: \"Name\",\n  type: \"string\"\n}, {\n  field: \"ec_setpoint\",\n  headerName: \"EC Setpoint\",\n  type: \"number\",\n  editable: true\n}, {\n  field: \"run_time\",\n  headerName: \"Run time\",\n  type: \"number\"\n}, {\n  field: \"start_time\",\n  headerName: \"Start time\",\n  type: \"string\",\n  renderEditCell: props => /*#__PURE__*/_jsxDEV(DateTimeEditInputCell, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 32\n  }, this),\n  editable: true\n}, {\n  field: \"end_time\",\n  headerName: \"End time\",\n  type: \"string\",\n  renderEditCell: DateTimeEditInputCell,\n  editable: true\n}].map(column => ({ ...column,\n  flex: 1\n}));\n\nconst SectionTable = ({\n  section,\n  onChange = null\n}) => {\n  _s2();\n\n  const id = section.sql_index;\n  const handleEditCellChangeCommited = useCallback(e => {\n    const {\n      field,\n      props: {\n        value\n      }\n    } = e;\n    const editedSection = { ...section,\n      [field]: value\n    };\n\n    if (onChange) {\n      onChange(editedSection);\n    }\n  }, [section, onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      hideFooter: true,\n      autoHeight: true,\n      rows: [{\n        id,\n        ...section\n      }],\n      columns: sectionColumns,\n      onEditCellChangeCommitted: handleEditCellChangeCommited\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SectionTable, \"8LcFqnf0AxFf9qpwNLtTtqKkOnQ=\");\n\n_c2 = SectionTable;\nconst fertilizerColumns = [{\n  field: \"name\",\n  headerName: \"Name\",\n  type: \"string\"\n}, {\n  field: \"ec_setpoint\",\n  headerName: \"EC Setpoint\",\n  type: \"number\",\n  editable: true\n}, {\n  field: \"flow_rate\",\n  headerName: \"Flow rate\",\n  type: \"number\",\n  editable: true\n}].map(column => ({ ...column,\n  flex: 1,\n  editable: true\n}));\n\nconst FertilizerTable = ({\n  section,\n  onChange = null\n}) => {\n  _s3();\n\n  const {\n    fertilizer: fertilizers\n  } = section;\n  const handleEditCellChangeCommited = useCallback(e => {\n    const {\n      id,\n      field,\n      props: {\n        value\n      }\n    } = e;\n    const editedFertilizer = { ...fertilizers[id],\n      [field]: value\n    };\n    const editedFertilizers = [...fertilizers.slice(0, id), editedFertilizer, ...fertilizers.slice(id + 1)];\n    const editedSection = { ...section,\n      fertilizer: editedFertilizers\n    };\n\n    if (onChange) {\n      onChange(editedSection);\n    }\n  }, [section, fertilizers, onChange]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        background: \"#99a9c4\",\n        color: \"#4a5073\",\n        border: \"1px solid #99a9c4\",\n        borderRadius: \"0.09cm\",\n        height: \"3rem\",\n        padding: \"0.5rem\",\n        fontWeight: \"bold\",\n        fontFamily: \"'Rubik', sans-serif\",\n        fontSize: \"1.rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: \"Fertilizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      hideFooter: true,\n      autoHeight: true,\n      rows: fertilizers.map((fertilizer, id) => ({\n        id: id,\n        ...fertilizer\n      })),\n      columns: fertilizerColumns,\n      onEditCellChangeCommitted: handleEditCellChangeCommited\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(FertilizerTable, \"8LcFqnf0AxFf9qpwNLtTtqKkOnQ=\");\n\n_c3 = FertilizerTable;\n\nconst SectionRow = ({\n  section,\n  onChange = null\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"w-full\",\n  style: {\n    border: \"1.5px solid #242540\",\n    borderRadius: \"0.1cm\",\n    padding: \"1rem\",\n    boxShadow: \"3px 3px #5b5c75\",\n    marginTop: \"1rem\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex align-items-center align-content-center justify-content-center\",\n    style: {\n      background: \"#99a9c4\",\n      color: \"#4a5073\",\n      fontWeight: \"bold\",\n      border: \"1px solid #e0dcdc\",\n      borderRadius: \"0.09cm\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        background: \"#99a9c4\",\n        color: \"#4a5073\",\n        height: \"3rem\",\n        padding: \"0.5rem\",\n        fontWeight: \"bold\",\n        fontFamily: \"'Rubik', sans-serif\",\n        fontSize: \"1.2rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: section.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SectionTable, {\n    section: section,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FertilizerTable, {\n    section: section,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 157,\n  columnNumber: 3\n}, this);\n\n_c4 = SectionRow;\nexport const IrrigationSchedule = () => {\n  _s4();\n\n  const {\n    farmId\n  } = useParams();\n  const [{\n    data,\n    loading,\n    error\n  }] = useAxios(`${API_URL}/-${farmId}/schedule`);\n  const [dirty, setDirty] = useState(false);\n  const [schedule, setSchedule] = useState();\n  useEffect(() => {\n    if (data) {\n      setSchedule(data);\n    }\n  }, [data]);\n  const [, postSchedule] = useAxios({\n    url: `${API_URL}/-${farmId}/schedule`,\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    }\n  }, {\n    manual: true\n  });\n  if (loading || !schedule) return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 36\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faExclamation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 7\n  }, this);\n\n  const handleChange = async editedSection => {\n    const editedSchedule = schedule.map(section => section.sql_index === editedSection.sql_index ? editedSection : section);\n    setDirty(true);\n    setSchedule(editedSchedule);\n  };\n\n  const showMessage = msg => {\n    console.log(msg); // Leave it at this for now\n  };\n\n  const handleSave = async () => {\n    try {\n      showMessage(\"Saving...\");\n      await postSchedule({\n        data: schedule\n      });\n      setDirty(false);\n    } catch (e) {\n      showMessage(\"Failed to save\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#cad3de\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        padding: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"5rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col align-items-center align-content-center justify-content-center\",\n        style: {\n          dislay: \"flex\",\n          background: \"white\",\n          border: \"1px solid white\",\n          borderRadius: \"0.09cm\",\n          padding: \"1rem\",\n          fontFamily: \"'Rubik', sans-serif\",\n          fontSize: \"1.2rem\",\n          marginLeft: \"1rem\",\n          color: \"#4a5073\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          placement: \"bottom\",\n          trigger: [\"hover\", \"focus\"],\n          overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: \"Save All settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 20\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-0\",\n            onClick: handleSave,\n            disabled: !dirty,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this), \" Save\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), schedule.map((section, i) => {\n          return /*#__PURE__*/_jsxDEV(SectionRow, {\n            section: section,\n            onChange: handleChange\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(IrrigationSchedule, \"q0GAk9wlfx8CImEyHxMBv4TD0Nw=\", false, function () {\n  return [useParams, useAxios, useAxios];\n});\n\n_c5 = IrrigationSchedule;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DateTimeEditInputCell\");\n$RefreshReg$(_c2, \"SectionTable\");\n$RefreshReg$(_c3, \"FertilizerTable\");\n$RefreshReg$(_c4, \"SectionRow\");\n$RefreshReg$(_c5, \"IrrigationSchedule\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/pages/tables/IrrigationSchedule.js"],"names":["React","useCallback","useEffect","useState","useAxios","useParams","Preloader","API_URL","FontAwesomeIcon","faSave","faExclamation","Button","Tooltip","OverlayTrigger","TextField","DataGrid","DateTimePicker","LocalizationProvider","MomentUtils","moment","AppName","DateTimeEditInputCell","props","id","field","value","api","dateFormat","handleChange","editedDate","editedValue","format","setEditCellValue","Date","sectionColumns","headerName","type","editable","renderEditCell","map","column","flex","SectionTable","section","onChange","sql_index","handleEditCellChangeCommited","e","editedSection","fertilizerColumns","FertilizerTable","fertilizer","fertilizers","editedFertilizer","editedFertilizers","slice","background","color","border","borderRadius","height","padding","fontWeight","fontFamily","fontSize","display","justifyContent","alignContent","alignItems","SectionRow","boxShadow","marginTop","name","IrrigationSchedule","farmId","data","loading","error","dirty","setDirty","schedule","setSchedule","postSchedule","url","method","headers","manual","editedSchedule","showMessage","msg","console","log","handleSave","backgroundColor","dislay","marginLeft","i"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport useAxios from \"axios-hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport { API_URL } from \"../../api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave, faExclamation } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button, Tooltip, OverlayTrigger } from \"@themesberg/react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { DateTimePicker, LocalizationProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@material-ui/pickers/adapter/moment\";\r\nimport moment from \"moment\";\r\nimport {AppName} from \"./Dashboard\";\r\n\r\nconst DateTimeEditInputCell = (props) => {\r\n  const {id, field, value, api} = props;\r\n  const dateFormat = \"YYYY-MM-DD HH:mm\";\r\n  const handleChange = useCallback((editedDate) => {\r\n    const editedValue = moment(editedDate).format(dateFormat)\r\n    api.setEditCellValue({id, field, value: editedValue})\r\n  }, [id, field,api]);\r\n\r\n  return (\r\n    <LocalizationProvider \r\n      dateAdapter={MomentUtils}\r\n      dateFormat={dateFormat}>\r\n      <div className=\"flex flex-col justify-content-center\">\r\n        <DateTimePicker \r\n          renderInput={props => <TextField {...props} variant=\"outlined\" margin=\"none\" helperText=\"\"></TextField>}\r\n          inputFormat={dateFormat}\r\n          value={new Date(value)}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\nconst sectionColumns = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    type: \"string\"\r\n  },\r\n  {\r\n    field: \"ec_setpoint\",\r\n    headerName: \"EC Setpoint\",\r\n    type: \"number\", \r\n    editable: true\r\n  },\r\n  {\r\n    field: \"run_time\",\r\n    headerName: \"Run time\",\r\n    type: \"number\"\r\n  },\r\n  {\r\n    field: \"start_time\",\r\n    headerName: \"Start time\",\r\n    type: \"string\", \r\n    renderEditCell: (props) => <DateTimeEditInputCell {...props}/>,\r\n    editable: true\r\n  },\r\n  {\r\n    field: \"end_time\",\r\n    headerName: \"End time\",\r\n    type: \"string\", \r\n    renderEditCell: DateTimeEditInputCell,\r\n    editable: true\r\n  }\r\n].map(column => ({ ...column, flex: 1 }));\r\n\r\nconst SectionTable = ({ section, onChange = null }) => {\r\n  const id = section.sql_index;\r\n  const handleEditCellChangeCommited = useCallback(e => {\r\n    const {field, props: {value}} = e;\r\n    const editedSection = { ...section, [field]: value }\r\n    if (onChange) {\r\n      onChange(editedSection);\r\n    }\r\n  }, [section, onChange])\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <DataGrid\r\n        hideFooter={true} autoHeight rows={[{ id, ...section }]} columns={sectionColumns}\r\n        onEditCellChangeCommitted={handleEditCellChangeCommited} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst fertilizerColumns = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    type: \"string\"\r\n  },\r\n  {\r\n    field: \"ec_setpoint\",\r\n    headerName: \"EC Setpoint\",\r\n    type: \"number\", \r\n    editable: true\r\n  },\r\n  {\r\n    field: \"flow_rate\",\r\n    headerName: \"Flow rate\",\r\n    type: \"number\", \r\n    editable: true\r\n  },\r\n].map(column => ({ ...column, flex: 1, editable: true }));\r\n\r\nconst FertilizerTable = ({ section, onChange = null }) => {\r\n  const { fertilizer: fertilizers } = section;\r\n  const handleEditCellChangeCommited = useCallback(e => {\r\n    const {id, field, props: {value} } = e;\r\n    const editedFertilizer = { ...fertilizers[id], [field]: value };\r\n    const editedFertilizers = [...fertilizers.slice(0, id), editedFertilizer, ...fertilizers.slice(id + 1)];\r\n    const editedSection = { ...section, fertilizer: editedFertilizers };\r\n    if (onChange) {\r\n      onChange(editedSection);\r\n    }\r\n  }, [section, fertilizers, onChange]);\r\n\r\n  return (\r\n    <>\r\n      <h3\r\n        style={{\r\n          background: \"#99a9c4\",\r\n          color: \"#4a5073\",\r\n          border: \"1px solid #99a9c4\",\r\n          borderRadius: \"0.09cm\",\r\n          height: \"3rem\",\r\n          padding: \"0.5rem\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: \"'Rubik', sans-serif\",\r\n          fontSize: \"1.rem\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        Fertilizer\r\n      </h3>\r\n      <DataGrid\r\n        hideFooter={true}\r\n        autoHeight\r\n        rows={fertilizers.map((fertilizer, id) => ({ id: id, ...fertilizer }))}\r\n        columns={fertilizerColumns}\r\n        onEditCellChangeCommitted={handleEditCellChangeCommited}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst SectionRow = ({ section, onChange = null }) => (\r\n  <div\r\n    className=\"w-full\"\r\n    style={{\r\n      border: \"1.5px solid #242540\",\r\n      borderRadius: \"0.1cm\",\r\n      padding: \"1rem\",\r\n      boxShadow: \"3px 3px #5b5c75\",\r\n      marginTop: \"1rem\",\r\n    }}\r\n  >\r\n    <div\r\n      className=\"flex align-items-center align-content-center justify-content-center\"\r\n      style={{\r\n        background: \"#99a9c4\",\r\n        color: \"#4a5073\",\r\n        fontWeight: \"bold\",\r\n        border: \"1px solid #e0dcdc\",\r\n        borderRadius: \"0.09cm\",\r\n      }}\r\n    >\r\n      <h3\r\n        style={{\r\n          background: \"#99a9c4\",\r\n          color: \"#4a5073\",\r\n          height: \"3rem\",\r\n          padding: \"0.5rem\",\r\n          fontWeight: \"bold\",\r\n          fontFamily: \"'Rubik', sans-serif\",\r\n          fontSize: \"1.2rem\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {section.name}\r\n      </h3>\r\n    </div>\r\n    <SectionTable section={section} onChange={onChange} />\r\n    <FertilizerTable section={section} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nexport const IrrigationSchedule = () => {\r\n  const { farmId } = useParams();\r\n  const [{ data, loading, error }] = useAxios(`${API_URL}/-${farmId}/schedule`);\r\n  const [dirty, setDirty] = useState(false);\r\n  const [schedule, setSchedule] = useState();\r\n  useEffect(() => {\r\n    if(data) {\r\n      setSchedule(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const [, postSchedule] = useAxios(\r\n    {\r\n      url: `${API_URL}/-${farmId}/schedule`,\r\n      method: 'POST',\r\n      headers: {\r\n          'content-type': 'application/json',\r\n      },\r\n    },\r\n    {\r\n      manual: true,\r\n    }\r\n  );\r\n\r\n  if (loading || !schedule) return <Preloader />;\r\n  if (error)\r\n    return (\r\n      <p>\r\n        <FontAwesomeIcon icon={faExclamation} />\r\n      </p>\r\n    );\r\n\r\n  const handleChange = async (editedSection) => {\r\n    const editedSchedule = schedule.map(section => \r\n      section.sql_index === editedSection.sql_index \r\n      ? editedSection\r\n      : section);\r\n    setDirty(true);\r\n    setSchedule(editedSchedule);\r\n  };\r\n\r\n  const showMessage = (msg) => {\r\n    console.log(msg) // Leave it at this for now\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      showMessage(\"Saving...\");\r\n      await postSchedule({ data: schedule });\r\n      setDirty(false);\r\n    } catch (e) {\r\n      showMessage(\"Failed to save\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{backgroundColor:\"#cad3de\"}}>\r\n      <AppName />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          justifyContent: \"center\",\r\n          padding:\"0.5rem\"\r\n        }}\r\n      >\r\n      </div>\r\n      <div style={{marginTop:\"5rem\"}}>\r\n      <div\r\n        className=\"flex flex-col align-items-center align-content-center justify-content-center\"\r\n        style={{\r\n          dislay:\"flex\",\r\n          background: \"white\",\r\n          border: \"1px solid white\",\r\n          borderRadius: \"0.09cm\",\r\n          padding: \"1rem\",\r\n          fontFamily:\"'Rubik', sans-serif\",\r\n          fontSize:\"1.2rem\",\r\n          marginLeft:\"1rem\",\r\n          color:\"#4a5073\",\r\n        }}\r\n      >\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          trigger={[\"hover\", \"focus\"]}\r\n          overlay={<Tooltip>Save All settings</Tooltip>}\r\n        >\r\n          <Button className=\"m-0\" onClick={handleSave} disabled={!dirty}>\r\n            <FontAwesomeIcon icon={faSave} /> Save\r\n          </Button>\r\n        </OverlayTrigger>\r\n        {\r\n          schedule.map((section, i) => {\r\n            return (\r\n              <SectionRow key={i} section={section} onChange={handleChange} />\r\n            );\r\n          })\r\n        }  \r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}