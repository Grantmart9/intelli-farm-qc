{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\pages\\\\HomePage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useParams } from \"react-router-dom\";\nimport { Routes } from \"../routes\";\nimport useAxios from 'axios-hooks';\nimport Preloader from '../components/Preloader';\nimport Sidebar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\nimport IrrigationControl from \"./tables/IrrigationControl\";\nimport Fertilizer from './tables/Fertilizer';\nimport { IrrigationSchedule } from \"./tables/IrrigationSchedule\";\nimport { Dashboard } from \"./tables/Dashboard\";\nimport { Settings } from \"./tables/Settings\";\nimport { Backwash } from \"./tables/Backwash\";\nimport { Notifications } from \"./tables/Notifications\";\nimport { Pumps } from './tables/Pumps';\nimport { API_URL } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst farm_pages = {\n  irrigation: {\n    name: \"Irrigation Control\",\n    path: \"/irrigation\",\n    page: IrrigationControl\n  },\n  fertilizer: {\n    name: \"Fertilizer\",\n    path: \"/fertilizer\",\n    page: Fertilizer\n  },\n  schedule: {\n    name: \"Schedule\",\n    path: \"/schedule\",\n    page: IrrigationSchedule\n  },\n  dashboard: {\n    name: \"Dashboard\",\n    path: \"/dashboard\",\n    page: Dashboard\n  },\n  settings: {\n    name: \"Settings\",\n    path: \"/settings\",\n    page: Settings\n  },\n  backwash: {\n    name: \"Backwash\",\n    path: \"/backwash\",\n    page: Backwash\n  },\n  notifications: {\n    name: \"Notifications\",\n    path: \"/notifications\",\n    page: Notifications\n  },\n  pumps: {\n    name: \"Pumps\",\n    path: \"/pumps\",\n    page: Pumps\n  }\n};\n\nconst FarmRoutes = ({\n  prefix\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: Object.values(farm_pages).map((page, i) => /*#__PURE__*/_jsxDEV(RouteWithSidebar, {\n    exact: true,\n    path: `${prefix}/:farmId${page.path}`,\n    component: page.page\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this))\n}, void 0, false);\n\n_c = FarmRoutes;\n\nconst getNavItems = (prefix, layout) => {\n  const topItems = [];\n  const botItems = [];\n  const farmItems = Object.entries(layout.farms).map(([farmName, pages]) => ({\n    title: farmName,\n    action: {\n      type: \"accordion\",\n      items: Object.entries(pages).map(([pageName, path]) => {\n        const farmPage = farm_pages[pageName] || {\n          name: pageName\n        };\n        return {\n          title: farmPage.name,\n          action: {\n            type: \"link\",\n            path: `${prefix}/${path}`\n          }\n        };\n      })\n    }\n  }));\n  return [topItems, farmItems, botItems].flat();\n};\n\nconst RouteWithSidebar = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    clientId\n  } = useParams();\n  const prefix = `/${clientId}`;\n  const [{\n    data: appLayout,\n    loading,\n    error\n  }] = useAxios(`${API_URL}/${clientId}/get_app_layout`);\n  if (loading) return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"--sidenav-width\": \"400px\"\n      },\n      className: \"absolute inset-0\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        title: appLayout.company_name,\n        items: getNavItems(prefix, appLayout)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RouteWithSidebar, \"+cayimjQGIsz/QL+YK5CYfhfK54=\", false, function () {\n  return [useParams, useAxios];\n});\n\n_c2 = RouteWithSidebar;\n\nconst prefixRoutes = (prefix, routes) => Object.entries(routes).map(([name, {\n  path\n}]) => ({\n  [name]: {\n    path: `${prefix}${path}`\n  }\n})).reduce((acc, obj) => Object.assign(acc, obj), {});\n\nconst RouteInner = () => {\n  _s2();\n\n  const {\n    clientId\n  } = useParams();\n  const prefix = `/${clientId}`;\n  const routes = prefixRoutes(prefix, Routes);\n  console.log(routes);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(RouteWithSidebar, {\n      exact: true,\n      path: routes.DashboardOverview.path,\n      component: DashboardOverview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: routes.NotFound.path,\n      component: () => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FarmRoutes, {\n      prefix: prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: routes.NotFound.path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(RouteInner, \"H/XCu9adYdg4gInOqVFruP/BW2w=\", false, function () {\n  return [useParams];\n});\n\n_c3 = RouteInner;\n\nconst HomePage = () => /*#__PURE__*/_jsxDEV(Switch, {\n  children: /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/:clientId\",\n    component: RouteInner\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 146,\n  columnNumber: 3\n}, this);\n\n_c4 = HomePage;\nexport default HomePage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FarmRoutes\");\n$RefreshReg$(_c2, \"RouteWithSidebar\");\n$RefreshReg$(_c3, \"RouteInner\");\n$RefreshReg$(_c4, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/pages/HomePage.js"],"names":["React","Route","Switch","Redirect","useParams","Routes","useAxios","Preloader","Sidebar","Footer","Navbar","DashboardOverview","IrrigationControl","Fertilizer","IrrigationSchedule","Dashboard","Settings","Backwash","Notifications","Pumps","API_URL","farm_pages","irrigation","name","path","page","fertilizer","schedule","dashboard","settings","backwash","notifications","pumps","FarmRoutes","prefix","Object","values","map","i","getNavItems","layout","topItems","botItems","farmItems","entries","farms","farmName","pages","title","action","type","items","pageName","farmPage","flat","RouteWithSidebar","component","Component","rest","clientId","data","appLayout","loading","error","props","company_name","prefixRoutes","routes","reduce","acc","obj","assign","RouteInner","console","log","NotFound","HomePage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Route, Switch, Redirect, useParams } from \"react-router-dom\";\r\nimport { Routes } from \"../routes\";\r\nimport useAxios from 'axios-hooks';\r\nimport Preloader from '../components/Preloader';\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\r\nimport IrrigationControl from \"./tables/IrrigationControl\";\r\nimport Fertilizer from './tables/Fertilizer';\r\nimport { IrrigationSchedule } from \"./tables/IrrigationSchedule\";\r\nimport { Dashboard } from \"./tables/Dashboard\";\r\nimport { Settings } from \"./tables/Settings\";\r\nimport { Backwash } from \"./tables/Backwash\";\r\nimport { Notifications } from \"./tables/Notifications\";\r\nimport {Pumps} from './tables/Pumps';\r\nimport { API_URL } from '../api';\r\n\r\nconst farm_pages = {\r\n  irrigation: {\r\n    name: \"Irrigation Control\",\r\n    path: \"/irrigation\",\r\n    page: IrrigationControl\r\n  },\r\n  fertilizer: {\r\n    name: \"Fertilizer\",\r\n    path: \"/fertilizer\",\r\n    page: Fertilizer\r\n  },\r\n  schedule: {\r\n    name: \"Schedule\",\r\n    path: \"/schedule\",\r\n    page: IrrigationSchedule\r\n  },\r\n  dashboard: {\r\n    name: \"Dashboard\",\r\n    path: \"/dashboard\",\r\n    page: Dashboard\r\n  },\r\n  settings: {\r\n    name: \"Settings\",\r\n    path: \"/settings\",\r\n    page: Settings\r\n  },\r\n  backwash: {\r\n    name: \"Backwash\",\r\n    path: \"/backwash\",\r\n    page: Backwash\r\n  },\r\n  notifications: {\r\n    name: \"Notifications\",\r\n    path: \"/notifications\",\r\n    page: Notifications\r\n  },\r\n  pumps: {\r\n    name: \"Pumps\",\r\n    path: \"/pumps\",\r\n    page: Pumps\r\n  }\r\n};\r\n\r\nconst FarmRoutes = ({ prefix }) =>\r\n  <>\r\n    {\r\n      Object.values(farm_pages).map((page, i) =>\r\n        <RouteWithSidebar key={i} exact path={`${prefix}/:farmId${page.path}`} component={page.page} />)\r\n    }\r\n  </>\r\n\r\nconst getNavItems = (prefix, layout) => {\r\n  const topItems = [];\r\n  const botItems = [];\r\n\r\n  const farmItems = Object.entries(layout.farms).map(([farmName, pages]) => ({\r\n    title: farmName,\r\n    action: {\r\n      type: \"accordion\",\r\n      items: Object.entries(pages).map(([pageName, path]) => {\r\n        const farmPage = farm_pages[pageName] || { name: pageName };\r\n        return {\r\n          title: farmPage.name,\r\n          action: {\r\n            type: \"link\",\r\n            path: `${prefix}/${path}`\r\n          }\r\n        };\r\n      })\r\n    }\r\n  }))\r\n  return [topItems, farmItems, botItems].flat();\r\n}\r\n\r\nconst RouteWithSidebar = ({ component: Component, ...rest }) => {\r\n\r\n  const { clientId } = useParams();\r\n  const prefix = `/${clientId}`;\r\n\r\n  const [{ data: appLayout, loading, error }] = useAxios(\r\n    `${API_URL}/${clientId}/get_app_layout`\r\n  );\r\n\r\n  if (loading) return <Preloader />;\r\n  if (error) return <p>Error!</p>;\r\n\r\n  return (\r\n    <Route {...rest} render={props => (\r\n      <div style={{ \"--sidenav-width\": \"400px\" }} className=\"absolute inset-0\">\r\n        <Sidebar title={appLayout.company_name} items={getNavItems(prefix, appLayout)} />\r\n\r\n        <main className=\"content\">\r\n          <Navbar />\r\n          <Component {...props} />\r\n          <Footer />\r\n        </main>\r\n      </div>\r\n    )}\r\n    />\r\n  );\r\n};\r\nconst prefixRoutes = (prefix, routes) => Object.entries(routes)\r\n  .map(([name, { path }]) => ({ [name]: { path: `${prefix}${path}` } }))\r\n  .reduce((acc, obj) => Object.assign(acc, obj), {});\r\n\r\nconst RouteInner = () => {\r\n  const { clientId } = useParams();\r\n  const prefix = `/${clientId}`;\r\n  const routes = prefixRoutes(prefix, Routes);\r\n  console.log(routes);\r\n  return (\r\n    <Switch>\r\n      <RouteWithSidebar\r\n        exact\r\n        path={routes.DashboardOverview.path}\r\n        component={DashboardOverview}\r\n      />\r\n      <Route exact path={routes.NotFound.path} component={() => <p>Not Found</p>} />\r\n      <FarmRoutes prefix={prefix} />\r\n      <Redirect to={routes.NotFound.path} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst HomePage = () => (\r\n  <Switch>\r\n    <Route path=\"/:clientId\" component={RouteInner} />\r\n  </Switch>\r\n);\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}