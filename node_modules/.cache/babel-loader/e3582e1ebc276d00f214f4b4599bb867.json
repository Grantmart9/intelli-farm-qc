{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { createContext, createElement, Component, useContext, useRef, useMemo, Fragment } from 'react';\nimport { bool, number } from 'prop-types';\nimport { withStyles, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { w as withDefaultProps } from './LocalizationProvider-24410efe.js';\nimport { V as VIEW_HEIGHT, u as useUtils } from './dimensions-2cbdfb98.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { u as useGlobalKeyDown, k as keycode } from './useKeyDown-b5264e56.js';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf'; // consider getting rid from wrapper variant\n\nvar WrapperVariantContext = createContext(null);\nvar IsStaticVariantContext = createContext(false);\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar ClockPointer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClockPointer, _React$Component);\n\n  var _super = _createSuper(ClockPointer);\n\n  function ClockPointer() {\n    var _this;\n\n    _classCallCheck(this, ClockPointer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      toAnimateTransform: false,\n      previousType: undefined\n    };\n\n    _this.getAngleStyle = function () {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          isInner = _this$props.isInner,\n          type = _this$props.type;\n      var max = type === 'hours' ? 12 : 60;\n      var angle = 360 / max * value;\n\n      if (type === 'hours' && value > 12) {\n        angle -= 360; // round up angle to max 360 degrees\n      }\n\n      return {\n        height: isInner ? '26%' : '40%',\n        transform: \"rotateZ(\".concat(angle, \"deg)\")\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ClockPointer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          hasSelected = _this$props2.hasSelected,\n          isInner = _this$props2.isInner,\n          type = _this$props2.type,\n          value = _this$props2.value,\n          other = _objectWithoutProperties(_this$props2, [\"classes\", \"hasSelected\", \"isInner\", \"type\", \"value\"]);\n\n      return /*#__PURE__*/createElement(\"div\", _extends({}, other, {\n        style: this.getAngleStyle(),\n        className: clsx(classes.pointer, this.state.toAnimateTransform && classes.animateTransform)\n      }), /*#__PURE__*/createElement(\"div\", {\n        className: clsx(classes.thumb, hasSelected && classes.noPoint)\n      }));\n    }\n  }]);\n\n  return ClockPointer;\n}(Component);\n\nClockPointer.getDerivedStateFromProps = function (nextProps, state) {\n  if (nextProps.type !== state.previousType) {\n    return {\n      toAnimateTransform: true,\n      previousType: nextProps.type\n    };\n  }\n\n  return {\n    toAnimateTransform: false,\n    previousType: nextProps.type\n  };\n};\n\nvar styles = function styles(theme) {\n  return createStyles({\n    pointer: {\n      width: 2,\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      left: 'calc(50% - 1px)',\n      bottom: '50%',\n      transformOrigin: 'center bottom 0px'\n    },\n    animateTransform: {\n      transition: theme.transitions.create(['transform', 'height'])\n    },\n    thumb: {\n      width: 4,\n      height: 4,\n      backgroundColor: theme.palette.primary.contrastText,\n      borderRadius: '100%',\n      position: 'absolute',\n      top: -21,\n      left: -15,\n      border: \"14px solid \".concat(theme.palette.primary.main),\n      boxSizing: 'content-box'\n    },\n    noPoint: {\n      backgroundColor: theme.palette.primary.main\n    }\n  });\n};\n\nvar ClockPointer$1 = withStyles(styles, {\n  name: 'MuiPickersClockPointer'\n})(ClockPointer);\n\nvar getMeridiem = function getMeridiem(date, utils) {\n  if (!date) {\n    return null;\n  }\n\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\n\nvar convertValueToMeridiem = function convertValueToMeridiem(value, meridiem, ampm) {\n  if (ampm) {\n    var currentMeridiem = value >= 12 ? 'pm' : 'am';\n\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n\n  return value;\n};\n\nvar convertToMeridiem = function convertToMeridiem(time, meridiem, ampm, utils) {\n  var newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\n\nvar clockCenter = {\n  x: 260 / 2,\n  y: 260 / 2\n};\nvar baseClockPoint = {\n  x: clockCenter.x,\n  y: 0\n};\nvar cx = baseClockPoint.x - clockCenter.x;\nvar cy = baseClockPoint.y - clockCenter.y;\n\nvar rad2deg = function rad2deg(rad) {\n  return rad * 57.29577951308232;\n};\n\nvar getAngleValue = function getAngleValue(step, offsetX, offsetY) {\n  var x = offsetX - clockCenter.x;\n  var y = offsetY - clockCenter.y;\n  var atan = Math.atan2(cx, cy) - Math.atan2(x, y);\n  var deg = rad2deg(atan);\n  deg = Math.round(deg / step) * step;\n  deg %= 360;\n  var value = Math.floor(deg / step) || 0;\n  var delta = Math.pow(x, 2) + Math.pow(y, 2);\n  var distance = Math.sqrt(delta);\n  return {\n    value: value,\n    distance: distance\n  };\n};\n\nvar getMinutes = function getMinutes(offsetX, offsetY) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var angleStep = step * 6;\n\n  var _getAngleValue = getAngleValue(angleStep, offsetX, offsetY),\n      value = _getAngleValue.value;\n\n  value = value * step % 60;\n  return value;\n};\n\nvar getHours = function getHours(offsetX, offsetY, ampm) {\n  var _getAngleValue2 = getAngleValue(30, offsetX, offsetY),\n      value = _getAngleValue2.value,\n      distance = _getAngleValue2.distance;\n\n  value = value || 12;\n\n  if (!ampm) {\n    if (distance < 90) {\n      value += 12;\n      value %= 24;\n    }\n  } else {\n    value %= 12;\n  }\n\n  return value;\n};\n\nfunction getSecondsInDay(date, utils) {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n}\n\nvar createIsAfterIgnoreDatePart = function createIsAfterIgnoreDatePart(disableIgnoringDatePartForTimeValidation, utils) {\n  return function (dateLeft, dateRight) {\n    if (disableIgnoringDatePartForTimeValidation) {\n      return utils.isAfter(dateLeft, dateRight);\n    }\n\n    return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n  };\n};\n\nvar validateTime = function validateTime(utils, value, _ref) {\n  var minTime = _ref.minTime,\n      maxTime = _ref.maxTime,\n      shouldDisableTime = _ref.shouldDisableTime,\n      disableIgnoringDatePartForTimeValidation = _ref.disableIgnoringDatePartForTimeValidation;\n  var date = utils.date(value);\n  var isAfterComparingFn = createIsAfterIgnoreDatePart(Boolean(disableIgnoringDatePartForTimeValidation), utils);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(minTime && isAfterComparingFn(minTime, date)):\n      return 'minTime';\n\n    case Boolean(maxTime && isAfterComparingFn(date, maxTime)):\n      return 'maxTime';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getHours(date), 'hours')):\n      return 'shouldDisableTime-hours';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getMinutes(date), 'minutes')):\n      return 'shouldDisableTime-minutes';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getSeconds(date), 'seconds')):\n      return 'shouldDisableTime-seconds';\n\n    default:\n      return null;\n  }\n};\n\nvar muiComponentConfig = {\n  name: 'MuiPickersClock'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'relative',\n      minHeight: VIEW_HEIGHT,\n      alignItems: 'center'\n    },\n    clock: {\n      backgroundColor: 'rgba(0,0,0,.07)',\n      borderRadius: '50%',\n      height: 260,\n      width: 260,\n      position: 'relative',\n      pointerEvents: 'none'\n    },\n    squareMask: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'auto',\n      outline: 'none',\n      touchActions: 'none',\n      userSelect: 'none',\n      '&:active': {\n        cursor: 'move'\n      }\n    },\n    pin: {\n      width: 6,\n      height: 6,\n      borderRadius: '50%',\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    amButton: {\n      zIndex: 1,\n      left: 8,\n      position: 'absolute',\n      bottom: 8\n    },\n    pmButton: {\n      zIndex: 1,\n      position: 'absolute',\n      bottom: 8,\n      right: 8\n    },\n    meridiemButtonSelected: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light\n      }\n    }\n  };\n}, muiComponentConfig);\nvar Clock = withDefaultProps(muiComponentConfig, function (_ref) {\n  var _useGlobalKeyDown;\n\n  var allowKeyboardControl = _ref.allowKeyboardControl,\n      ampm = _ref.ampm,\n      _ref$ampmInClock = _ref.ampmInClock,\n      ampmInClock = _ref$ampmInClock === void 0 ? false : _ref$ampmInClock,\n      numbersElementsArray = _ref.children,\n      date = _ref.date,\n      handleMeridiemChange = _ref.handleMeridiemChange,\n      isTimeDisabled = _ref.isTimeDisabled,\n      meridiemMode = _ref.meridiemMode,\n      _ref$minutesStep = _ref.minutesStep,\n      minutesStep = _ref$minutesStep === void 0 ? 1 : _ref$minutesStep,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      value = _ref.value;\n  var utils = useUtils();\n  var classes = useStyles();\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var isMoving = useRef(false);\n  var isSelectedTimeDisabled = isTimeDisabled(value, type);\n  var isPointerInner = !ampm && type === 'hours' && (value < 1 || value > 12);\n\n  var handleValueChange = function handleValueChange(newValue, isFinish) {\n    if (isTimeDisabled(newValue, type)) {\n      return;\n    }\n\n    onChange(newValue, isFinish);\n  };\n\n  var setTime = function setTime(e, isFinish) {\n    var offsetX = e.offsetX,\n        offsetY = e.offsetY;\n\n    if (typeof offsetX === 'undefined') {\n      var rect = e.target.getBoundingClientRect();\n      offsetX = e.changedTouches[0].clientX - rect.left;\n      offsetY = e.changedTouches[0].clientY - rect.top;\n    }\n\n    var value = type === 'seconds' || type === 'minutes' ? getMinutes(offsetX, offsetY, minutesStep) : getHours(offsetX, offsetY, Boolean(ampm));\n    handleValueChange(value, isFinish);\n  };\n\n  var handleTouchMove = function handleTouchMove(e) {\n    isMoving.current = true;\n    setTime(e, 'shallow');\n  };\n\n  var handleTouchEnd = function handleTouchEnd(e) {\n    if (isMoving.current) {\n      setTime(e, 'finish');\n      isMoving.current = false;\n    }\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    e.preventDefault();\n    e.stopPropagation(); // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n\n    var isButtonPressed = typeof e.buttons === 'undefined' ? e.nativeEvent.which === 1 : e.buttons === 1;\n\n    if (isButtonPressed) {\n      setTime(e.nativeEvent, 'shallow');\n    }\n  };\n\n  var handleMouseUp = function handleMouseUp(e) {\n    if (isMoving.current) {\n      isMoving.current = false;\n    }\n\n    setTime(e.nativeEvent, 'finish');\n  };\n\n  var hasSelected = useMemo(function () {\n    if (type === 'hours') {\n      return true;\n    }\n\n    return value % 5 === 0;\n  }, [type, value]);\n  var keyboardControlStep = type === 'minutes' ? minutesStep : 1;\n  useGlobalKeyDown(Boolean(allowKeyboardControl !== null && allowKeyboardControl !== void 0 ? allowKeyboardControl : wrapperVariant !== 'static') && !isMoving.current, (_useGlobalKeyDown = {}, _defineProperty(_useGlobalKeyDown, keycode.Home, function () {\n    return handleValueChange(0, 'partial');\n  }), _defineProperty(_useGlobalKeyDown, keycode.End, function () {\n    return handleValueChange(type === 'minutes' ? 59 : 23, 'partial');\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowUp, function () {\n    return handleValueChange(value + keyboardControlStep, 'partial');\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowDown, function () {\n    return handleValueChange(value - keyboardControlStep, 'partial');\n  }), _useGlobalKeyDown));\n  return /*#__PURE__*/createElement(\"div\", {\n    className: classes.root\n  }, /*#__PURE__*/createElement(\"div\", {\n    className: classes.clock\n  }, /*#__PURE__*/createElement(\"div\", {\n    role: \"menu\",\n    tabIndex: -1,\n    className: classes.squareMask,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    onMouseUp: handleMouseUp,\n    onMouseMove: handleMouseMove\n  }), !isSelectedTimeDisabled && /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(\"div\", {\n    className: classes.pin\n  }), date && /*#__PURE__*/createElement(ClockPointer$1, {\n    type: type,\n    value: value,\n    isInner: isPointerInner,\n    hasSelected: hasSelected,\n    \"aria-live\": \"polite\",\n    \"aria-label\": \"Selected time \".concat(utils.format(date, 'fullTime'))\n  })), numbersElementsArray), ampm && (wrapperVariant === 'desktop' || ampmInClock) && /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(IconButton, {\n    \"data-mui-test\": \"in-clock-am-btn\",\n    onClick: function onClick() {\n      return handleMeridiemChange('am');\n    },\n    disabled: meridiemMode === null,\n    className: clsx(classes.amButton, meridiemMode === 'am' && classes.meridiemButtonSelected)\n  }, /*#__PURE__*/createElement(Typography, {\n    variant: \"caption\"\n  }, \"AM\")), /*#__PURE__*/createElement(IconButton, {\n    disabled: meridiemMode === null,\n    \"data-mui-test\": \"in-clock-pm-btn\",\n    onClick: function onClick() {\n      return handleMeridiemChange('pm');\n    },\n    className: clsx(classes.pmButton, meridiemMode === 'pm' && classes.meridiemButtonSelected)\n  }, /*#__PURE__*/createElement(Typography, {\n    variant: \"caption\"\n  }, \"PM\"))));\n});\nClock.defaultProps = {\n  ampm: bool,\n  minutesStep: number\n};\nClock.displayName = 'Clock';\nexport { Clock as C, IsStaticVariantContext as I, WrapperVariantContext as W, createIsAfterIgnoreDatePart as a, convertValueToMeridiem as b, convertToMeridiem as c, getMeridiem as g, useStyles as u, validateTime as v };","map":{"version":3,"sources":["../src/wrappers/WrapperVariantContext.tsx","../src/views/Clock/ClockPointer.tsx","../src/_helpers/time-utils.ts","../src/views/Clock/Clock.tsx"],"names":["WrapperVariantContext","createContext","IsStaticVariantContext","ClockPointer","getDerivedStateFromProps","nextProps","state","toAnimateTransform","previousType","type","undefined","value","isInner","max","angle","height","transform","classes","hasSelected","other","clsx","styles","createStyles","pointer","width","backgroundColor","theme","position","left","bottom","transformOrigin","animateTransform","transition","thumb","borderRadius","top","border","boxSizing","noPoint","main","name","getMeridiem","utils","convertValueToMeridiem","currentMeridiem","meridiem","convertToMeridiem","newHoursAmount","clockCenter","x","y","baseClockPoint","cx","cy","rad2deg","rad","getAngleValue","offsetX","offsetY","atan","Math","deg","delta","distance","getMinutes","step","angleStep","getHours","createIsAfterIgnoreDatePart","getSecondsInDay","validateTime","minTime","maxTime","shouldDisableTime","disableIgnoringDatePartForTimeValidation","date","isAfterComparingFn","Boolean","muiComponentConfig","useStyles","makeStyles","root","display","justifyContent","minHeight","alignItems","clock","pointerEvents","squareMask","outline","touchActions","userSelect","cursor","pin","amButton","zIndex","pmButton","right","meridiemButtonSelected","color","light","Clock","withDefaultProps","allowKeyboardControl","ampm","ampmInClock","children","numbersElementsArray","handleMeridiemChange","isTimeDisabled","meridiemMode","minutesStep","onChange","useUtils","wrapperVariant","React","isMoving","isSelectedTimeDisabled","isPointerInner","handleValueChange","setTime","e","rect","handleTouchMove","handleTouchEnd","handleMouseMove","isButtonPressed","handleMouseUp","keyboardControlStep","useGlobalKeyDown","keycode","PropTypes"],"mappings":";;;;;;;;;;;;;;;;yEAGA;;IACaA,qBAAqB,GAAGC,aAAa,CAAA,IAAA,C;IAErCC,sBAAsB,GAAGD,aAAa,CAAA,KAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICQtCE,YAAb,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,YAAA,EAAA,gBAAA,CAAA;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,YAAA,CAAA;;AAAA,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAAA,KAAA,GAkBiB;AACbI,MAAAA,kBAAkB,EADL,KAAA;AAEbC,MAAAA,YAAY,EAAEE;AAFD,KAlBjB;;AAAA,IAAA,KAAA,CAAA,aAAA,GAuByB,YAAM;AAAA,UAAA,WAAA,GACM,KAAA,CADN,KAAA;AAAA,UACnBC,KADmB,GAAA,WAAA,CAAA,KAAA;AAAA,UACZC,OADY,GAAA,WAAA,CAAA,OAAA;AAAA,UACHH,IADG,GAAA,WAAA,CAAA,IAAA;AAG3B,UAAMI,GAAG,GAAGJ,IAAI,KAAJA,OAAAA,GAAAA,EAAAA,GAAZ,EAAA;AACA,UAAIK,KAAK,GAAI,MAAD,GAAC,GAAb,KAAA;;AAEA,UAAIL,IAAI,KAAJA,OAAAA,IAAoBE,KAAK,GAA7B,EAAA,EAAoC;AAClCG,QAAAA,KAAK,IAD6B,GAClCA,CADkC,CAAA;AAEnC;;AAED,aAAO;AACLC,QAAAA,MAAM,EAAEH,OAAO,GAAA,KAAA,GADV,KAAA;AAELI,QAAAA,SAAS,EAAA,WAAA,MAAA,CAAA,KAAA,EAAA,MAAA;AAFJ,OAAP;AAjCJ,KAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,YAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,KAAA,EAAA,SAAA,MAAA,GAuCkB;AAAA,UAAA,YAAA,GACmD,KADnD,KAAA;AAAA,UACNC,OADM,GAAA,YAAA,CAAA,OAAA;AAAA,UACGC,WADH,GAAA,YAAA,CAAA,WAAA;AAAA,UACgBN,OADhB,GAAA,YAAA,CAAA,OAAA;AAAA,UACyBH,IADzB,GAAA,YAAA,CAAA,IAAA;AAAA,UAC+BE,KAD/B,GAAA,YAAA,CAAA,KAAA;AAAA,UACyCQ,KADzC,GAAA,wBAAA,CAAA,YAAA,EAAA,CAAA,SAAA,EAAA,aAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAAA;;AAGd,aAAA,aACE,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,QAAA,KAAK,EAAE,KAFT,aAES,EAFT;AAGE,QAAA,SAAS,EAAEC,IAAI,CAACH,OAAO,CAAR,OAAA,EACe,KAAA,KAAA,CADf,kBACe,IAA3BA,OAAO,CADK,gBAAA;AAHjB,OAAA,CAAA,EAAA,aAOE,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EAAEG,IAAI,CAACH,OAAO,CAAR,KAAA,EACMC,WADN,IACZD,OAAO,CADK,OAAA;AADjB,OAAA,CAPF,CADF;AAeD;AAzDH,GAAA,CAAA,CAAA;;AAAA,SAAA,YAAA;AAAA,CAAA,CAAA,SAAA,C;;AAAad,YAAAA,CACGC,wBADHD,GAC8B,UAAA,SAAA,EAAA,KAAA,EAGpC;AACH,MAAIE,SAAS,CAATA,IAAAA,KAAmBC,KAAK,CAA5B,YAAA,EAA2C;AACzC,WAAO;AACLC,MAAAA,kBAAkB,EADb,IAAA;AAELC,MAAAA,YAAY,EAAEH,SAAS,CAACI;AAFnB,KAAP;AAID;;AAED,SAAO;AACLF,IAAAA,kBAAkB,EADb,KAAA;AAELC,IAAAA,YAAY,EAAEH,SAAS,CAACI;AAFnB,GAAP;AAID,CAhBUN;;AA4DN,IAAMkB,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAA;AAAA,SACpBC,YAAY,CAAC;AACXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EADE,CAAA;AAEPC,MAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAFV,IAAA;AAGPC,MAAAA,QAAQ,EAHD,UAAA;AAIPC,MAAAA,IAAI,EAJG,iBAAA;AAKPC,MAAAA,MAAM,EALC,KAAA;AAMPC,MAAAA,eAAe,EAAE;AANV,KADE;AASXC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,UAAU,EAAEN,KAAK,CAALA,WAAAA,CAAAA,MAAAA,CAAyB,CAAA,WAAA,EAAzBA,QAAyB,CAAzBA;AADI,KATP;AAYXO,IAAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EADA,CAAA;AAELT,MAAAA,MAAM,EAFD,CAAA;AAGLU,MAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAHZ,YAAA;AAILQ,MAAAA,YAAY,EAJP,MAAA;AAKLP,MAAAA,QAAQ,EALH,UAAA;AAMLQ,MAAAA,GAAG,EAAE,CANA,EAAA;AAOLP,MAAAA,IAAI,EAAE,CAPD,EAAA;AAQLQ,MAAAA,MAAM,EAAA,cAAA,MAAA,CAAgBV,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CARjB,IAQC,CARD;AASLW,MAAAA,SAAS,EAAE;AATN,KAZI;AAuBXC,IAAAA,OAAO,EAAE;AACPb,MAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAAsBa;AADhC;AAvBE,GAAD,CADQ;AAAf,CAAA;;AA6BP,IAAA,cAAA,GAAe,UAAU,CAAA,MAAA,EAAS;AAChCC,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAAf,YAAe,CAAf;;IClGaC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA,KAAA,EAAuD;AAChF,MAAI,CAAJ,IAAA,EAAW;AACT,WAAA,IAAA;AACD;;AAED,SAAOC,KAAK,CAALA,QAAAA,CAAAA,IAAAA,KAAAA,EAAAA,GAAAA,IAAAA,GAAP,IAAA;AACD,C;;IAEYC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAsD;AAC1F,MAAA,IAAA,EAAU;AACR,QAAMC,eAAe,GAAGjC,KAAK,IAALA,EAAAA,GAAAA,IAAAA,GAAxB,IAAA;;AACA,QAAIiC,eAAe,KAAnB,QAAA,EAAkC;AAChC,aAAOC,QAAQ,KAARA,IAAAA,GAAoBlC,KAAK,GAAzBkC,EAAAA,GAAiClC,KAAK,GAA7C,EAAA;AACD;AACF;;AAED,SAAA,KAAA;AACD,C;;IAEYmC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAK5B;AACH,MAAMC,cAAc,GAAGJ,sBAAsB,CAACD,KAAK,CAALA,QAAAA,CAAD,IAACA,CAAD,EAAA,QAAA,EAA7C,IAA6C,CAA7C;AACA,SAAOA,KAAK,CAALA,QAAAA,CAAAA,IAAAA,EAAP,cAAOA,CAAP;AACD,C;;AAED,IAAMM,WAAW,GAAG;AAClBC,EAAAA,CAAC,EAAE,MADe,CAAA;AAElBC,EAAAA,CAAC,EAAE,MAAM;AAFS,CAApB;AAKA,IAAMC,cAAc,GAAG;AACrBF,EAAAA,CAAC,EAAED,WAAW,CADO,CAAA;AAErBE,EAAAA,CAAC,EAAE;AAFkB,CAAvB;AAKA,IAAME,EAAE,GAAGD,cAAc,CAAdA,CAAAA,GAAmBH,WAAW,CAAzC,CAAA;AACA,IAAMK,EAAE,GAAGF,cAAc,CAAdA,CAAAA,GAAmBH,WAAW,CAAzC,CAAA;;AAEA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAAA,GAAA,EAAA;AAAA,SAAiBC,GAAG,GAApB,iBAAA;AAAhB,CAAA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAoD;AACxE,MAAMP,CAAC,GAAGQ,OAAO,GAAGT,WAAW,CAA/B,CAAA;AACA,MAAME,CAAC,GAAGQ,OAAO,GAAGV,WAAW,CAA/B,CAAA;AAEA,MAAMW,IAAI,GAAGC,IAAI,CAAJA,KAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAAqBA,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAAlC,CAAkCA,CAAlC;AAEA,MAAIC,GAAG,GAAGP,OAAO,CAAjB,IAAiB,CAAjB;AACAO,EAAAA,GAAG,GAAGD,IAAI,CAAJA,KAAAA,CAAWC,GAAG,GAAdD,IAAAA,IAANC,IAAAA;AACAA,EAAAA,GAAG,IAAHA,GAAAA;AAEA,MAAMlD,KAAK,GAAGiD,IAAI,CAAJA,KAAAA,CAAWC,GAAG,GAAdD,IAAAA,KAAd,CAAA;AACA,MAAME,KAAK,GAAGF,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAAA,CAAAA,IAAiBA,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAA/B,CAA+BA,CAA/B;AACA,MAAMG,QAAQ,GAAGH,IAAI,CAAJA,IAAAA,CAAjB,KAAiBA,CAAjB;AAEA,SAAO;AAAEjD,IAAAA,KAAK,EAAP,KAAA;AAASoD,IAAAA,QAAQ,EAARA;AAAT,GAAP;AAdF,CAAA;;AAiBO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,OAAA,EAAA,OAAA,EAAgD;AAAA,MAAbC,IAAa,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,CAAM;AACxE,MAAMC,SAAS,GAAGD,IAAI,GAAtB,CAAA;;AADwE,MAAA,cAAA,GAExDT,aAAa,CAAA,SAAA,EAAA,OAAA,EAF2C,OAE3C,CAF2C;AAAA,MAElE7C,KAFkE,GAAA,cAAA,CAAA,KAAA;;AAGxEA,EAAAA,KAAK,GAAIA,KAAK,GAAN,IAACA,GAATA,EAAAA;AAEA,SAAA,KAAA;AALK,CAAA;;AAQA,IAAMwD,QAAQ,GAAG,SAAXA,QAAW,CAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAqD;AAAA,MAAA,eAAA,GACjDX,aAAa,CAAA,EAAA,EAAA,OAAA,EADoC,OACpC,CADoC;AAAA,MACrE7C,KADqE,GAAA,eAAA,CAAA,KAAA;AAAA,MAC9DoD,QAD8D,GAAA,eAAA,CAAA,QAAA;;AAE3EpD,EAAAA,KAAK,GAAGA,KAAK,IAAbA,EAAAA;;AAEA,MAAI,CAAJ,IAAA,EAAW;AACT,QAAIoD,QAAQ,GAAZ,EAAA,EAAmB;AACjBpD,MAAAA,KAAK,IAALA,EAAAA;AACAA,MAAAA,KAAK,IAALA,EAAAA;AACD;AAJH,GAAA,MAKO;AACLA,IAAAA,KAAK,IAALA,EAAAA;AACD;;AAED,SAAA,KAAA;AAbK,CAAA;;AAgBA,SAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAkE;AACvE,SAAO+B,KAAK,CAALA,QAAAA,CAAAA,IAAAA,IAAAA,IAAAA,GAA8BA,KAAK,CAALA,UAAAA,CAAAA,IAAAA,IAA9BA,EAAAA,GAA4DA,KAAK,CAALA,UAAAA,CAAnE,IAAmEA,CAAnE;AACD;;IAEY0B,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAA,wCAAA,EAAA,KAAA,EAAA;AAAA,SAGtC,UAAA,QAAA,EAAA,SAAA,EAA2C;AAC9C,QAAA,wCAAA,EAA8C;AAC5C,aAAO1B,KAAK,CAALA,OAAAA,CAAAA,QAAAA,EAAP,SAAOA,CAAP;AACD;;AAED,WAAO2B,eAAe,CAAA,QAAA,EAAfA,KAAe,CAAfA,GAAmCA,eAAe,CAAA,SAAA,EAAzD,KAAyD,CAAzD;AARyC,GAAA;AAAA,C;;IAkC9BC,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EASvB;AAAA,MALDC,OAKC,GAAA,IAAA,CALDA,OAKC;AAAA,MAJDC,OAIC,GAAA,IAAA,CAJDA,OAIC;AAAA,MAHDC,iBAGC,GAAA,IAAA,CAHDA,iBAGC;AAAA,MAFDC,wCAEC,GAAA,IAAA,CAFDA,wCAEC;AACH,MAAMC,IAAI,GAAGjC,KAAK,CAALA,IAAAA,CAAb,KAAaA,CAAb;AACA,MAAMkC,kBAAkB,GAAGR,2BAA2B,CACpDS,OAAO,CAD6C,wCAC7C,CAD6C,EAAtD,KAAsD,CAAtD;;AAKA,MAAIlE,KAAK,KAAT,IAAA,EAAoB;AAClB,WAAA,IAAA;AACD;;AAED,UAAA,IAAA;AACE,SAAK,CAAC+B,KAAK,CAALA,OAAAA,CAAN,KAAMA,CAAN;AACE,aAAA,aAAA;;AAEF,SAAKmC,OAAO,CAACN,OAAO,IAAIK,kBAAkB,CAAA,OAAA,EAA1C,IAA0C,CAA9B,CAAZ;AACE,aAAA,SAAA;;AAEF,SAAKC,OAAO,CAACL,OAAO,IAAII,kBAAkB,CAAA,IAAA,EAA1C,OAA0C,CAA9B,CAAZ;AACE,aAAA,SAAA;;AAEF,SAAKC,OAAO,CAACJ,iBAAiB,IAAIA,iBAAiB,CAAC/B,KAAK,CAALA,QAAAA,CAAD,IAACA,CAAD,EAAnD,OAAmD,CAAvC,CAAZ;AACE,aAAA,yBAAA;;AAEF,SAAKmC,OAAO,CAACJ,iBAAiB,IAAIA,iBAAiB,CAAC/B,KAAK,CAALA,UAAAA,CAAD,IAACA,CAAD,EAAnD,SAAmD,CAAvC,CAAZ;AACE,aAAA,2BAAA;;AAEF,SAAKmC,OAAO,CAACJ,iBAAiB,IAAIA,iBAAiB,CAAC/B,KAAK,CAALA,UAAAA,CAAD,IAACA,CAAD,EAAnD,SAAmD,CAAvC,CAAZ;AACE,aAAA,2BAAA;;AAEF;AACE,aAAA,IAAA;AApBJ;AAsBD,C;;ACzID,IAAMoC,kBAAkB,GAAG;AACzBtC,EAAAA,IAAI,EAAE;AADmB,CAA3B;IAIauC,SAAS,GAAGC,UAAU,CACjC,UAAA,KAAA,EAAK;AAAA,SAAK;AACRC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EADH,MAAA;AAEJC,MAAAA,cAAc,EAFV,QAAA;AAGJxD,MAAAA,QAAQ,EAHJ,UAAA;AAIJyD,MAAAA,SAAS,EAJL,WAAA;AAKJC,MAAAA,UAAU,EAAE;AALR,KADE;AAQRC,IAAAA,KAAK,EAAE;AACL7D,MAAAA,eAAe,EADV,iBAAA;AAELS,MAAAA,YAAY,EAFP,KAAA;AAGLnB,MAAAA,MAAM,EAHD,GAAA;AAILS,MAAAA,KAAK,EAJA,GAAA;AAKLG,MAAAA,QAAQ,EALH,UAAA;AAML4D,MAAAA,aAAa,EAAE;AANV,KARC;AAgBRC,IAAAA,UAAU,EAAE;AACVhE,MAAAA,KAAK,EADK,MAAA;AAEVT,MAAAA,MAAM,EAFI,MAAA;AAGVY,MAAAA,QAAQ,EAHE,UAAA;AAIV4D,MAAAA,aAAa,EAJH,MAAA;AAKVE,MAAAA,OAAO,EALG,MAAA;AAMVC,MAAAA,YAAY,EANF,MAAA;AAOVC,MAAAA,UAAU,EAPA,MAAA;AAQV,kBAAY;AACVC,QAAAA,MAAM,EAAE;AADE;AARF,KAhBJ;AA4BRC,IAAAA,GAAG,EAAE;AACHrE,MAAAA,KAAK,EADF,CAAA;AAEHT,MAAAA,MAAM,EAFH,CAAA;AAGHmB,MAAAA,YAAY,EAHT,KAAA;AAIHT,MAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAJd,IAAA;AAKHC,MAAAA,QAAQ,EALL,UAAA;AAMHQ,MAAAA,GAAG,EANA,KAAA;AAOHP,MAAAA,IAAI,EAPD,KAAA;AAQHZ,MAAAA,SAAS,EAAE;AARR,KA5BG;AAsCR8E,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EADE,CAAA;AAERnE,MAAAA,IAAI,EAFI,CAAA;AAGRD,MAAAA,QAAQ,EAHA,UAAA;AAIRE,MAAAA,MAAM,EAAE;AAJA,KAtCF;AA4CRmE,IAAAA,QAAQ,EAAE;AACRD,MAAAA,MAAM,EADE,CAAA;AAERpE,MAAAA,QAAQ,EAFA,UAAA;AAGRE,MAAAA,MAAM,EAHE,CAAA;AAIRoE,MAAAA,KAAK,EAAE;AAJC,KA5CF;AAkDRC,IAAAA,sBAAsB,EAAE;AACtBzE,MAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CADK,IAAA;AAEtByE,MAAAA,KAAK,EAAEzE,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAFe,YAAA;AAGtB,iBAAW;AACTD,QAAAA,eAAe,EAAEC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,CAAsB0E;AAD9B;AAHW;AAlDhB,GAAL;AAD4B,CAAA,EAAA,kBAAA,C;IA8DtBC,KAA2B,GAAGC,gBAAgB,CAAA,kBAAA,EAEzD,UAAA,IAAA,EAaM;AAAA,MAAA,iBAAA;;AAAA,MAZJC,oBAYI,GAAA,IAAA,CAZJA,oBAYI;AAAA,MAXJC,IAWI,GAAA,IAAA,CAXJA,IAWI;AAAA,MAAA,gBAAA,GAAA,IAAA,CAVJC,WAUI;AAAA,MAVJA,WAUI,GAAA,gBAAA,KAAA,KAAA,CAAA,GAVU,KAUV,GAAA,gBAAA;AAAA,MATME,oBASN,GAAA,IAAA,CATJD,QASI;AAAA,MARJ/B,IAQI,GAAA,IAAA,CARJA,IAQI;AAAA,MAPJiC,oBAOI,GAAA,IAAA,CAPJA,oBAOI;AAAA,MANJC,cAMI,GAAA,IAAA,CANJA,cAMI;AAAA,MALJC,YAKI,GAAA,IAAA,CALJA,YAKI;AAAA,MAAA,gBAAA,GAAA,IAAA,CAJJC,WAII;AAAA,MAJJA,WAII,GAAA,gBAAA,KAAA,KAAA,CAAA,GAJU,CAIV,GAAA,gBAAA;AAAA,MAHJC,QAGI,GAAA,IAAA,CAHJA,QAGI;AAAA,MAFJvG,IAEI,GAAA,IAAA,CAFJA,IAEI;AAAA,MADJE,KACI,GAAA,IAAA,CADJA,KACI;AACJ,MAAM+B,KAAK,GAAGuE,QAAd,EAAA;AACA,MAAMhG,OAAO,GAAG8D,SAAhB,EAAA;AACA,MAAMmC,cAAc,GAAGC,UAAAA,CAAvB,qBAAuBA,CAAvB;AACA,MAAMC,QAAQ,GAAGD,MAAAA,CAAjB,KAAiBA,CAAjB;AAEA,MAAME,sBAAsB,GAAGR,cAAc,CAAA,KAAA,EAA7C,IAA6C,CAA7C;AACA,MAAMS,cAAc,GAAG,CAAA,IAAA,IAAS7G,IAAI,KAAb,OAAA,KAA8BE,KAAK,GAALA,CAAAA,IAAaA,KAAK,GAAvE,EAAuB,CAAvB;;AAEA,MAAM4G,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,QAAA,EAAA,QAAA,EAAsD;AAC9E,QAAIV,cAAc,CAAA,QAAA,EAAlB,IAAkB,CAAlB,EAAoC;AAClC;AACD;;AAEDG,IAAAA,QAAQ,CAAA,QAAA,EAARA,QAAQ,CAARA;AALF,GAAA;;AAQA,MAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAA,CAAA,EAAA,QAAA,EAA4C;AAAA,QACpD/D,OADoD,GAC/BgE,CAD+B,CAAA,OAAA;AAAA,QAC3C/D,OAD2C,GAC/B+D,CAD+B,CAAA,OAAA;;AAG1D,QAAI,OAAA,OAAA,KAAJ,WAAA,EAAoC;AAClC,UAAMC,IAAI,GAAGD,CAAC,CAADA,MAAAA,CAAb,qBAAaA,EAAb;AAEAhE,MAAAA,OAAO,GAAGgE,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAAAA,OAAAA,GAA8BC,IAAI,CAA5CjE,IAAAA;AACAC,MAAAA,OAAO,GAAG+D,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAAAA,OAAAA,GAA8BC,IAAI,CAA5ChE,GAAAA;AACD;;AAED,QAAM/C,KAAK,GACTF,IAAI,KAAJA,SAAAA,IAAsBA,IAAI,KAA1BA,SAAAA,GACIuD,UAAU,CAAA,OAAA,EAAA,OAAA,EADdvD,WACc,CADdA,GAEI0D,QAAQ,CAAA,OAAA,EAAA,OAAA,EAAmBU,OAAO,CAHxC,IAGwC,CAA1B,CAHd;AAKA0C,IAAAA,iBAAiB,CAAA,KAAA,EAAjBA,QAAiB,CAAjBA;AAfF,GAAA;;AAkBA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAA,CAAA,EAAyB;AAC/CP,IAAAA,QAAQ,CAARA,OAAAA,GAAAA,IAAAA;AACAI,IAAAA,OAAO,CAAA,CAAA,EAAPA,SAAO,CAAPA;AAFF,GAAA;;AAKA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAA,CAAA,EAAyB;AAC9C,QAAIR,QAAQ,CAAZ,OAAA,EAAsB;AACpBI,MAAAA,OAAO,CAAA,CAAA,EAAPA,QAAO,CAAPA;AACAJ,MAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACD;AAJH,GAAA;;AAOA,MAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAA,CAAA,EAAyC;AAC/DJ,IAAAA,CAAC,CAADA,cAAAA;AACAA,IAAAA,CAAC,CAF8D,eAE/DA,GAF+D,CAAA;;AAI/D,QAAMK,eAAe,GACnB,OAAOL,CAAC,CAAR,OAAA,KAAA,WAAA,GAAmCA,CAAC,CAADA,WAAAA,CAAAA,KAAAA,KAAnC,CAAA,GAA+DA,CAAC,CAADA,OAAAA,KADjE,CAAA;;AAGA,QAAA,eAAA,EAAqB;AACnBD,MAAAA,OAAO,CAACC,CAAC,CAAF,WAAA,EAAPD,SAAO,CAAPA;AACD;AATH,GAAA;;AAYA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAA,CAAA,EAAyB;AAC7C,QAAIX,QAAQ,CAAZ,OAAA,EAAsB;AACpBA,MAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACD;;AAEDI,IAAAA,OAAO,CAACC,CAAC,CAAF,WAAA,EAAPD,QAAO,CAAPA;AALF,GAAA;;AAQA,MAAMtG,WAAW,GAAG,OAAA,CAAc,YAAM;AACtC,QAAIT,IAAI,KAAR,OAAA,EAAsB;AACpB,aAAA,IAAA;AACD;;AAED,WAAOE,KAAK,GAALA,CAAAA,KAAP,CAAA;AALkB,GAAA,EAMjB,CAAA,IAAA,EANH,KAMG,CANiB,CAApB;AAQA,MAAMqH,mBAAmB,GAAGvH,IAAI,KAAJA,SAAAA,GAAAA,WAAAA,GAA5B,CAAA;AACAwH,EAAAA,gBAAgB,CACdpD,OAAO,CAAC0B,oBAAD,KAAA,IAACA,IAAAA,oBAAD,KAAA,KAAA,CAACA,GAAD,oBAACA,GAAwBW,cAAc,KAA9CrC,QAAO,CAAPA,IAAgE,CAACuC,QAAQ,CAD3D,OAAA,GAAA,iBAAA,GAAA,EAAA,EAAA,eAAA,CAAA,iBAAA,EAGXc,OAAO,CAHI,IAAA,EAGI,YAAA;AAAA,WAAMX,iBAAiB,CAAA,CAAA,EAAvB,SAAuB,CAAvB;AAHJ,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAIXW,OAAO,CAJI,GAAA,EAIG,YAAA;AAAA,WAAMX,iBAAiB,CAAC9G,IAAI,KAAJA,SAAAA,GAAAA,EAAAA,GAAD,EAAA,EAAvB,SAAuB,CAAvB;AAJH,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAKXyH,OAAO,CALI,OAAA,EAKO,YAAA;AAAA,WAAMX,iBAAiB,CAAC5G,KAAK,GAAN,mBAAA,EAAvB,SAAuB,CAAvB;AALP,GAAA,CAAA,EAAA,eAAA,CAAA,iBAAA,EAMXuH,OAAO,CANI,SAAA,EAMS,YAAA;AAAA,WAAMX,iBAAiB,CAAC5G,KAAK,GAAN,mBAAA,EAAvB,SAAuB,CAAvB;AANT,GAAA,CAAA,EAAhBsH,iBAAgB,EAAhBA;AAUA,SAAA,aACE,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEhH,OAAO,CAACgE;AAAxB,GAAA,EAAA,aACE,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEhE,OAAO,CAACqE;AAAxB,GAAA,EAAA,aACE,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,IAAI,EADN,MAAA;AAEE,IAAA,QAAQ,EAAE,CAFZ,CAAA;AAGE,IAAA,SAAS,EAAErE,OAAO,CAHpB,UAAA;AAIE,IAAA,WAAW,EAJb,eAAA;AAKE,IAAA,UAAU,EALZ,cAAA;AAME,IAAA,SAAS,EANX,aAAA;AAOE,IAAA,WAAW,EAAE4G;AAPf,GAAA,CADF,EAWG,CAAA,sBAAA,IAAA,aACC,aAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aACE,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE5G,OAAO,CAAC4E;AAAxB,GAAA,CADF,EAGGlB,IAAI,IAAA,aACH,aAAA,CAAA,cAAA,EAAA;AACE,IAAA,IAAI,EADN,IAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,OAAO,EAHT,cAAA;AAIE,IAAA,WAAW,EAJb,WAAA;AAKE,iBALF,QAAA;AAME,kBAAA,iBAAA,MAAA,CAA6BjC,KAAK,CAALA,MAAAA,CAAAA,IAAAA,EAA7B,UAA6BA,CAA7B;AANF,GAAA,CAJJ,CAZJ,EADF,oBACE,CADF,EAgCG8D,IAAI,KAAKU,cAAc,KAAdA,SAAAA,IAATV,WAAI,CAAJA,IAAAA,aACC,aAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aACE,aAAA,CAAA,UAAA,EAAA;AACE,qBADF,iBAAA;AAEE,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMI,oBAAoB,CAA1B,IAA0B,CAA1B;AAFX,KAAA;AAGE,IAAA,QAAQ,EAAEE,YAAY,KAHxB,IAAA;AAIE,IAAA,SAAS,EAAE1F,IAAI,CAACH,OAAO,CAAR,QAAA,EACqB6F,YAAY,KADjC,IACqBA,IAAjC7F,OAAO,CADK,sBAAA;AAJjB,GAAA,EAAA,aAQE,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,OAAO,EAAC;AAApB,GAAA,EATJ,IASI,CARF,CADF,EAAA,aAWE,aAAA,CAAA,UAAA,EAAA;AACE,IAAA,QAAQ,EAAE6F,YAAY,KADxB,IAAA;AAEE,qBAFF,iBAAA;AAGE,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMF,oBAAoB,CAA1B,IAA0B,CAA1B;AAHX,KAAA;AAIE,IAAA,SAAS,EAAExF,IAAI,CAACH,OAAO,CAAR,QAAA,EACqB6F,YAAY,KADjC,IACqBA,IAAjC7F,OAAO,CADK,sBAAA;AAJjB,GAAA,EAAA,aAQE,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,OAAO,EAAC;AAApB,GAAA,EArDV,IAqDU,CARF,CAXF,CAjCJ,CADF;AArGuD,CAAA,C;AAmK3DoF,KAAK,CAALA,YAAAA,GAAqB;AACnBG,EAAAA,IAAI,EADe,IAAA;AAEnBO,EAAAA,WAAW,EAAEoB;AAFM,CAArB9B;AAKAA,KAAK,CAALA,WAAAA,GAAAA,OAAAA","sourcesContent":["import { createContext } from 'react';\nimport { WrapperVariant } from './Wrapper';\n\n// consider getting rid from wrapper variant\nexport const WrapperVariantContext = createContext<WrapperVariant | null>(null);\n\nexport const IsStaticVariantContext = createContext(false);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { ClockViewType } from '../../constants/ClockType';\nimport { withStyles, createStyles, Theme, WithStyles } from '@material-ui/core/styles';\n\nexport interface ClockPointerProps\n  extends React.HTMLProps<HTMLDivElement>,\n    WithStyles<typeof styles> {\n  value: number;\n  hasSelected: boolean;\n  isInner: boolean;\n  type: ClockViewType;\n}\n\nexport class ClockPointer extends React.Component<ClockPointerProps> {\n  public static getDerivedStateFromProps = (\n    nextProps: ClockPointerProps,\n    state: ClockPointer['state']\n  ) => {\n    if (nextProps.type !== state.previousType) {\n      return {\n        toAnimateTransform: true,\n        previousType: nextProps.type,\n      };\n    }\n\n    return {\n      toAnimateTransform: false,\n      previousType: nextProps.type,\n    };\n  };\n\n  public state = {\n    toAnimateTransform: false,\n    previousType: undefined,\n  };\n\n  public getAngleStyle = () => {\n    const { value, isInner, type } = this.props;\n\n    const max = type === 'hours' ? 12 : 60;\n    let angle = (360 / max) * value;\n\n    if (type === 'hours' && value > 12) {\n      angle -= 360; // round up angle to max 360 degrees\n    }\n\n    return {\n      height: isInner ? '26%' : '40%',\n      transform: `rotateZ(${angle}deg)`,\n    };\n  };\n\n  public render() {\n    const { classes, hasSelected, isInner, type, value, ...other } = this.props;\n\n    return (\n      <div\n        {...other}\n        style={this.getAngleStyle()}\n        className={clsx(classes.pointer, {\n          [classes.animateTransform]: this.state.toAnimateTransform,\n        })}\n      >\n        <div\n          className={clsx(classes.thumb, {\n            [classes.noPoint]: hasSelected,\n          })}\n        />\n      </div>\n    );\n  }\n}\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    pointer: {\n      width: 2,\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      left: 'calc(50% - 1px)',\n      bottom: '50%',\n      transformOrigin: 'center bottom 0px',\n    },\n    animateTransform: {\n      transition: theme.transitions.create(['transform', 'height']),\n    },\n    thumb: {\n      width: 4,\n      height: 4,\n      backgroundColor: theme.palette.primary.contrastText,\n      borderRadius: '100%',\n      position: 'absolute',\n      top: -21,\n      left: -15,\n      border: `14px solid ${theme.palette.primary.main}`,\n      boxSizing: 'content-box',\n    },\n    noPoint: {\n      backgroundColor: theme.palette.primary.main,\n    },\n  });\n\nexport default withStyles(styles, {\n  name: 'MuiPickersClockPointer',\n})(ClockPointer as React.ComponentType<ClockPointerProps>);\n","import { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\ntype Meridiem = 'am' | 'pm' | null;\n\nexport const getMeridiem = (date: unknown, utils: MuiPickersAdapter): Meridiem => {\n  if (!date) {\n    return null;\n  }\n\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\n\nexport const convertValueToMeridiem = (value: number, meridiem: Meridiem, ampm: boolean) => {\n  if (ampm) {\n    const currentMeridiem = value >= 12 ? 'pm' : 'am';\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n\n  return value;\n};\n\nexport const convertToMeridiem = (\n  time: unknown,\n  meridiem: 'am' | 'pm',\n  ampm: boolean,\n  utils: MuiPickersAdapter\n) => {\n  const newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\n\nconst clockCenter = {\n  x: 260 / 2,\n  y: 260 / 2,\n};\n\nconst baseClockPoint = {\n  x: clockCenter.x,\n  y: 0,\n};\n\nconst cx = baseClockPoint.x - clockCenter.x;\nconst cy = baseClockPoint.y - clockCenter.y;\n\nconst rad2deg = (rad: number) => rad * 57.29577951308232;\n\nconst getAngleValue = (step: number, offsetX: number, offsetY: number) => {\n  const x = offsetX - clockCenter.x;\n  const y = offsetY - clockCenter.y;\n\n  const atan = Math.atan2(cx, cy) - Math.atan2(x, y);\n\n  let deg = rad2deg(atan);\n  deg = Math.round(deg / step) * step;\n  deg %= 360;\n\n  const value = Math.floor(deg / step) || 0;\n  const delta = Math.pow(x, 2) + Math.pow(y, 2);\n  const distance = Math.sqrt(delta);\n\n  return { value, distance };\n};\n\nexport const getMinutes = (offsetX: number, offsetY: number, step = 1) => {\n  const angleStep = step * 6;\n  let { value } = getAngleValue(angleStep, offsetX, offsetY);\n  value = (value * step) % 60;\n\n  return value;\n};\n\nexport const getHours = (offsetX: number, offsetY: number, ampm: boolean) => {\n  let { value, distance } = getAngleValue(30, offsetX, offsetY);\n  value = value || 12;\n\n  if (!ampm) {\n    if (distance < 90) {\n      value += 12;\n      value %= 24;\n    }\n  } else {\n    value %= 12;\n  }\n\n  return value;\n};\n\nexport function getSecondsInDay(date: unknown, utils: MuiPickersAdapter) {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n}\n\nexport const createIsAfterIgnoreDatePart = (\n  disableIgnoringDatePartForTimeValidation: boolean,\n  utils: MuiPickersAdapter\n) => (dateLeft: unknown, dateRight: unknown) => {\n  if (disableIgnoringDatePartForTimeValidation) {\n    return utils.isAfter(dateLeft, dateRight);\n  }\n\n  return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n};\n\nexport interface TimeValidationProps {\n  /**\n   * Min time acceptable time.\n   * For input validation date part of passed object will be ignored if `disableIgnoringDatePartForTimeValidation` not specified.\n   */\n  minTime?: unknown;\n  /**\n   * Max time acceptable time.\n   * For input validation date part of passed object will be ignored if `disableIgnoringDatePartForTimeValidation` not specified.\n   */\n  maxTime?: unknown;\n  /**\n   * Dynamically check if time is disabled or not.\n   * If returns `false` appropriate time point will ot be acceptable.\n   */\n  shouldDisableTime?: (timeValue: number, clockType: 'hours' | 'minutes' | 'seconds') => boolean;\n  /**\n   * Do not ignore date part when validating min/max time.\n   * @default false\n   */\n  disableIgnoringDatePartForTimeValidation?: boolean;\n}\n\nexport const validateTime = (\n  utils: MuiPickersAdapter,\n  value: unknown | ParsableDate,\n  {\n    minTime,\n    maxTime,\n    shouldDisableTime,\n    disableIgnoringDatePartForTimeValidation,\n  }: TimeValidationProps\n) => {\n  const date = utils.date(value);\n  const isAfterComparingFn = createIsAfterIgnoreDatePart(\n    Boolean(disableIgnoringDatePartForTimeValidation),\n    utils\n  );\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(minTime && isAfterComparingFn(minTime, date)):\n      return 'minTime';\n\n    case Boolean(maxTime && isAfterComparingFn(date, maxTime)):\n      return 'maxTime';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getHours(date), 'hours')):\n      return 'shouldDisableTime-hours';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getMinutes(date), 'minutes')):\n      return 'shouldDisableTime-minutes';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getSeconds(date), 'seconds')):\n      return 'shouldDisableTime-seconds';\n\n    default:\n      return null;\n  }\n};\n\nexport type TimeValidationError = ReturnType<typeof validateTime>;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClockPointer from './ClockPointer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { VIEW_HEIGHT } from '../../constants/dimensions';\nimport { ClockViewType } from '../../constants/ClockType';\n\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { getHours, getMinutes } from '../../_helpers/time-utils';\nimport { withDefaultProps } from '../../_shared/withDefaultProps';\nimport { useMeridiemMode } from '../../TimePicker/TimePickerToolbar';\nimport { PickerSelectionState } from '../../_shared/hooks/usePickerState';\nimport { useGlobalKeyDown, keycode } from '../../_shared/hooks/useKeyDown';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\n\nexport interface ClockProps extends ReturnType<typeof useMeridiemMode> {\n  date: unknown;\n  type: ClockViewType;\n  value: number;\n  isTimeDisabled: (timeValue: number, type: ClockViewType) => boolean;\n  children: React.ReactElement<any>[];\n  onDateChange: PickerOnChangeFn;\n  onChange: (value: number, isFinish?: PickerSelectionState) => void;\n  ampm?: boolean;\n  minutesStep?: number;\n  ampmInClock?: boolean;\n  allowKeyboardControl?: boolean;\n}\n\nconst muiComponentConfig = {\n  name: 'MuiPickersClock',\n};\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'relative',\n      minHeight: VIEW_HEIGHT,\n      alignItems: 'center',\n    },\n    clock: {\n      backgroundColor: 'rgba(0,0,0,.07)',\n      borderRadius: '50%',\n      height: 260,\n      width: 260,\n      position: 'relative',\n      pointerEvents: 'none',\n    },\n    squareMask: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'auto',\n      outline: 'none',\n      touchActions: 'none',\n      userSelect: 'none',\n      '&:active': {\n        cursor: 'move',\n      },\n    },\n    pin: {\n      width: 6,\n      height: 6,\n      borderRadius: '50%',\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    amButton: {\n      zIndex: 1,\n      left: 8,\n      position: 'absolute',\n      bottom: 8,\n    },\n    pmButton: {\n      zIndex: 1,\n      position: 'absolute',\n      bottom: 8,\n      right: 8,\n    },\n    meridiemButtonSelected: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n  }),\n  muiComponentConfig\n);\n\nexport const Clock: React.FC<ClockProps> = withDefaultProps(\n  muiComponentConfig,\n  ({\n    allowKeyboardControl,\n    ampm,\n    ampmInClock = false,\n    children: numbersElementsArray,\n    date,\n    handleMeridiemChange,\n    isTimeDisabled,\n    meridiemMode,\n    minutesStep = 1,\n    onChange,\n    type,\n    value,\n  }) => {\n    const utils = useUtils();\n    const classes = useStyles();\n    const wrapperVariant = React.useContext(WrapperVariantContext);\n    const isMoving = React.useRef(false);\n\n    const isSelectedTimeDisabled = isTimeDisabled(value, type);\n    const isPointerInner = !ampm && type === 'hours' && (value < 1 || value > 12);\n\n    const handleValueChange = (newValue: number, isFinish: PickerSelectionState) => {\n      if (isTimeDisabled(newValue, type)) {\n        return;\n      }\n\n      onChange(newValue, isFinish);\n    };\n\n    const setTime = (e: any, isFinish: PickerSelectionState) => {\n      let { offsetX, offsetY } = e;\n\n      if (typeof offsetX === 'undefined') {\n        const rect = e.target.getBoundingClientRect();\n\n        offsetX = e.changedTouches[0].clientX - rect.left;\n        offsetY = e.changedTouches[0].clientY - rect.top;\n      }\n\n      const value =\n        type === 'seconds' || type === 'minutes'\n          ? getMinutes(offsetX, offsetY, minutesStep)\n          : getHours(offsetX, offsetY, Boolean(ampm));\n\n      handleValueChange(value, isFinish);\n    };\n\n    const handleTouchMove = (e: React.TouchEvent) => {\n      isMoving.current = true;\n      setTime(e, 'shallow');\n    };\n\n    const handleTouchEnd = (e: React.TouchEvent) => {\n      if (isMoving.current) {\n        setTime(e, 'finish');\n        isMoving.current = false;\n      }\n    };\n\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n      const isButtonPressed =\n        typeof e.buttons === 'undefined' ? e.nativeEvent.which === 1 : e.buttons === 1;\n\n      if (isButtonPressed) {\n        setTime(e.nativeEvent, 'shallow');\n      }\n    };\n\n    const handleMouseUp = (e: React.MouseEvent) => {\n      if (isMoving.current) {\n        isMoving.current = false;\n      }\n\n      setTime(e.nativeEvent, 'finish');\n    };\n\n    const hasSelected = React.useMemo(() => {\n      if (type === 'hours') {\n        return true;\n      }\n\n      return value % 5 === 0;\n    }, [type, value]);\n\n    const keyboardControlStep = type === 'minutes' ? minutesStep : 1;\n    useGlobalKeyDown(\n      Boolean(allowKeyboardControl ?? wrapperVariant !== 'static') && !isMoving.current,\n      {\n        [keycode.Home]: () => handleValueChange(0, 'partial'), // annulate both hours and minutes\n        [keycode.End]: () => handleValueChange(type === 'minutes' ? 59 : 23, 'partial'),\n        [keycode.ArrowUp]: () => handleValueChange(value + keyboardControlStep, 'partial'),\n        [keycode.ArrowDown]: () => handleValueChange(value - keyboardControlStep, 'partial'),\n      }\n    );\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.clock}>\n          <div\n            role=\"menu\"\n            tabIndex={-1}\n            className={classes.squareMask}\n            onTouchMove={handleTouchMove}\n            onTouchEnd={handleTouchEnd}\n            onMouseUp={handleMouseUp}\n            onMouseMove={handleMouseMove}\n          />\n\n          {!isSelectedTimeDisabled && (\n            <React.Fragment>\n              <div className={classes.pin} />\n\n              {date && (\n                <ClockPointer\n                  type={type}\n                  value={value}\n                  isInner={isPointerInner}\n                  hasSelected={hasSelected}\n                  aria-live=\"polite\"\n                  aria-label={`Selected time ${utils.format(date, 'fullTime')}`}\n                />\n              )}\n            </React.Fragment>\n          )}\n\n          {numbersElementsArray}\n        </div>\n\n        {ampm && (wrapperVariant === 'desktop' || ampmInClock) && (\n          <React.Fragment>\n            <IconButton\n              data-mui-test=\"in-clock-am-btn\"\n              onClick={() => handleMeridiemChange('am')}\n              disabled={meridiemMode === null}\n              className={clsx(classes.amButton, {\n                [classes.meridiemButtonSelected]: meridiemMode === 'am',\n              })}\n            >\n              <Typography variant=\"caption\">AM</Typography>\n            </IconButton>\n            <IconButton\n              disabled={meridiemMode === null}\n              data-mui-test=\"in-clock-pm-btn\"\n              onClick={() => handleMeridiemChange('pm')}\n              className={clsx(classes.pmButton, {\n                [classes.meridiemButtonSelected]: meridiemMode === 'pm',\n              })}\n            >\n              <Typography variant=\"caption\">PM</Typography>\n            </IconButton>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n);\n\nClock.defaultProps = {\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n} as any;\n\nClock.displayName = 'Clock';\n"]},"metadata":{},"sourceType":"module"}