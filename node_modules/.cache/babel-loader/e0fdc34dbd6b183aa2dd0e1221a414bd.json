{"ast":null,"code":"import { useContext, useRef } from 'react';\nimport { M as MuiPickersAdapterContext } from './LocalizationProvider-24410efe.js'; // TODO uncomment when syntax will be allowed by next babel\n\nfunction checkUtils(utils) {\n  if (!utils) {\n    throw new Error('Can not find utils in context. It looks like you forgot to wrap your component in LocalizationProvider, or pass dateAdapter prop directly.');\n  }\n}\n\nfunction useUtils() {\n  var utils = useContext(MuiPickersAdapterContext);\n  checkUtils(utils);\n  return utils;\n}\n\nfunction useNow() {\n  var utils = useUtils();\n  var now = useRef(utils.date());\n  return now.current;\n}\n\nvar DIALOG_WIDTH = 320;\nvar DIALOG_WIDTH_WIDER = 325;\nvar VIEW_HEIGHT = 358;\nvar DAY_SIZE = 36;\nvar DAY_MARGIN = 2;\nvar IS_TOUCH_DEVICE_MEDIA = '@media (pointer: fine)';\nexport { DAY_MARGIN as D, IS_TOUCH_DEVICE_MEDIA as I, VIEW_HEIGHT as V, useNow as a, DAY_SIZE as b, DIALOG_WIDTH as c, DIALOG_WIDTH_WIDER as d, useUtils as u };","map":{"version":3,"sources":["../src/_shared/hooks/useUtils.ts","../src/constants/dimensions.ts"],"names":["utils","useContext","checkUtils","useUtils","now","useRef","DIALOG_WIDTH","DIALOG_WIDTH_WIDER","VIEW_HEIGHT","DAY_SIZE","DAY_MARGIN","IS_TOUCH_DEVICE_MEDIA"],"mappings":";oFAMA;;AACA,SAAA,UAAA,CAAA,KAAA,EAAyF;AACvF,MAAI,CAAJ,KAAA,EAAY;AACV,UAAM,IAAA,KAAA,CAAN,4IAAM,CAAN;AAGD;AACF;;AAEM,SAAA,QAAA,GAAoB;AACzB,MAAMA,KAAK,GAAGC,UAAU,CAAxB,wBAAwB,CAAxB;AACAC,EAAAA,UAAU,CAAVA,KAAU,CAAVA;AAEA,SAAA,KAAA;AACD;;AAEM,SAAA,MAAA,GAAkB;AACvB,MAAMF,KAAK,GAAGG,QAAd,EAAA;AACA,MAAMC,GAAG,GAAGC,MAAM,CAACL,KAAK,CAAxB,IAAmBA,EAAD,CAAlB;AAEA,SAAOI,GAAG,CAAV,OAAA;AACD;;IC3BYE,YAAY,GAAG,G;IAEfC,kBAAkB,GAAG,G;IAErBC,WAAW,GAAG,G;IAEdC,QAAQ,GAAG,E;IAEXC,UAAU,GAAG,C;IAEbC,qBAAqB,GAAG,wB","sourcesContent":["import { useContext, useRef } from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MuiPickersAdapterContext } from '../../LocalizationProvider';\n\nexport type MuiPickersAdapter<TDate = unknown> = IUtils<TDate>;\n\n// TODO uncomment when syntax will be allowed by next babel\nfunction checkUtils(utils: MuiPickersAdapter | null): asserts utils is MuiPickersAdapter {\n  if (!utils) {\n    throw new Error(\n      'Can not find utils in context. It looks like you forgot to wrap your component in LocalizationProvider, or pass dateAdapter prop directly.'\n    );\n  }\n}\n\nexport function useUtils() {\n  const utils = useContext(MuiPickersAdapterContext);\n  checkUtils(utils);\n\n  return utils;\n}\n\nexport function useNow() {\n  const utils = useUtils();\n  const now = useRef(utils.date());\n\n  return now.current;\n}\n","export const DIALOG_WIDTH = 320;\n\nexport const DIALOG_WIDTH_WIDER = 325;\n\nexport const VIEW_HEIGHT = 358;\n\nexport const DAY_SIZE = 36;\n\nexport const DAY_MARGIN = 2;\n\nexport const IS_TOUCH_DEVICE_MEDIA = '@media (pointer: fine)';\n"]},"metadata":{},"sourceType":"module"}