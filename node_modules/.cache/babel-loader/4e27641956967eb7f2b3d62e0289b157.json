{"ast":null,"code":"import { createElement, createContext, useMemo } from 'react';\nimport { func, oneOfType, object, string, node } from 'prop-types';\nimport getThemeProps from '@material-ui/styles/getThemeProps';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction withDefaultProps(_ref, Component) {\n  var name = _ref.name;\n  var componentName = name.replace('Mui', '');\n\n  var WithDefaultProps = function WithDefaultProps(props) {\n    var theme = useTheme();\n    var propsWithDefault = getThemeProps({\n      props: props,\n      theme: theme,\n      name: name\n    });\n    Component.displayName = componentName;\n    return /*#__PURE__*/createElement(Component, propsWithDefault);\n  };\n\n  WithDefaultProps.displayName = \"WithDefaultProps(\".concat(componentName, \")\");\n  return WithDefaultProps;\n}\n\nvar MuiPickersAdapterContext = createContext(null);\n\nvar LocalizationProvider = function LocalizationProvider(_ref) {\n  var Utils = _ref.dateAdapter,\n      children = _ref.children,\n      locale = _ref.locale,\n      libFormats = _ref.dateFormats,\n      libInstance = _ref.dateLibInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      formats: libFormats,\n      instance: libInstance\n    });\n  }, [Utils, locale, libFormats, libInstance]);\n  return /*#__PURE__*/createElement(MuiPickersAdapterContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LocalizationProvider.propTypes = {\n  dateAdapter: func.isRequired,\n  locale: oneOfType([object, string]),\n\n  /**\n   * Your component tree.\n   */\n  children: node.isRequired\n} : void 0;\nvar LocalizationProvider$1 = withDefaultProps({\n  name: 'MuiPickersLocalizationProvider'\n}, LocalizationProvider);\nexport { LocalizationProvider$1 as L, MuiPickersAdapterContext as M, LocalizationProvider as a, withDefaultProps as w };","map":{"version":3,"sources":["../src/_shared/withDefaultProps.tsx","../src/LocalizationProvider.tsx"],"names":["name","componentName","WithDefaultProps","theme","useTheme","propsWithDefault","getThemeProps","props","Component","React.createElement","MuiPickersAdapterContext","React","LocalizationProvider","dateAdapter","Utils","children","locale","dateFormats","libFormats","dateLibInstance","libInstance","utils","formats","instance","PropTypes","isRequired","withDefaultProps"],"mappings":";;;;;AAIO,SAAA,gBAAA,CAAA,IAAA,EAAA,SAAA,EAGQ;AAAA,MAFXA,IAEW,GAAA,IAAA,CAFXA,IAEW;AACb,MAAMC,aAAa,GAAGD,IAAI,CAAJA,OAAAA,CAAAA,KAAAA,EAAtB,EAAsBA,CAAtB;;AACA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAAc;AACrC,QAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,QAAMC,gBAAgB,GAAGC,aAAa,CAAiB;AACrDC,MAAAA,KAAK,EADgD,KAAA;AAErDJ,MAAAA,KAAK,EAFgD,KAAA;AAGrDH,MAAAA,IAAI,EAAJA;AAHqD,KAAjB,CAAtC;AAMAQ,IAAAA,SAAS,CAATA,WAAAA,GAAAA,aAAAA;AAEA,WAAA,aAAOC,aAAAA,CAAAA,SAAAA,EAAP,gBAAOA,CAAP;AAVF,GAAA;;AAaAP,EAAAA,gBAAgB,CAAhBA,WAAAA,GAAAA,oBAAAA,MAAAA,CAAAA,aAAAA,EAAAA,GAAAA,CAAAA;AACA,SAAA,gBAAA;AACD;;IClBYQ,wBAAwB,GAAGC,aAAAA,CAAAA,IAAAA,C;;IAU3BC,oBAAyD,GAAG,SAA5DA,oBAA4D,CAAA,IAAA,EAMnE;AAAA,MALSE,KAKT,GAAA,IAAA,CALJD,WAKI;AAAA,MAJJE,QAII,GAAA,IAAA,CAJJA,QAII;AAAA,MAHJC,MAGI,GAAA,IAAA,CAHJA,MAGI;AAAA,MAFSE,UAET,GAAA,IAAA,CAFJD,WAEI;AAAA,MADaG,WACb,GAAA,IAAA,CADJD,eACI;AACJ,MAAME,KAAK,GAAG,OAAA,CACZ,YAAA;AAAA,WAAM,IAAA,KAAA,CAAU;AAAEL,MAAAA,MAAM,EAAR,MAAA;AAAUM,MAAAA,OAAO,EAAjB,UAAA;AAA+BC,MAAAA,QAAQ,EAAEH;AAAzC,KAAV,CAAN;AADY,GAAA,EAEZ,CAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAFF,WAEE,CAFY,CAAd;AAKA,SAAA,aAAO,aAAA,CAAC,wBAAD,CAAA,QAAA,EAAA;AAAmC,IAAA,KAAK,EAAxC,KAAA;AAAiD,IAAA,QAAQ,EAAEL;AAA3D,GAAA,CAAP;AACD,C;;AAED,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,oBAAoB,CAApB,SAAA,GAAiC;AAC/BF,EAAAA,WAAW,EAAEW,IAAAA,CADkB,UAAA;AAE/BR,EAAAA,MAAM,EAAEQ,SAAAA,CAAoB,CAAA,MAAA,EAFG,MAEH,CAApBA,CAFuB;;AAG/B;;;AAGAT,EAAAA,QAAQ,EAAES,IAAAA,CAAeC;AANM,CAAjC,GAAA,KAAA,CAAA;AASA,IAAA,sBAAA,GAAeC,gBAAgB,CAAC;AAAE1B,EAAAA,IAAI,EAAE;AAAR,CAAD,EAA/B,oBAA+B,CAA/B","sourcesContent":["import * as React from 'react';\nimport getThemeProps from '@material-ui/styles/getThemeProps';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport function withDefaultProps<T>(\n  { name }: { name: string },\n  Component: React.ComponentType<T>\n): React.FC<T> {\n  const componentName = name.replace('Mui', '');\n  const WithDefaultProps = (props: T) => {\n    const theme = useTheme();\n    const propsWithDefault = getThemeProps<any, T, string>({\n      props,\n      theme,\n      name,\n    });\n\n    Component.displayName = componentName;\n\n    return <Component {...propsWithDefault} />;\n  };\n\n  WithDefaultProps.displayName = `WithDefaultProps(${componentName})`;\n  return WithDefaultProps;\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DateIOFormats } from '@date-io/core/IUtils';\nimport { MuiPickersAdapter } from './_shared/hooks/useUtils';\nimport { withDefaultProps } from './_shared/withDefaultProps';\n\nexport const MuiPickersAdapterContext = React.createContext<MuiPickersAdapter | null>(null);\n\nexport interface LocalizationProviderProps {\n  dateAdapter: new (...args: any) => MuiPickersAdapter;\n  children: React.ReactNode;\n  locale?: any;\n  dateLibInstance?: any;\n  dateFormats?: Partial<DateIOFormats>;\n}\n\nexport const LocalizationProvider: React.FC<LocalizationProviderProps> = ({\n  dateAdapter: Utils,\n  children,\n  locale,\n  dateFormats: libFormats,\n  dateLibInstance: libInstance,\n}) => {\n  const utils = React.useMemo(\n    () => new Utils({ locale, formats: libFormats, instance: libInstance }),\n    [Utils, locale, libFormats, libInstance]\n  );\n\n  return <MuiPickersAdapterContext.Provider value={utils} children={children} />;\n};\n\nLocalizationProvider.propTypes = {\n  dateAdapter: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node.isRequired,\n} as any;\n\nexport default withDefaultProps({ name: 'MuiPickersLocalizationProvider' }, LocalizationProvider);\n"]},"metadata":{},"sourceType":"module"}