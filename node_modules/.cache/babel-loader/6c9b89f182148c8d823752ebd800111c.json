{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\components\\\\AxiosSpinner.js\",\n    _s = $RefreshSig$();\n\nimport useAxios from 'axios-hooks';\nimport React, { useEffect } from 'react';\nimport Preloader from \"./Preloader\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderErrorLogger = ({\n  error,\n  refetch\n}) => {\n  _s();\n\n  useEffect(error => console.error(error), [error]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error.toString()\n  }, void 0, false);\n};\n\n_s(RenderErrorLogger, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RenderErrorLogger;\nexport const AxiosSpinner = ({\n  renderData: RenderData,\n  callHook,\n  renderError: RenderError = RenderErrorLogger,\n  renderLoader: RenderLoader = Preloader\n}) => {\n  const [{\n    data,\n    loading,\n    error\n  }, refetch] = callHook(useAxios);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(RenderError, {\n      error,\n      refetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(RenderLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RenderData, {\n    data,\n    refetch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_c2 = AxiosSpinner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderErrorLogger\");\n$RefreshReg$(_c2, \"AxiosSpinner\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/components/AxiosSpinner.js"],"names":["useAxios","React","useEffect","Preloader","RenderErrorLogger","error","refetch","console","toString","AxiosSpinner","renderData","RenderData","callHook","renderError","RenderError","renderLoader","RenderLoader","data","loading"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAAA;;AAC9CJ,EAAAA,SAAS,CAAEG,KAAD,IAAWE,OAAO,CAACF,KAAR,CAAcA,KAAd,CAAZ,EAAkC,CAACA,KAAD,CAAlC,CAAT;AACA,sBAAO;AAAA,cAAGA,KAAK,CAACG,QAAN;AAAH,mBAAP;AACD,CAHD;;GAAMJ,iB;;KAAAA,iB;AAKN,OAAO,MAAMK,YAAY,GACvB,CAAC;AACCC,EAAAA,UAAU,EAAEC,UADb;AAECC,EAAAA,QAFD;AAGCC,EAAAA,WAAW,EAAEC,WAAW,GAAGV,iBAH5B;AAICW,EAAAA,YAAY,EAAEC,YAAY,GAAGb;AAJ9B,CAAD,KAKM;AACJ,QAAM,CAAC;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBb,IAAAA;AAAjB,GAAD,EAA2BC,OAA3B,IAAsCM,QAAQ,CAACZ,QAAD,CAApD;;AACA,MAAIK,KAAJ,EAAW;AACT,wBAAO,QAAC,WAAD;AAAmBA,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIY,OAAJ,EAAa;AACX,wBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,QAAC,UAAD;AAAkBD,IAAAA,IAAlB;AAAwBX,IAAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfI;MAAMG,Y","sourcesContent":["import useAxios from 'axios-hooks';\r\nimport React, { useEffect } from 'react';\r\nimport Preloader from \"./Preloader\";\r\n\r\nconst RenderErrorLogger = ({error, refetch}) => {\r\n  useEffect((error) => console.error(error), [error]);\r\n  return <>{error.toString()}</>;\r\n}\r\n\r\nexport const AxiosSpinner =\r\n  ({\r\n    renderData: RenderData,\r\n    callHook,\r\n    renderError: RenderError = RenderErrorLogger,\r\n    renderLoader: RenderLoader = Preloader,\r\n  }) => {\r\n    const [{ data, loading, error }, refetch] = callHook(useAxios);\r\n    if (error) {\r\n      return <RenderError {...{ error, refetch }} />;\r\n    }\r\n    if (loading) {\r\n      return <RenderLoader/>;\r\n    }\r\n    return <RenderData {...{ data, refetch }}/>;\r\n  };"]},"metadata":{},"sourceType":"module"}