{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useCallback, useState, useMemo, useEffect, createElement, useReducer, cloneElement, Fragment, forwardRef, useContext } from 'react';\nimport { instanceOf, func, string, object, node, oneOfType, number, oneOf } from 'prop-types';\nimport { makeStyles, fade, useTheme, styled } from '@material-ui/core/styles';\nimport { w as withDefaultProps } from './LocalizationProvider-24410efe.js';\nimport { u as useUtils, a as useNow, b as DAY_SIZE, D as DAY_MARGIN, c as DIALOG_WIDTH, V as VIEW_HEIGHT } from './dimensions-2cbdfb98.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useForkRef, createSvgIcon } from '@material-ui/core/utils';\nimport { c as CalendarIcon, A as ArrowSwitcher, C as ClockView } from './ClockView-24430b1f.js';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport { a as arrayIncludes, c as createDelegatedEventHandler, o as onSpaceOrEnter, u as useCanAutoFocus } from './useCanAutoFocus-1eacc580.js';\nimport { W as WrapperVariantContext, I as IsStaticVariantContext } from './Clock-156019bb.js';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useRifm } from 'rifm';\nimport { u as useGlobalKeyDown, k as keycode, a as useIsomorphicEffect } from './useKeyDown-b5264e56.js';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Calendar } from './Calendar.js';\nimport Fade from '@material-ui/core/Fade';\n\nvar findClosestEnabledDate = function findClosestEnabledDate(_ref) {\n  var date = _ref.date,\n      utils = _ref.utils,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      shouldDisableDate = _ref.shouldDisableDate;\n  var today = utils.startOfDay(utils.date());\n\n  if (disablePast && utils.isBefore(minDate, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  var forward = date;\n  var backward = date;\n\n  if (utils.isBefore(date, minDate)) {\n    forward = utils.date(minDate);\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = utils.date(maxDate);\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n\n      backward = utils.addDays(backward, -1);\n    }\n  } // fallback to today if no enabled days\n\n\n  return utils.date();\n};\n\nvar isYearOnlyView = function isYearOnlyView(views) {\n  return views.length === 1 && views[0] === 'year';\n};\n\nvar isYearAndMonthViews = function isYearAndMonthViews(views) {\n  return views.length === 2 && arrayIncludes(views, 'month') && arrayIncludes(views, 'year');\n};\n\nvar getFormatAndMaskByViews = function getFormatAndMaskByViews(views, utils) {\n  if (isYearOnlyView(views)) {\n    return {\n      mask: '____',\n      inputFormat: utils.formats.year\n    };\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return {\n      disableMaskedInput: true,\n      inputFormat: utils.formats.monthAndYear\n    };\n  }\n\n  return {\n    mask: '__/__/____',\n    inputFormat: utils.formats.keyboardDate\n  };\n};\n\nfunction parsePickerInputValue(utils, _ref2) {\n  var value = _ref2.value;\n  var parsedValue = utils.date(value);\n  return utils.isValid(parsedValue) ? parsedValue : null;\n}\n\nfunction parseRangeInputValue(utils, _ref3) {\n  var _ref3$value = _ref3.value,\n      value = _ref3$value === void 0 ? [null, null] : _ref3$value;\n  return value.map(function (date) {\n    return !utils.isValid(date) || date === null ? null : utils.startOfDay(utils.date(date));\n  });\n}\n\nvar isRangeValid = function isRangeValid(utils, range) {\n  return Boolean(range && range[0] && range[1] && utils.isBefore(range[0], range[1]));\n};\n\nvar isWithinRange = function isWithinRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\n\nvar isStartOfRange = function isStartOfRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\n\nvar isEndOfRange = function isEndOfRange(utils, day, range) {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};\n\nvar validateDate = function validateDate(utils, value, _ref4) {\n  var minDate = _ref4.minDate,\n      maxDate = _ref4.maxDate,\n      disableFuture = _ref4.disableFuture,\n      shouldDisableDate = _ref4.shouldDisableDate,\n      disablePast = _ref4.disablePast;\n  var now = utils.date();\n  var date = utils.date(value);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nvar validateDateRange = function validateDateRange(utils, value, dateValidationProps) {\n  var _value = _slicedToArray(value, 2),\n      start = _value[0],\n      end = _value[1]; // for partial input\n\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  var dateValidations = [validateDate(utils, start, dateValidationProps), validateDate(utils, end, dateValidationProps)];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(utils, [utils.date(start), utils.date(end)])) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n\nfunction getTextFieldAriaText(rawValue, utils) {\n  return rawValue && utils.isValid(utils.date(rawValue)) ? \"Choose date, selected date is \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Choose date';\n}\n\nvar getDisplayDate = function getDisplayDate(utils, value, inputFormat) {\n  var date = utils.date(value);\n  var isEmpty = value === null;\n\n  if (isEmpty) {\n    return '';\n  }\n\n  return utils.isValid(date) ? utils.formatByString(date, inputFormat) : '';\n};\n\nfunction pick12hOr24hFormat(userFormat, ampm, formats) {\n  if (userFormat) {\n    return userFormat;\n  }\n\n  if (typeof ampm === 'undefined') {\n    return formats.localized;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\n\nvar MASK_USER_INPUT_SYMBOL = '_';\nvar staticDateWith2DigitTokens = new Date('2019-11-21T22:30:00.000');\nvar staticDateWith1DigitTokens = new Date('2019-01-01T09:00:00.000');\n\nfunction checkMaskIsValidForCurrentFormat(mask, format, acceptRegex, utils) {\n  var formattedDateWith1Digit = utils.formatByString(utils.date(staticDateWith1DigitTokens), format);\n  var inferredFormatPatternWith1Digits = formattedDateWith1Digit.replace(acceptRegex, MASK_USER_INPUT_SYMBOL);\n  var inferredFormatPatternWith2Digits = utils.formatByString(utils.date(staticDateWith2DigitTokens), format).replace(acceptRegex, '_');\n  var isMaskValid = inferredFormatPatternWith2Digits === mask && inferredFormatPatternWith1Digits === mask; // @ts-ignore Ignore this warning for luxon because it is appearing mostly always (related to the formats structure of luxon itself)\n\n  if (!isMaskValid && utils.lib !== 'luxon' && process.env.NODE_ENV !== 'production') {\n    console.warn(\"The mask \\\"\".concat(mask, \"\\\" you passed is not valid for the format used \").concat(format, \". Falling down to uncontrolled not-masked input.\"));\n  }\n\n  return isMaskValid;\n}\n\nvar maskedDateFormatter = function maskedDateFormatter(mask, acceptRegexp) {\n  return function (value) {\n    return value.split('').map(function (_char, i) {\n      acceptRegexp.lastIndex = 0;\n\n      if (i > mask.length - 1) {\n        return '';\n      }\n\n      var maskChar = mask[i];\n      var nextMaskChar = mask[i + 1];\n      var acceptedChar = acceptRegexp.test(_char) ? _char : '';\n      var formattedChar = maskChar === MASK_USER_INPUT_SYMBOL ? acceptedChar : maskChar + acceptedChar;\n\n      if (i === value.length - 1 && nextMaskChar && nextMaskChar !== MASK_USER_INPUT_SYMBOL) {\n        // when cursor at the end of mask part (e.g. month) prerender next symbol \"21\" -> \"21/\"\n        return formattedChar ? formattedChar + nextMaskChar : '';\n      } else {\n        return formattedChar;\n      }\n    }).join('');\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction useMaskedInput(_ref) {\n  var _ref$acceptRegex = _ref.acceptRegex,\n      acceptRegex = _ref$acceptRegex === void 0 ? /[\\d]/gi : _ref$acceptRegex,\n      disabled = _ref.disabled,\n      disableMaskedInput = _ref.disableMaskedInput,\n      ignoreInvalidInputs = _ref.ignoreInvalidInputs,\n      inputFormat = _ref.inputFormat,\n      inputProps = _ref.inputProps,\n      label = _ref.label,\n      mask = _ref.mask,\n      onChange = _ref.onChange,\n      rawValue = _ref.rawValue,\n      readOnly = _ref.readOnly,\n      rifmFormatter = _ref.rifmFormatter,\n      TextFieldProps = _ref.TextFieldProps,\n      validationError = _ref.validationError;\n  var utils = useUtils();\n  var isFocusedRef = useRef(false);\n  var getInputValue = useCallback(function () {\n    return getDisplayDate(utils, rawValue, inputFormat);\n  }, [inputFormat, rawValue, utils]);\n  var formatHelperText = utils.getFormatHelperText(inputFormat);\n\n  var _React$useState = useState(getInputValue()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerInputValue = _React$useState2[0],\n      setInnerInputValue = _React$useState2[1];\n\n  var shouldUseMaskedInput = useMemo(function () {\n    // formatting of dates is a quite slow thing, so do not make useless .format calls\n    if (!mask || disableMaskedInput) {\n      return false;\n    }\n\n    return checkMaskIsValidForCurrentFormat(mask, inputFormat, acceptRegex, utils);\n  }, [acceptRegex, disableMaskedInput, inputFormat, mask, utils]);\n  var formatter = useMemo(function () {\n    return shouldUseMaskedInput && mask ? maskedDateFormatter(mask, acceptRegex) : function (st) {\n      return st;\n    };\n  }, [acceptRegex, mask, shouldUseMaskedInput]);\n  useEffect(function () {\n    // We do not need to update the input value on keystroke\n    // Because library formatters can change inputs from 12/12/2 to 12/12/0002\n    if ((rawValue === null || utils.isValid(rawValue)) && !isFocusedRef.current) {\n      setInnerInputValue(getInputValue());\n    }\n  }, [utils, getInputValue, rawValue]);\n\n  var handleChange = function handleChange(text) {\n    var finalString = text === '' || text === mask ? '' : text;\n    setInnerInputValue(finalString);\n    var date = finalString === null ? null : utils.parse(finalString, inputFormat);\n\n    if (ignoreInvalidInputs && !utils.isValid(date)) {\n      return;\n    }\n\n    onChange(date, finalString || undefined);\n  };\n\n  var rifmProps = useRifm({\n    value: innerInputValue,\n    onChange: handleChange,\n    format: rifmFormatter || formatter\n  });\n  var inputStateArgs = shouldUseMaskedInput ? rifmProps : {\n    value: innerInputValue,\n    onChange: function onChange(event) {\n      handleChange(event.currentTarget.value);\n    }\n  };\n  return _objectSpread({\n    label: label,\n    disabled: disabled,\n    error: validationError,\n    helperText: formatHelperText,\n    inputProps: _objectSpread(_objectSpread(_objectSpread({}, inputStateArgs), {}, {\n      disabled: disabled,\n      // make spreading in custom input easier\n      placeholder: formatHelperText,\n      readOnly: readOnly,\n      type: shouldUseMaskedInput ? 'tel' : 'text'\n    }, inputProps), {}, {\n      onFocus: createDelegatedEventHandler(function () {\n        return isFocusedRef.current = true;\n      }, inputProps === null || inputProps === void 0 ? void 0 : inputProps.onFocus),\n      onBlur: createDelegatedEventHandler(function () {\n        return isFocusedRef.current = false;\n      }, inputProps === null || inputProps === void 0 ? void 0 : inputProps.onBlur)\n    })\n  }, TextFieldProps);\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar KeyboardDateInput = function KeyboardDateInput(_ref) {\n  var containerRef = _ref.containerRef,\n      _ref$inputRef = _ref.inputRef,\n      inputRef = _ref$inputRef === void 0 ? null : _ref$inputRef,\n      _ref$forwardedRef = _ref.forwardedRef,\n      forwardedRef = _ref$forwardedRef === void 0 ? null : _ref$forwardedRef,\n      hideOpenPickerButton = _ref.disableOpenPicker,\n      _ref$getOpenDialogAri = _ref.getOpenDialogAriaText,\n      getOpenDialogAriaText = _ref$getOpenDialogAri === void 0 ? getTextFieldAriaText : _ref$getOpenDialogAri,\n      InputAdornmentProps = _ref.InputAdornmentProps,\n      InputProps = _ref.InputProps,\n      onOpen = _ref.openPicker,\n      OpenPickerButtonProps = _ref.OpenPickerButtonProps,\n      _ref$openPickerIcon = _ref.openPickerIcon,\n      openPickerIcon = _ref$openPickerIcon === void 0 ? /*#__PURE__*/createElement(CalendarIcon, null) : _ref$openPickerIcon,\n      renderInput = _ref.renderInput,\n      other = _objectWithoutProperties(_ref, [\"containerRef\", \"inputRef\", \"forwardedRef\", \"disableOpenPicker\", \"getOpenDialogAriaText\", \"InputAdornmentProps\", \"InputProps\", \"openPicker\", \"OpenPickerButtonProps\", \"openPickerIcon\", \"renderInput\"]);\n\n  var utils = useUtils();\n  var inputRefHandle = useForkRef(inputRef, forwardedRef);\n  var textFieldProps = useMaskedInput(other);\n  var adornmentPosition = (InputAdornmentProps === null || InputAdornmentProps === void 0 ? void 0 : InputAdornmentProps.position) || 'end';\n  return renderInput(_objectSpread$1(_objectSpread$1({\n    ref: containerRef,\n    inputRef: inputRefHandle\n  }, textFieldProps), {}, {\n    InputProps: _objectSpread$1(_objectSpread$1({}, InputProps), {}, _defineProperty({}, \"\".concat(adornmentPosition, \"Adornment\"), hideOpenPickerButton ? undefined : /*#__PURE__*/createElement(InputAdornment, _extends({\n      position: adornmentPosition\n    }, InputAdornmentProps), /*#__PURE__*/createElement(IconButton, _extends({\n      edge: adornmentPosition,\n      \"data-mui-test\": \"open-picker-from-keyboard\",\n      disabled: other.disabled,\n      \"aria-label\": getOpenDialogAriaText(other.rawValue, utils)\n    }, OpenPickerButtonProps, {\n      onClick: onOpen\n    }), openPickerIcon))))\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? KeyboardDateInput.propTypes = {\n  acceptRegex: instanceOf(RegExp),\n  getOpenDialogAriaText: func,\n  mask: string,\n  OpenPickerButtonProps: object,\n  openPickerIcon: node,\n  renderInput: func.isRequired,\n  rifmFormatter: func\n} : void 0;\n\nfunction useParsedDate(possiblyUnparsedValue) {\n  var utils = useUtils();\n  return useMemo(function () {\n    return typeof possiblyUnparsedValue === 'undefined' ? undefined : utils.date(possiblyUnparsedValue);\n  }, [possiblyUnparsedValue, utils]);\n}\n\nfunction useNextMonthDisabled(month, _ref) {\n  var disableFuture = _ref.disableFuture,\n      maxDate = _ref.maxDate;\n  var utils = useUtils();\n  return useMemo(function () {\n    var now = utils.date();\n    var lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils]);\n}\n\nfunction usePreviousMonthDisabled(month, _ref2) {\n  var disablePast = _ref2.disablePast,\n      minDate = _ref2.minDate;\n  var utils = useUtils();\n  return useMemo(function () {\n    var now = utils.date();\n    var firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils]);\n}\n\nvar date = oneOfType([object, string, number, instanceOf(Date)]);\nvar datePickerView = oneOf(['year', 'month', 'day']);\nvar defaultMinDate = new Date('1900-01-01');\nvar defaultMaxDate = new Date('2099-12-31');\n\nfunction useViews(_ref) {\n  var views = _ref.views,\n      openTo = _ref.openTo,\n      onChange = _ref.onChange,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView;\n\n  var _React$useState = useState(openTo && arrayIncludes(views, openTo) ? openTo : views[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openView = _React$useState2[0],\n      _setOpenView = _React$useState2[1];\n\n  var setOpenView = useCallback(function () {\n    if (isMobileKeyboardViewOpen) {\n      toggleMobileKeyboardView();\n    }\n\n    _setOpenView.apply(void 0, arguments);\n  }, [isMobileKeyboardViewOpen, toggleMobileKeyboardView]);\n  var previousView = views[views.indexOf(openView) - 1];\n  var nextView = views[views.indexOf(openView) + 1];\n  var openNext = useCallback(function () {\n    if (nextView) {\n      setOpenView(nextView);\n    }\n  }, [nextView, setOpenView]);\n  var handleChangeAndOpenNext = useCallback(function (date, currentViewSelectionState) {\n    var isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n    var globalSelectionState = isSelectionFinishedOnCurrentView && Boolean(nextView) ? 'partial' : currentViewSelectionState;\n    onChange(date, globalSelectionState);\n\n    if (isSelectionFinishedOnCurrentView) {\n      openNext();\n    }\n  }, [nextView, onChange, openNext]);\n  return {\n    nextView: nextView,\n    previousView: previousView,\n    openNext: openNext,\n    handleChangeAndOpenNext: handleChangeAndOpenNext,\n    openView: openView,\n    setOpenView: setOpenView\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flex: '1 0 33.33%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      height: 64,\n      transition: theme.transitions.create('font-size', {\n        duration: '100ms'\n      }),\n      '&:focus': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium\n      },\n      '&:disabled': {\n        pointerEvents: 'none',\n        color: theme.palette.text.secondary\n      },\n      '&$selected': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    selected: {}\n  };\n}, {\n  name: 'MuiPickersMonth'\n});\n\nvar Month = function Month(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      onSelect = _ref.onSelect,\n      selected = _ref.selected,\n      value = _ref.value,\n      other = _objectWithoutProperties(_ref, [\"children\", \"disabled\", \"onSelect\", \"selected\", \"value\"]);\n\n  var classes = useStyles();\n  var handleSelection = useCallback(function () {\n    onSelect(value);\n  }, [onSelect, value]);\n  return /*#__PURE__*/createElement(Typography, _extends({\n    \"data-mui-test\": \"month\",\n    role: \"button\",\n    component: \"div\",\n    className: clsx(classes.root, selected && classes.selected),\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleSelection,\n    onKeyDown: onSpaceOrEnter(handleSelection),\n    color: selected ? 'primary' : undefined,\n    variant: selected ? 'h5' : 'subtitle1',\n    children: children\n  }, other));\n};\n\nMonth.displayName = 'Month';\nvar useStyles$1 = makeStyles({\n  root: {\n    width: 310,\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'stretch'\n  }\n}, {\n  name: 'MuiPickersMonthSelection'\n});\n\nvar MonthSelection = function MonthSelection(_ref) {\n  var date = _ref.date,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      maxDate = _ref.maxDate,\n      minDate = _ref.minDate,\n      onChange = _ref.onChange,\n      onMonthChange = _ref.onMonthChange;\n  var utils = useUtils();\n  var classes = useStyles$1();\n  var currentMonth = utils.getMonth(date);\n\n  var shouldDisableMonth = function shouldDisableMonth(month) {\n    var now = utils.date();\n    var utilMinDate = utils.date(minDate);\n    var utilMaxDate = utils.date(maxDate);\n    var firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, utilMinDate) ? now : utilMinDate);\n    var lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, utilMaxDate) ? now : utilMaxDate);\n    var isBeforeFirstEnabled = utils.isBefore(month, firstEnabledMonth);\n    var isAfterLastEnabled = utils.isAfter(month, lastEnabledMonth);\n    return isBeforeFirstEnabled || isAfterLastEnabled;\n  };\n\n  var onMonthSelect = useCallback(function (month) {\n    var newDate = utils.setMonth(date, month);\n    onChange(newDate, 'finish');\n\n    if (onMonthChange) {\n      onMonthChange(newDate);\n    }\n  }, [date, onChange, onMonthChange, utils]);\n  return /*#__PURE__*/createElement(\"div\", {\n    className: classes.root\n  }, utils.getMonthArray(date).map(function (month) {\n    var monthNumber = utils.getMonth(month);\n    var monthText = utils.format(month, 'monthShort');\n    return /*#__PURE__*/createElement(Month, {\n      key: monthText,\n      value: monthNumber,\n      selected: monthNumber === currentMonth,\n      onSelect: onMonthSelect,\n      disabled: shouldDisableMonth(month)\n    }, monthText);\n  }));\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar createCalendarStateReducer = function createCalendarStateReducer(reduceAnimations, disableSwitchToMonthOnDayFocus, utils) {\n  return function (state, action) {\n    switch (action.type) {\n      case 'changeMonth':\n        {\n          return _objectSpread$2(_objectSpread$2({}, state), {}, {\n            slideDirection: action.direction,\n            currentMonth: action.newMonth,\n            isMonthSwitchingAnimating: !reduceAnimations\n          });\n        }\n\n      case 'finishMonthSwitchingAnimation':\n        {\n          return _objectSpread$2(_objectSpread$2({}, state), {}, {\n            isMonthSwitchingAnimating: false\n          });\n        }\n\n      case 'changeFocusedDay':\n        {\n          var needMonthSwitch = Boolean(action.focusedDay) && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n          return _objectSpread$2(_objectSpread$2({}, state), {}, {\n            focusedDay: action.focusedDay,\n            isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n            currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n            slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n          });\n        }\n    }\n  };\n};\n\nfunction useCalendarState(_ref) {\n  var date = _ref.date,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      _ref$disableSwitchToM = _ref.disableSwitchToMonthOnDayFocus,\n      disableSwitchToMonthOnDayFocus = _ref$disableSwitchToM === void 0 ? false : _ref$disableSwitchToM,\n      maxDate = _ref.maxDate,\n      minDate = _ref.minDate,\n      onMonthChange = _ref.onMonthChange,\n      reduceAnimations = _ref.reduceAnimations,\n      shouldDisableDate = _ref.shouldDisableDate;\n  var now = useNow();\n  var utils = useUtils();\n  var dateForMonth = date || now;\n  var reducerFn = useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n\n  var _React$useReducer = useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date,\n    currentMonth: utils.startOfMonth(dateForMonth),\n    slideDirection: 'left'\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      calendarState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var handleChangeMonth = useCallback(function (payload) {\n    dispatch(_objectSpread$2({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  var changeMonth = useCallback(function (newDate) {\n    var newDateRequested = newDate !== null && newDate !== void 0 ? newDate : now;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  var isDateDisabled = useCallback(function (day) {\n    return validateDate(utils, day, {\n      disablePast: disablePast,\n      disableFuture: disableFuture,\n      minDate: minDate,\n      maxDate: maxDate,\n      shouldDisableDate: shouldDisableDate\n    }) !== null;\n  }, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  var onMonthSwitchingAnimationEnd = useCallback(function () {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  var changeFocusedDay = useCallback(function (newFocusedDate) {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState: calendarState,\n    changeMonth: changeMonth,\n    changeFocusedDay: changeFocusedDay,\n    isDateDisabled: isDateDisabled,\n    onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n    handleChangeMonth: handleChangeMonth\n  };\n}\n\nvar animationDuration = 500;\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'block',\n      position: 'relative'\n    },\n    fadeEnter: {\n      willChange: 'transform',\n      opacity: 0\n    },\n    fadeEnterActive: {\n      opacity: 1,\n      transition: theme.transitions.create('opacity', {\n        duration: animationDuration\n      })\n    },\n    fadeExit: {\n      opacity: 1\n    },\n    fadeExitActive: {\n      opacity: 0,\n      transition: theme.transitions.create('opacity', {\n        duration: animationDuration / 2\n      })\n    }\n  };\n}, {\n  name: 'MuiPickersFadeTransition'\n});\n\nvar FadeTransitionGroup = function FadeTransitionGroup(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      reduceAnimations = _ref.reduceAnimations,\n      transKey = _ref.transKey;\n  var classes = useStyles$2();\n\n  if (reduceAnimations) {\n    return children;\n  }\n\n  var transitionClasses = {\n    exit: classes.fadeExit,\n    enterActive: classes.fadeEnterActive,\n    enter: classes.fadeEnter,\n    exitActive: classes.fadeExitActive\n  };\n  return /*#__PURE__*/createElement(TransitionGroup, {\n    className: clsx(classes.root, className),\n    childFactory: function childFactory(element) {\n      return cloneElement(element, {\n        classNames: transitionClasses\n      });\n    }\n  }, /*#__PURE__*/createElement(CSSTransition, {\n    mountOnEnter: true,\n    unmountOnExit: true,\n    key: transKey,\n    timeout: {\n      appear: animationDuration,\n      enter: animationDuration / 2,\n      exit: 0\n    },\n    classNames: transitionClasses,\n    children: children\n  }));\n};\n/**\n * @ignore - internal component.\n */\n\n\nvar ArrowDropDownIcon = createSvgIcon( /*#__PURE__*/createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 16,\n      marginBottom: 8,\n      paddingLeft: 24,\n      paddingRight: 12,\n      // prevent jumping in safari\n      maxHeight: 30,\n      minHeight: 30\n    },\n    yearSelectionSwitcher: {\n      marginRight: 'auto'\n    },\n    previousMonthButton: {\n      marginRight: 24\n    },\n    switchViewDropdown: {\n      willChange: 'transform',\n      transition: theme.transitions.create('transform'),\n      transform: 'rotate(0deg)'\n    },\n    switchViewDropdownDown: {\n      transform: 'rotate(180deg)'\n    },\n    monthTitleContainer: {\n      display: 'flex',\n      maxHeight: 30,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      marginRight: 'auto'\n    },\n    monthText: {\n      marginRight: 4\n    }\n  };\n}, {\n  name: 'MuiPickersCalendarHeader'\n});\n\nfunction getSwitchingViewAriaText(view) {\n  return view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view';\n}\n\nvar CalendarHeader = function CalendarHeader(_ref) {\n  var currentView = _ref.view,\n      views = _ref.views,\n      month = _ref.currentMonth,\n      changeView = _ref.changeView,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      onMonthChange = _ref.onMonthChange,\n      reduceAnimations = _ref.reduceAnimations,\n      leftArrowButtonProps = _ref.leftArrowButtonProps,\n      rightArrowButtonProps = _ref.rightArrowButtonProps,\n      leftArrowIcon = _ref.leftArrowIcon,\n      rightArrowIcon = _ref.rightArrowIcon,\n      _ref$leftArrowButtonT = _ref.leftArrowButtonText,\n      leftArrowButtonText = _ref$leftArrowButtonT === void 0 ? 'previous month' : _ref$leftArrowButtonT,\n      _ref$rightArrowButton = _ref.rightArrowButtonText,\n      rightArrowButtonText = _ref$rightArrowButton === void 0 ? 'next month' : _ref$rightArrowButton,\n      _ref$getViewSwitching = _ref.getViewSwitchingButtonText,\n      getViewSwitchingButtonText = _ref$getViewSwitching === void 0 ? getSwitchingViewAriaText : _ref$getViewSwitching;\n  var utils = useUtils();\n  var classes = useStyles$3();\n\n  var selectNextMonth = function selectNextMonth() {\n    return onMonthChange(utils.getNextMonth(month), 'left');\n  };\n\n  var selectPreviousMonth = function selectPreviousMonth() {\n    return onMonthChange(utils.getPreviousMonth(month), 'right');\n  };\n\n  var isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture: disableFuture,\n    maxDate: maxDate\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast: disablePast,\n    minDate: minDate\n  });\n\n  var toggleView = function toggleView() {\n    if (views.length === 1) {\n      return;\n    }\n\n    if (views.length === 2) {\n      changeView(views.find(function (view) {\n        return view !== currentView;\n      }) || views[0]);\n    } else {\n      // switching only between first 2\n      var nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      changeView(views[nextIndexToOpen]);\n    }\n  };\n\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(\"div\", {\n    className: classes.root\n  }, /*#__PURE__*/createElement(\"div\", {\n    className: classes.monthTitleContainer,\n    onClick: toggleView\n  }, /*#__PURE__*/createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    transKey: utils.format(month, 'month')\n  }, /*#__PURE__*/createElement(Typography, {\n    \"aria-live\": \"polite\",\n    \"data-mui-test\": \"calendar-month-text\",\n    align: \"center\",\n    variant: \"subtitle1\",\n    className: classes.monthText,\n    children: utils.format(month, 'month')\n  })), /*#__PURE__*/createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    transKey: utils.format(month, 'year')\n  }, /*#__PURE__*/createElement(Typography, {\n    \"aria-live\": \"polite\",\n    \"data-mui-test\": \"calendar-year-text\",\n    align: \"center\",\n    variant: \"subtitle1\",\n    children: utils.format(month, 'year')\n  })), views.length > 1 && /*#__PURE__*/createElement(IconButton, {\n    size: \"small\",\n    \"data-mui-test\": \"calendar-view-switcher\",\n    onClick: toggleView,\n    className: classes.yearSelectionSwitcher,\n    \"aria-label\": getViewSwitchingButtonText(currentView)\n  }, /*#__PURE__*/createElement(ArrowDropDownIcon, {\n    className: clsx(classes.switchViewDropdown, currentView === 'year' && classes.switchViewDropdownDown)\n  }))), /*#__PURE__*/createElement(Fade, {\n    \"in\": currentView === 'date'\n  }, /*#__PURE__*/createElement(ArrowSwitcher, {\n    leftArrowButtonProps: leftArrowButtonProps,\n    rightArrowButtonProps: rightArrowButtonProps,\n    leftArrowButtonText: leftArrowButtonText,\n    rightArrowButtonText: rightArrowButtonText,\n    leftArrowIcon: leftArrowIcon,\n    rightArrowIcon: rightArrowIcon,\n    onLeftClick: selectPreviousMonth,\n    onRightClick: selectNextMonth,\n    isLeftDisabled: isPreviousMonthDisabled,\n    isRightDisabled: isNextMonthDisabled\n  }))));\n};\n\nCalendarHeader.displayName = 'PickersCalendarHeader';\nprocess.env.NODE_ENV !== \"production\" ? CalendarHeader.propTypes = {\n  leftArrowIcon: node,\n  rightArrowIcon: node,\n  leftArrowButtonText: string,\n  rightArrowButtonText: string\n} : void 0;\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useStyles$4 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexBasis: '33.3%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&$disabled': {\n        color: theme.palette.text.secondary\n      },\n      '&$selected': {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        backgroundColor: theme.palette.primary.main,\n        '&:focus, &:hover': {\n          backgroundColor: theme.palette.primary.dark\n        }\n      }\n    },\n    modeDesktop: {\n      flexBasis: '25%'\n    },\n    yearButton: _objectSpread$3(_objectSpread$3({\n      color: 'unset',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 0\n    }, theme.typography.subtitle1), {}, {\n      margin: '8px 0',\n      height: 36,\n      width: 72,\n      borderRadius: 16,\n      cursor: 'pointer',\n      '&:focus, &:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }),\n    disabled: {},\n    selected: {}\n  };\n}, {\n  name: 'MuiPickersYear'\n});\n\nvar Year = function Year(_ref) {\n  var allowKeyboardControl = _ref.allowKeyboardControl,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      focused = _ref.focused,\n      forwardedRef = _ref.forwardedRef,\n      onSelect = _ref.onSelect,\n      selected = _ref.selected,\n      value = _ref.value;\n  var classes = useStyles$4();\n  var ref = useRef(null);\n  var refHandle = useForkRef(ref, forwardedRef);\n  var canAutoFocus = useCanAutoFocus();\n  var wrapperVariant = useContext(WrapperVariantContext);\n  useEffect(function () {\n    if (canAutoFocus && focused && ref.current && !disabled && allowKeyboardControl) {\n      ref.current.focus();\n    }\n  }, [allowKeyboardControl, canAutoFocus, disabled, focused]);\n  return /*#__PURE__*/createElement(\"div\", {\n    \"data-mui-test\": \"year\",\n    className: clsx(classes.root, wrapperVariant === 'desktop' && classes.modeDesktop)\n  }, /*#__PURE__*/createElement(\"button\", {\n    ref: refHandle,\n    disabled: disabled,\n    \"data-mui-test\": \"year-\".concat(children),\n    tabIndex: selected ? 0 : -1,\n    onClick: function onClick() {\n      return onSelect(value);\n    },\n    onKeyDown: onSpaceOrEnter(function () {\n      return onSelect(value);\n    }),\n    className: clsx(classes.yearButton, disabled && classes.disabled, selected && classes.selected)\n  }, children));\n};\n\nvar Year$1 = forwardRef(function (props, ref) {\n  return /*#__PURE__*/createElement(Year, _extends({}, props, {\n    forwardedRef: ref\n  }));\n});\nvar useStyles$5 = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    height: '100%',\n    margin: '0 4px'\n  }\n}, {\n  name: 'MuiPickersYearSelection'\n});\n\nvar YearSelection = function YearSelection(_ref) {\n  var _useGlobalKeyDown;\n\n  var allowKeyboardControl = _ref.allowKeyboardControl,\n      changeFocusedDay = _ref.changeFocusedDay,\n      __dateOrNull = _ref.date,\n      isDateDisabled = _ref.isDateDisabled,\n      maxDate = _ref.maxDate,\n      minDate = _ref.minDate,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      onChange = _ref.onChange,\n      onYearChange = _ref.onYearChange,\n      shouldDisableYear = _ref.shouldDisableYear;\n  var now = useNow();\n  var theme = useTheme();\n  var utils = useUtils();\n  var classes = useStyles$5();\n  var selectedDate = __dateOrNull || now;\n  var currentYear = utils.getYear(selectedDate);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var selectedYearRef = useRef(null);\n\n  var _React$useState = useState(currentYear),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusedYear = _React$useState2[0],\n      setFocusedYear = _React$useState2[1];\n\n  var handleYearSelection = useCallback(function (year) {\n    var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'finish';\n\n    var submitDate = function submitDate(newDate) {\n      onChange(newDate, isFinish);\n      changeFocusedDay(newDate);\n\n      if (onYearChange) {\n        onYearChange(newDate);\n      }\n    };\n\n    var newDate = utils.setYear(selectedDate, year);\n\n    if (isDateDisabled(newDate)) {\n      var closestEnabledDate = findClosestEnabledDate({\n        utils: utils,\n        date: newDate,\n        minDate: minDate,\n        maxDate: maxDate,\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled\n      });\n      submitDate(closestEnabledDate);\n    } else {\n      submitDate(newDate);\n    }\n  }, [utils, selectedDate, isDateDisabled, onChange, changeFocusedDay, onYearChange, minDate, maxDate, disablePast, disableFuture]);\n  var focusYear = useCallback(function (year) {\n    if (!isDateDisabled(utils.setYear(selectedDate, year))) {\n      setFocusedYear(year);\n    }\n  }, [selectedDate, isDateDisabled, utils]);\n  var yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  var nowFocusedYear = focusedYear || currentYear;\n  useGlobalKeyDown(Boolean(allowKeyboardControl), (_useGlobalKeyDown = {}, _defineProperty(_useGlobalKeyDown, keycode.ArrowUp, function () {\n    return focusYear(nowFocusedYear - yearsInRow);\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowDown, function () {\n    return focusYear(nowFocusedYear + yearsInRow);\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowLeft, function () {\n    return focusYear(nowFocusedYear + (theme.direction === 'ltr' ? -1 : 1));\n  }), _defineProperty(_useGlobalKeyDown, keycode.ArrowRight, function () {\n    return focusYear(nowFocusedYear + (theme.direction === 'ltr' ? 1 : -1));\n  }), _useGlobalKeyDown));\n  return /*#__PURE__*/createElement(\"div\", {\n    className: classes.root\n  }, utils.getYearRange(minDate, maxDate).map(function (year) {\n    var yearNumber = utils.getYear(year);\n    var selected = yearNumber === currentYear;\n    return /*#__PURE__*/createElement(Year$1, {\n      key: utils.format(year, 'year'),\n      selected: selected,\n      value: yearNumber,\n      onSelect: handleYearSelection,\n      allowKeyboardControl: allowKeyboardControl,\n      focused: yearNumber === focusedYear,\n      ref: selected ? selectedYearRef : undefined,\n      disabled: disablePast && utils.isBeforeYear(year, now) || disableFuture && utils.isAfterYear(year, now) || shouldDisableYear && shouldDisableYear(year)\n    }, utils.format(year, 'year'));\n  }));\n};\n\nvar muiComponentConfig = {\n  name: 'MuiPickersCalendarView'\n};\nvar useStyles$6 = makeStyles({\n  viewTransitionContainer: {\n    overflowY: 'auto'\n  },\n  fullHeightContainer: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: (DAY_SIZE + DAY_MARGIN * 4) * 7,\n    height: '100%'\n  }\n}, muiComponentConfig);\nvar defaultReduceAnimations = typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\nvar CalendarView = withDefaultProps(muiComponentConfig, function (_ref) {\n  var __allowKeyboardControlProp = _ref.allowKeyboardControl,\n      changeView = _ref.changeView,\n      date = _ref.date,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      loading = _ref.loading,\n      __maxDate = _ref.maxDate,\n      __minDate = _ref.minDate,\n      onChange = _ref.onChange,\n      onMonthChange = _ref.onMonthChange,\n      _ref$reduceAnimations = _ref.reduceAnimations,\n      reduceAnimations = _ref$reduceAnimations === void 0 ? defaultReduceAnimations : _ref$reduceAnimations,\n      renderLoading = _ref.renderLoading,\n      shouldDisableDate = _ref.shouldDisableDate,\n      shouldDisableYear = _ref.shouldDisableYear,\n      view = _ref.view,\n      other = _objectWithoutProperties(_ref, [\"allowKeyboardControl\", \"changeView\", \"date\", \"disableFuture\", \"disablePast\", \"loading\", \"maxDate\", \"minDate\", \"onChange\", \"onMonthChange\", \"reduceAnimations\", \"renderLoading\", \"shouldDisableDate\", \"shouldDisableYear\", \"view\"]);\n\n  var utils = useUtils();\n  var classes = useStyles$6();\n  var isStatic = useContext(IsStaticVariantContext);\n  var allowKeyboardControl = __allowKeyboardControlProp !== null && __allowKeyboardControlProp !== void 0 ? __allowKeyboardControlProp : !isStatic;\n\n  var minDate = __minDate || utils.date(defaultMinDate);\n\n  var maxDate = __maxDate || utils.date(defaultMaxDate);\n\n  var _useCalendarState = useCalendarState({\n    date: date,\n    reduceAnimations: reduceAnimations,\n    onMonthChange: onMonthChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    shouldDisableDate: shouldDisableDate,\n    disablePast: disablePast,\n    disableFuture: disableFuture\n  }),\n      calendarState = _useCalendarState.calendarState,\n      changeFocusedDay = _useCalendarState.changeFocusedDay,\n      changeMonth = _useCalendarState.changeMonth,\n      isDateDisabled = _useCalendarState.isDateDisabled,\n      handleChangeMonth = _useCalendarState.handleChangeMonth,\n      onMonthSwitchingAnimationEnd = _useCalendarState.onMonthSwitchingAnimationEnd;\n\n  useEffect(function () {\n    if (date && isDateDisabled(date)) {\n      var closestEnabledDate = findClosestEnabledDate({\n        utils: utils,\n        date: date,\n        minDate: minDate,\n        maxDate: maxDate,\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled\n      });\n      onChange(closestEnabledDate, 'partial');\n    } // This call is too expensive to run it on each prop change.\n    // So just ensure that we are not rendering disabled as selected on mount.\n\n  }, []); // eslint-disable-line\n\n  useEffect(function () {\n    changeMonth(date);\n  }, [date]); // eslint-disable-line\n\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(CalendarHeader, _extends({}, other, {\n    view: view,\n    currentMonth: calendarState.currentMonth,\n    changeView: changeView,\n    onMonthChange: function onMonthChange(newMonth, direction) {\n      return handleChangeMonth({\n        newMonth: newMonth,\n        direction: direction\n      });\n    },\n    minDate: minDate,\n    maxDate: maxDate,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    reduceAnimations: reduceAnimations\n  })), /*#__PURE__*/createElement(FadeTransitionGroup, {\n    reduceAnimations: reduceAnimations,\n    className: classes.viewTransitionContainer,\n    transKey: view\n  }, /*#__PURE__*/createElement(\"div\", null, view === 'year' && /*#__PURE__*/createElement(YearSelection, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    isDateDisabled: isDateDisabled,\n    allowKeyboardControl: allowKeyboardControl,\n    shouldDisableYear: shouldDisableYear,\n    changeFocusedDay: changeFocusedDay\n  })), view === 'month' && /*#__PURE__*/createElement(MonthSelection, _extends({}, other, {\n    date: date,\n    onChange: onChange,\n    minDate: minDate,\n    maxDate: maxDate,\n    onMonthChange: onMonthChange\n  })), view === 'date' && /*#__PURE__*/createElement(Calendar, _extends({}, other, calendarState, {\n    onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n    changeFocusedDay: changeFocusedDay,\n    reduceAnimations: reduceAnimations,\n    date: date,\n    onChange: onChange,\n    isDateDisabled: isDateDisabled,\n    allowKeyboardControl: allowKeyboardControl,\n    loading: loading,\n    renderLoading: renderLoading\n  })))));\n});\n\nvar getOrientation = function getOrientation() {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  } // Support IOS safari\n\n\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nfunction useIsLandscape(views, customOrientation) {\n  var _React$useState = useState(getOrientation()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orientation = _React$useState2[0],\n      setOrientation = _React$useState2[1];\n\n  useIsomorphicEffect(function () {\n    var eventHandler = function eventHandler() {\n      setOrientation(getOrientation());\n    };\n\n    window.addEventListener('orientationchange', eventHandler);\n    return function () {\n      window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, []);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  var orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\n\nvar MobileKeyboardInputView = styled('div')({\n  padding: '16px 24px'\n}, {\n  name: 'MuiPickersMobileKeyboardInputView'\n});\nvar muiComponentConfig$1 = {\n  name: 'MuiPickersBasePicker'\n};\nvar useStyles$7 = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  landscape: {\n    flexDirection: 'row'\n  },\n  pickerView: {\n    overflowX: 'hidden',\n    width: DIALOG_WIDTH,\n    maxHeight: VIEW_HEIGHT,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto'\n  },\n  pickerViewLandscape: {\n    padding: '0 8px'\n  }\n}, muiComponentConfig$1);\nvar MobileKeyboardTextFieldProps = {\n  fullWidth: true\n};\n\nvar isDatePickerView = function isDatePickerView(view) {\n  return view === 'year' || view === 'month' || view === 'date';\n};\n\nfunction Picker(_ref) {\n  var className = _ref.className,\n      date = _ref.date,\n      DateInputProps = _ref.DateInputProps,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      onDateChange = _ref.onDateChange,\n      _ref$openTo = _ref.openTo,\n      openTo = _ref$openTo === void 0 ? 'date' : _ref$openTo,\n      orientation = _ref.orientation,\n      showToolbar = _ref.showToolbar,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      _ref$ToolbarComponent = _ref.ToolbarComponent,\n      ToolbarComponent = _ref$ToolbarComponent === void 0 ? function () {\n    return null;\n  } : _ref$ToolbarComponent,\n      toolbarFormat = _ref.toolbarFormat,\n      toolbarPlaceholder = _ref.toolbarPlaceholder,\n      toolbarTitle = _ref.toolbarTitle,\n      _ref$views = _ref.views,\n      views = _ref$views === void 0 ? ['year', 'month', 'date', 'hours', 'minutes', 'seconds'] : _ref$views,\n      other = _objectWithoutProperties(_ref, [\"className\", \"date\", \"DateInputProps\", \"isMobileKeyboardViewOpen\", \"onDateChange\", \"openTo\", \"orientation\", \"showToolbar\", \"toggleMobileKeyboardView\", \"ToolbarComponent\", \"toolbarFormat\", \"toolbarPlaceholder\", \"toolbarTitle\", \"views\"]);\n\n  var classes = useStyles$7();\n  var isLandscape = useIsLandscape(views, orientation);\n  var wrapperVariant = useContext(WrapperVariantContext);\n  var toShowToolbar = typeof showToolbar === 'undefined' ? wrapperVariant !== 'desktop' : showToolbar;\n  var handleDateChange = useCallback(function (date, selectionState) {\n    onDateChange(date, wrapperVariant, selectionState);\n  }, [onDateChange, wrapperVariant]);\n\n  var _useViews = useViews({\n    views: views,\n    openTo: openTo,\n    onChange: handleDateChange,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView\n  }),\n      openView = _useViews.openView,\n      nextView = _useViews.nextView,\n      previousView = _useViews.previousView,\n      setOpenView = _useViews.setOpenView,\n      handleChangeAndOpenNext = _useViews.handleChangeAndOpenNext;\n\n  return /*#__PURE__*/createElement(\"div\", {\n    className: clsx(classes.root, className, isLandscape && classes.landscape)\n  }, toShowToolbar && /*#__PURE__*/createElement(ToolbarComponent, _extends({}, other, {\n    views: views,\n    isLandscape: isLandscape,\n    date: date,\n    onChange: handleDateChange,\n    setOpenView: setOpenView,\n    openView: openView,\n    toolbarTitle: toolbarTitle,\n    toolbarFormat: toolbarFormat,\n    toolbarPlaceholder: toolbarPlaceholder,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView\n  })), /*#__PURE__*/createElement(\"div\", {\n    className: clsx(classes.pickerView, isLandscape && classes.pickerViewLandscape)\n  }, isMobileKeyboardViewOpen ? /*#__PURE__*/createElement(MobileKeyboardInputView, null, /*#__PURE__*/createElement(KeyboardDateInput, _extends({}, DateInputProps, {\n    ignoreInvalidInputs: true,\n    disableOpenPicker: true,\n    TextFieldProps: MobileKeyboardTextFieldProps\n  }))) : /*#__PURE__*/createElement(Fragment, null, (openView === 'year' || openView === 'month' || openView === 'date') && /*#__PURE__*/createElement(CalendarView, _extends({\n    date: date,\n    changeView: setOpenView // @ts-ignore\n    ,\n    views: views,\n    onChange: handleChangeAndOpenNext,\n    view: openView\n  }, other)), (openView === 'hours' || openView === 'minutes' || openView === 'seconds') && /*#__PURE__*/createElement(ClockView, _extends({}, other, {\n    date: date,\n    type: openView,\n    onDateChange: handleDateChange,\n    onChange: handleChangeAndOpenNext,\n    openNextView: function openNextView() {\n      return setOpenView(nextView);\n    },\n    openPreviousView: function openPreviousView() {\n      return setOpenView(previousView);\n    },\n    nextViewAvailable: !Boolean(nextView),\n    previousViewAvailable: !Boolean(previousView) || isDatePickerView(previousView),\n    showViewSwitcher: wrapperVariant === 'desktop'\n  })))));\n}\n\nvar Picker$1 = withDefaultProps(muiComponentConfig$1, Picker);\nexport { CalendarHeader as C, KeyboardDateInput as K, MobileKeyboardInputView as M, Picker$1 as P, defaultMaxDate as a, isStartOfRange as b, isEndOfRange as c, defaultMinDate as d, useNextMonthDisabled as e, usePreviousMonthDisabled as f, useParsedDate as g, useCalendarState as h, isWithinRange as i, isRangeValid as j, defaultReduceAnimations as k, date as l, CalendarView as m, isYearOnlyView as n, isYearAndMonthViews as o, parseRangeInputValue as p, getFormatAndMaskByViews as q, validateDate as r, pick12hOr24hFormat as s, getDisplayDate as t, useMaskedInput as u, validateDateRange as v, getTextFieldAriaText as w, parsePickerInputValue as x, useStyles$7 as y };","map":{"version":3,"sources":["../src/_helpers/date-utils.ts","../src/_helpers/text-field-helper.ts","../src/_shared/hooks/useMaskedInput.tsx","../src/_shared/KeyboardDateInput.tsx","../src/_shared/hooks/date-helpers-hooks.tsx","../src/constants/prop-types.ts","../src/_shared/hooks/useViews.tsx","../src/views/Calendar/Month.tsx","../src/views/Calendar/MonthSelection.tsx","../src/views/Calendar/useCalendarState.tsx","../src/views/Calendar/FadeTransitionGroup.tsx","../src/_shared/icons/ArrowDropDownIcon.tsx","../src/views/Calendar/CalendarHeader.tsx","../src/views/Calendar/Year.tsx","../src/views/Calendar/YearSelection.tsx","../src/views/Calendar/CalendarView.tsx","../src/_shared/hooks/useIsLandscape.tsx","../src/views/MobileKeyboardInputView.tsx","../src/Picker/Picker.tsx"],"names":["findClosestEnabledDate","date","utils","minDate","maxDate","disableFuture","disablePast","shouldDisableDate","today","forward","backward","isYearOnlyView","views","isYearAndMonthViews","arrayIncludes","getFormatAndMaskByViews","mask","inputFormat","year","disableMaskedInput","monthAndYear","keyboardDate","value","parsedValue","isRangeValid","Boolean","range","isWithinRange","isStartOfRange","isEndOfRange","validateDate","now","validateDateRange","start","end","dateValidations","rawValue","getDisplayDate","isEmpty","formats","ampm","MASK_USER_INPUT_SYMBOL","staticDateWith2DigitTokens","staticDateWith1DigitTokens","formattedDateWith1Digit","inferredFormatPatternWith1Digits","inferredFormatPatternWith2Digits","isMaskValid","process","console","maskedDateFormatter","acceptRegexp","i","maskChar","nextMaskChar","acceptedChar","formattedChar","acceptRegex","disabled","ignoreInvalidInputs","inputProps","label","onChange","readOnly","rifmFormatter","TextFieldProps","validationError","useUtils","isFocusedRef","React","getInputValue","formatHelperText","innerInputValue","setInnerInputValue","shouldUseMaskedInput","checkMaskIsValidForCurrentFormat","formatter","handleChange","finalString","text","rifmProps","useRifm","format","inputStateArgs","event","error","helperText","placeholder","type","onFocus","createDelegatedEventHandler","onBlur","KeyboardDateInput","containerRef","inputRef","forwardedRef","disableOpenPicker","hideOpenPickerButton","getOpenDialogAriaText","getTextFieldAriaText","InputAdornmentProps","InputProps","openPicker","onOpen","OpenPickerButtonProps","openPickerIcon","React.createElement","renderInput","other","inputRefHandle","useForkRef","textFieldProps","useMaskedInput","adornmentPosition","ref","PropTypes","lastEnabledMonth","firstEnabledMonth","datePickerView","defaultMinDate","defaultMaxDate","openTo","isMobileKeyboardViewOpen","toggleMobileKeyboardView","openView","_setOpenView","setOpenView","previousView","nextView","openNext","handleChangeAndOpenNext","isSelectionFinishedOnCurrentView","currentViewSelectionState","globalSelectionState","useStyles","makeStyles","root","flex","display","alignItems","justifyContent","cursor","outline","height","transition","duration","color","theme","fontWeight","fontWeightMedium","pointerEvents","secondary","selected","name","Month","children","onSelect","classes","handleSelection","clsx","onSpaceOrEnter","width","flexWrap","alignContent","MonthSelection","onMonthChange","currentMonth","shouldDisableMonth","utilMinDate","utilMaxDate","isBeforeFirstEnabled","isAfterLastEnabled","onMonthSelect","newDate","monthNumber","monthText","createCalendarStateReducer","action","slideDirection","isMonthSwitchingAnimating","reduceAnimations","needMonthSwitch","state","focusedDay","disableSwitchToMonthOnDayFocus","useNow","dateForMonth","reducerFn","calendarState","dispatch","handleChangeMonth","payload","changeMonth","newDateRequested","newMonth","direction","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate","animationDuration","position","fadeEnter","willChange","opacity","fadeEnterActive","fadeExit","fadeExitActive","FadeTransitionGroup","className","transKey","transitionClasses","exit","enterActive","enter","exitActive","classNames","appear","ArrowDropDownIcon","createSvgIcon","marginTop","marginBottom","paddingLeft","paddingRight","maxHeight","minHeight","yearSelectionSwitcher","marginRight","previousMonthButton","switchViewDropdown","transform","switchViewDropdownDown","monthTitleContainer","overflow","view","CalendarHeader","currentView","month","changeView","leftArrowButtonProps","rightArrowButtonProps","leftArrowIcon","rightArrowIcon","leftArrowButtonText","rightArrowButtonText","getViewSwitchingButtonText","getSwitchingViewAriaText","selectNextMonth","selectPreviousMonth","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","toggleView","nextIndexToOpen","flexBasis","backgroundColor","dark","modeDesktop","yearButton","border","margin","borderRadius","fade","Year","allowKeyboardControl","focused","refHandle","canAutoFocus","useCanAutoFocus","wrapperVariant","flexDirection","overflowY","YearSelection","__dateOrNull","onYearChange","shouldDisableYear","useTheme","selectedDate","currentYear","selectedYearRef","focusedYear","setFocusedYear","handleYearSelection","isFinish","submitDate","closestEnabledDate","focusYear","yearsInRow","nowFocusedYear","useGlobalKeyDown","keys","yearNumber","muiComponentConfig","viewTransitionContainer","fullHeightContainer","DAY_SIZE","DAY_MARGIN","defaultReduceAnimations","navigator","CalendarView","withDefaultProps","__allowKeyboardControlProp","loading","__maxDate","__minDate","renderLoading","isStatic","useCalendarState","getOrientation","window","Math","Number","orientation","setOrientation","useIsomorphicEffect","eventHandler","orientationToUse","customOrientation","MobileKeyboardInputView","padding","landscape","pickerView","overflowX","pickerViewLandscape","MobileKeyboardTextFieldProps","fullWidth","isDatePickerView","DateInputProps","onDateChange","showToolbar","ToolbarComponent","toolbarFormat","toolbarPlaceholder","toolbarTitle","isLandscape","useIsLandscape","toShowToolbar","handleDateChange","useViews"],"mappings":"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","sourcesContent":["import { arrayIncludes } from './utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { DateRange, RangeInput } from '../DateRangePicker/RangeTypes';\n\ninterface FindClosestDateParams {\n  date: unknown;\n  utils: MuiPickersAdapter;\n  minDate: unknown;\n  maxDate: unknown;\n  disableFuture: boolean;\n  disablePast: boolean;\n  shouldDisableDate: (date: unknown) => boolean;\n}\n\nexport const findClosestEnabledDate = ({\n  date,\n  utils,\n  minDate,\n  maxDate,\n  disableFuture,\n  disablePast,\n  shouldDisableDate,\n}: FindClosestDateParams) => {\n  const today = utils.startOfDay(utils.date());\n\n  if (disablePast && utils.isBefore(minDate!, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  let forward = date;\n  let backward = date;\n  if (utils.isBefore(date, minDate)) {\n    forward = utils.date(minDate);\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = utils.date(maxDate);\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n      backward = utils.addDays(backward, -1);\n    }\n  }\n\n  // fallback to today if no enabled days\n  return utils.date();\n};\n\nexport const isYearOnlyView = (views: readonly DatePickerView[]) =>\n  views.length === 1 && views[0] === 'year';\n\nexport const isYearAndMonthViews = (views: readonly DatePickerView[]) =>\n  views.length === 2 && arrayIncludes(views, 'month') && arrayIncludes(views, 'year');\n\nexport const getFormatAndMaskByViews = (\n  views: readonly DatePickerView[],\n  utils: MuiPickersAdapter\n) => {\n  if (isYearOnlyView(views)) {\n    return {\n      mask: '____',\n      inputFormat: utils.formats.year,\n    };\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return {\n      disableMaskedInput: true,\n      inputFormat: utils.formats.monthAndYear,\n    };\n  }\n\n  return {\n    mask: '__/__/____',\n    inputFormat: utils.formats.keyboardDate,\n  };\n};\n\nexport function parsePickerInputValue(\n  utils: MuiPickersAdapter,\n  { value }: BasePickerProps\n): unknown | null {\n  const parsedValue = utils.date(value);\n\n  return utils.isValid(parsedValue) ? parsedValue : null;\n}\n\nexport function parseRangeInputValue(\n  utils: MuiPickersAdapter,\n  { value = [null, null] }: BasePickerProps<RangeInput, DateRange>\n) {\n  return value.map(date =>\n    !utils.isValid(date) || date === null ? null : utils.startOfDay(utils.date(date))\n  ) as DateRange;\n}\n\nexport const isRangeValid = (\n  utils: MuiPickersAdapter,\n  range: DateRange | null\n): range is DateRange => {\n  return Boolean(range && range[0] && range[1] && utils.isBefore(range[0], range[1]));\n};\n\nexport const isWithinRange = (utils: MuiPickersAdapter, day: unknown, range: DateRange | null) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\n\nexport const isStartOfRange = (utils: MuiPickersAdapter, day: unknown, range: DateRange | null) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\n\nexport const isEndOfRange = (utils: MuiPickersAdapter, day: unknown, range: DateRange | null) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};\n\nexport interface DateValidationProps {\n  /**\n   * Min selectable date. @DateIOType\n   * @default Date(1900-01-01)\n   */\n  minDate?: unknown;\n  /**\n   * Max selectable date. @DateIOType\n   * @default Date(2099-31-12)\n   */\n  maxDate?: unknown;\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate?: (day: unknown) => boolean;\n  /**\n   * Disable past dates.\n   * @default false\n   */\n  disablePast?: boolean;\n  /**\n   * Disable future dates.\n   * @default false\n   */\n  disableFuture?: boolean;\n}\n\nexport const validateDate = (\n  utils: MuiPickersAdapter,\n  value: unknown | ParsableDate,\n  { minDate, maxDate, disableFuture, shouldDisableDate, disablePast }: DateValidationProps\n) => {\n  const now = utils.date();\n  const date = utils.date(value);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(shouldDisableDate && shouldDisableDate(date)):\n      return 'shouldDisableDate';\n\n    case Boolean(disableFuture && utils.isAfterDay(date, now)):\n      return 'disableFuture';\n\n    case Boolean(disablePast && utils.isBeforeDay(date, now)):\n      return 'disablePast';\n\n    case Boolean(minDate && utils.isBeforeDay(date, minDate)):\n      return 'minDate';\n\n    case Boolean(maxDate && utils.isAfterDay(date, maxDate)):\n      return 'maxDate';\n\n    default:\n      return null;\n  }\n};\n\nexport type DateValidationError = ReturnType<typeof validateDate>;\n\ntype DateRangeValidationErrorValue = DateValidationError | 'invalidRange' | null;\n\nexport type DateRangeValidationError = [\n  DateRangeValidationErrorValue,\n  DateRangeValidationErrorValue\n];\n\nexport const validateDateRange = (\n  utils: MuiPickersAdapter,\n  value: RangeInput,\n  dateValidationProps: DateValidationProps\n): [DateRangeValidationErrorValue, DateRangeValidationErrorValue] => {\n  const [start, end] = value;\n\n  // for partial input\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const dateValidations = [\n    validateDate(utils, start, dateValidationProps),\n    validateDate(utils, end, dateValidationProps),\n  ] as [DateRangeValidationErrorValue, DateRangeValidationErrorValue];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(utils, [utils.date(start), utils.date(end)])) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\n","import { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\n\nexport function getTextFieldAriaText(rawValue: ParsableDate, utils: MuiPickersAdapter) {\n  return rawValue && utils.isValid(utils.date(rawValue))\n    ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}`\n    : 'Choose date';\n}\n\nexport const getDisplayDate = (\n  utils: MuiPickersAdapter,\n  value: ParsableDate,\n  inputFormat: string\n) => {\n  const date = utils.date(value);\n  const isEmpty = value === null;\n\n  if (isEmpty) {\n    return '';\n  }\n\n  return utils.isValid(date) ? utils.formatByString(date, inputFormat) : '';\n};\n\nexport function pick12hOr24hFormat(\n  userFormat: string | undefined,\n  ampm: boolean | undefined,\n  formats: { localized: string; '12h': string; '24h': string }\n) {\n  if (userFormat) {\n    return userFormat;\n  }\n\n  if (typeof ampm === 'undefined') {\n    return formats.localized;\n  }\n\n  return ampm ? formats['12h'] : formats['24h'];\n}\n\nconst MASK_USER_INPUT_SYMBOL = '_';\nexport const staticDateWith2DigitTokens = new Date('2019-11-21T22:30:00.000');\nexport const staticDateWith1DigitTokens = new Date('2019-01-01T09:00:00.000');\n\nexport function checkMaskIsValidForCurrentFormat(\n  mask: string,\n  format: string,\n  acceptRegex: RegExp,\n  utils: MuiPickersAdapter\n) {\n  const formattedDateWith1Digit = utils.formatByString(\n    utils.date(staticDateWith1DigitTokens),\n    format\n  );\n  const inferredFormatPatternWith1Digits = formattedDateWith1Digit.replace(\n    acceptRegex,\n    MASK_USER_INPUT_SYMBOL\n  );\n\n  const inferredFormatPatternWith2Digits = utils\n    .formatByString(utils.date(staticDateWith2DigitTokens), format)\n    .replace(acceptRegex, '_');\n\n  const isMaskValid =\n    inferredFormatPatternWith2Digits === mask && inferredFormatPatternWith1Digits === mask;\n\n  // @ts-ignore Ignore this warning for luxon because it is appearing mostly always (related to the formats structure of luxon itself)\n  if (!isMaskValid && utils.lib !== 'luxon' && process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `The mask \"${mask}\" you passed is not valid for the format used ${format}. Falling down to uncontrolled not-masked input.`\n    );\n  }\n\n  return isMaskValid;\n}\n\nexport const maskedDateFormatter = (mask: string, acceptRegexp: RegExp) => (value: string) => {\n  return value\n    .split('')\n    .map((char, i) => {\n      acceptRegexp.lastIndex = 0;\n\n      if (i > mask.length - 1) {\n        return '';\n      }\n\n      const maskChar = mask[i];\n      const nextMaskChar = mask[i + 1];\n\n      const acceptedChar = acceptRegexp.test(char) ? char : '';\n      const formattedChar =\n        maskChar === MASK_USER_INPUT_SYMBOL ? acceptedChar : maskChar + acceptedChar;\n\n      if (i === value.length - 1 && nextMaskChar && nextMaskChar !== MASK_USER_INPUT_SYMBOL) {\n        // when cursor at the end of mask part (e.g. month) prerender next symbol \"21\" -> \"21/\"\n        return formattedChar ? formattedChar + nextMaskChar : '';\n      } else {\n        return formattedChar;\n      }\n    })\n    .join('');\n};\n","import * as React from 'react';\nimport { useRifm } from 'rifm';\nimport { useUtils } from './useUtils';\nimport { createDelegatedEventHandler } from '../../_helpers/utils';\nimport { DateInputProps, MuiTextFieldProps } from '../PureDateInput';\nimport {\n  maskedDateFormatter,\n  getDisplayDate,\n  checkMaskIsValidForCurrentFormat,\n} from '../../_helpers/text-field-helper';\n\ntype MaskedInputProps = Omit<\n  DateInputProps,\n  | 'open'\n  | 'adornmentPosition'\n  | 'renderInput'\n  | 'openPicker'\n  | 'InputProps'\n  | 'InputAdornmentProps'\n  | 'openPickerIcon'\n  | 'disableOpenPicker'\n  | 'getOpenDialogAriaText'\n  | 'OpenPickerButtonProps'\n> & { inputProps?: Partial<React.HTMLProps<HTMLInputElement>> };\n\nexport function useMaskedInput({\n  acceptRegex = /[\\d]/gi,\n  disabled,\n  disableMaskedInput,\n  ignoreInvalidInputs,\n  inputFormat,\n  inputProps,\n  label,\n  mask,\n  onChange,\n  rawValue,\n  readOnly,\n  rifmFormatter,\n  TextFieldProps,\n  validationError,\n}: MaskedInputProps): MuiTextFieldProps {\n  const utils = useUtils();\n  const isFocusedRef = React.useRef(false);\n\n  const getInputValue = React.useCallback(() => getDisplayDate(utils, rawValue, inputFormat), [\n    inputFormat,\n    rawValue,\n    utils,\n  ]);\n\n  const formatHelperText = utils.getFormatHelperText(inputFormat);\n  const [innerInputValue, setInnerInputValue] = React.useState<string>(getInputValue());\n\n  const shouldUseMaskedInput = React.useMemo(() => {\n    // formatting of dates is a quite slow thing, so do not make useless .format calls\n    if (!mask || disableMaskedInput) {\n      return false;\n    }\n\n    return checkMaskIsValidForCurrentFormat(mask, inputFormat, acceptRegex, utils);\n  }, [acceptRegex, disableMaskedInput, inputFormat, mask, utils]);\n\n  const formatter = React.useMemo(\n    () =>\n      shouldUseMaskedInput && mask ? maskedDateFormatter(mask, acceptRegex) : (st: string) => st,\n    [acceptRegex, mask, shouldUseMaskedInput]\n  );\n\n  React.useEffect(() => {\n    // We do not need to update the input value on keystroke\n    // Because library formatters can change inputs from 12/12/2 to 12/12/0002\n    if ((rawValue === null || utils.isValid(rawValue)) && !isFocusedRef.current) {\n      setInnerInputValue(getInputValue());\n    }\n  }, [utils, getInputValue, rawValue]);\n\n  const handleChange = (text: string) => {\n    const finalString = text === '' || text === mask ? '' : text;\n    setInnerInputValue(finalString);\n\n    const date = finalString === null ? null : utils.parse(finalString, inputFormat);\n    if (ignoreInvalidInputs && !utils.isValid(date)) {\n      return;\n    }\n\n    onChange(date, finalString || undefined);\n  };\n\n  const rifmProps = useRifm({\n    value: innerInputValue,\n    onChange: handleChange,\n    format: rifmFormatter || formatter,\n  });\n\n  const inputStateArgs = shouldUseMaskedInput\n    ? rifmProps\n    : {\n        value: innerInputValue,\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          handleChange(event.currentTarget.value);\n        },\n      };\n\n  return {\n    label,\n    disabled,\n    error: validationError,\n    helperText: formatHelperText,\n    inputProps: {\n      ...inputStateArgs,\n      disabled, // make spreading in custom input easier\n      placeholder: formatHelperText,\n      readOnly,\n      type: shouldUseMaskedInput ? 'tel' : 'text',\n      ...inputProps,\n      onFocus: createDelegatedEventHandler(\n        () => (isFocusedRef.current = true),\n        inputProps?.onFocus\n      ),\n      onBlur: createDelegatedEventHandler(() => (isFocusedRef.current = false), inputProps?.onBlur),\n    },\n    ...TextFieldProps,\n  };\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useUtils } from './hooks/useUtils';\nimport { CalendarIcon } from './icons/CalendarIcon';\nimport { useForkRef } from '@material-ui/core/utils';\nimport { useMaskedInput } from './hooks/useMaskedInput';\nimport { DateInputProps, DateInputRefs } from './PureDateInput';\nimport { getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport const KeyboardDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  containerRef,\n  inputRef = null,\n  forwardedRef = null,\n  disableOpenPicker: hideOpenPickerButton,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  InputAdornmentProps,\n  InputProps,\n  openPicker: onOpen,\n  OpenPickerButtonProps,\n  openPickerIcon = <CalendarIcon />,\n  renderInput,\n  ...other\n}) => {\n  const utils = useUtils();\n  const inputRefHandle = useForkRef(inputRef, forwardedRef);\n  const textFieldProps = useMaskedInput(other);\n  const adornmentPosition = InputAdornmentProps?.position || 'end';\n\n  return renderInput({\n    ref: containerRef,\n    inputRef: inputRefHandle,\n    ...textFieldProps,\n    InputProps: {\n      ...InputProps,\n      [`${adornmentPosition}Adornment`]: hideOpenPickerButton ? (\n        undefined\n      ) : (\n        <InputAdornment position={adornmentPosition} {...InputAdornmentProps}>\n          <IconButton\n            edge={adornmentPosition}\n            data-mui-test=\"open-picker-from-keyboard\"\n            disabled={other.disabled}\n            aria-label={getOpenDialogAriaText(other.rawValue, utils)}\n            {...OpenPickerButtonProps}\n            onClick={onOpen}\n          >\n            {openPickerIcon}\n          </IconButton>\n        </InputAdornment>\n      ),\n    },\n  });\n};\n\nKeyboardDateInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport { useUtils } from './useUtils';\n\nexport function useParsedDate(possiblyUnparsedValue: any): unknown | undefined {\n  const utils = useUtils();\n  return React.useMemo(\n    () =>\n      typeof possiblyUnparsedValue === 'undefined' ? undefined : utils.date(possiblyUnparsedValue)!,\n    [possiblyUnparsedValue, utils]\n  );\n}\n\ninterface MonthValidationOptions {\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  minDate: unknown;\n  maxDate: unknown;\n}\n\nexport function useNextMonthDisabled(\n  month: unknown,\n  { disableFuture, maxDate }: Pick<MonthValidationOptions, 'disableFuture' | 'maxDate'>\n) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date();\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, maxDate) ? now : maxDate\n    );\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils]);\n}\n\nexport function usePreviousMonthDisabled(\n  month: unknown,\n  { disablePast, minDate }: Pick<MonthValidationOptions, 'disablePast' | 'minDate'>\n) {\n  const utils = useUtils();\n\n  return React.useMemo(() => {\n    const now = utils.date();\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, minDate) ? now : minDate\n    );\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils]);\n}\n","import * as PropTypes from 'prop-types';\n\nexport const date = PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.instanceOf(Date),\n]);\n\nconst datePickerView = PropTypes.oneOf(['year', 'month', 'day']);\n\nexport type ParsableDate<TDate = unknown> = string | number | Date | null | undefined | TDate;\n\nexport const DomainPropTypes = { date, datePickerView };\n\nexport const defaultMinDate = new Date('1900-01-01') as any;\n\nexport const defaultMaxDate = new Date('2099-12-31') as any;\n","import * as React from 'react';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { PickerSelectionState } from './usePickerState';\n\nimport { AnyPickerView } from '../../Picker/SharedPickerProps';\n\nexport type PickerOnChangeFn<TDate = unknown> = (\n  date: TDate,\n  selectionState?: PickerSelectionState\n) => void;\n\nexport function useViews({\n  views,\n  openTo,\n  onChange,\n  isMobileKeyboardViewOpen,\n  toggleMobileKeyboardView,\n}: {\n  views: AnyPickerView[];\n  openTo: AnyPickerView;\n  onChange: PickerOnChangeFn;\n  isMobileKeyboardViewOpen: boolean;\n  toggleMobileKeyboardView: () => void;\n}) {\n  const [openView, _setOpenView] = React.useState(\n    openTo && arrayIncludes(views, openTo) ? openTo : views[0]\n  );\n\n  const setOpenView = React.useCallback(\n    (...args: Parameters<typeof _setOpenView>) => {\n      if (isMobileKeyboardViewOpen) {\n        toggleMobileKeyboardView();\n      }\n\n      _setOpenView(...args);\n    },\n    [isMobileKeyboardViewOpen, toggleMobileKeyboardView]\n  );\n\n  const previousView = views[views.indexOf(openView!) - 1];\n  const nextView = views[views.indexOf(openView!) + 1];\n\n  const openNext = React.useCallback(() => {\n    if (nextView) {\n      setOpenView(nextView);\n    }\n  }, [nextView, setOpenView]);\n\n  const handleChangeAndOpenNext = React.useCallback(\n    (date: unknown, currentViewSelectionState?: PickerSelectionState) => {\n      const isSelectionFinishedOnCurrentView = currentViewSelectionState === 'finish';\n      const globalSelectionState =\n        isSelectionFinishedOnCurrentView && Boolean(nextView)\n          ? 'partial'\n          : currentViewSelectionState;\n\n      onChange(date, globalSelectionState);\n      if (isSelectionFinishedOnCurrentView) {\n        openNext();\n      }\n    },\n    [nextView, onChange, openNext]\n  );\n\n  return {\n    nextView,\n    previousView,\n    openNext,\n    handleChangeAndOpenNext,\n    openView,\n    setOpenView,\n  };\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\n\nexport interface MonthProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected?: boolean;\n  value: any;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      flex: '1 0 33.33%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      cursor: 'pointer',\n      outline: 'none',\n      height: 64,\n      transition: theme.transitions.create('font-size', { duration: '100ms' }),\n      '&:focus': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      '&:disabled': {\n        pointerEvents: 'none',\n        color: theme.palette.text.secondary,\n      },\n      '&$selected': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    selected: {},\n  }),\n  { name: 'MuiPickersMonth' }\n);\n\nexport const Month: React.FC<MonthProps> = ({\n  children,\n  disabled,\n  onSelect,\n  selected,\n  value,\n  ...other\n}) => {\n  const classes = useStyles();\n  const handleSelection = React.useCallback(() => {\n    onSelect(value);\n  }, [onSelect, value]);\n\n  return (\n    <Typography\n      data-mui-test=\"month\"\n      role=\"button\"\n      component=\"div\"\n      className={clsx(classes.root, {\n        [classes.selected]: selected,\n      })}\n      tabIndex={disabled ? -1 : 0}\n      onClick={handleSelection}\n      onKeyDown={onSpaceOrEnter(handleSelection)}\n      color={selected ? 'primary' : undefined}\n      variant={selected ? 'h5' : 'subtitle1'}\n      children={children}\n      {...other}\n    />\n  );\n};\n\nMonth.displayName = 'Month';\n\nexport default Month;\n","import * as React from 'react';\nimport Month from './Month';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { ParsableDate } from '../../constants/prop-types';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\n\nexport interface MonthSelectionProps {\n  date: unknown;\n  minDate?: ParsableDate;\n  maxDate?: ParsableDate;\n  onChange: PickerOnChangeFn;\n  disablePast?: boolean | null | undefined;\n  disableFuture?: boolean | null | undefined;\n  onMonthChange?: (date: unknown) => void | Promise<void>;\n}\n\nexport const useStyles = makeStyles(\n  {\n    root: {\n      width: 310,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignContent: 'stretch',\n    },\n  },\n  { name: 'MuiPickersMonthSelection' }\n);\n\nexport const MonthSelection: React.FC<MonthSelectionProps> = ({\n  date,\n  disableFuture,\n  disablePast,\n  maxDate,\n  minDate,\n  onChange,\n  onMonthChange,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const currentMonth = utils.getMonth(date);\n\n  const shouldDisableMonth = (month: unknown) => {\n    const now = utils.date();\n    const utilMinDate = utils.date(minDate);\n    const utilMaxDate = utils.date(maxDate);\n\n    const firstEnabledMonth = utils.startOfMonth(\n      disablePast && utils.isAfter(now, utilMinDate) ? now : utilMinDate\n    );\n\n    const lastEnabledMonth = utils.startOfMonth(\n      disableFuture && utils.isBefore(now, utilMaxDate) ? now : utilMaxDate\n    );\n\n    const isBeforeFirstEnabled = utils.isBefore(month, firstEnabledMonth);\n    const isAfterLastEnabled = utils.isAfter(month, lastEnabledMonth);\n\n    return isBeforeFirstEnabled || isAfterLastEnabled;\n  };\n\n  const onMonthSelect = React.useCallback(\n    (month: number) => {\n      const newDate = utils.setMonth(date, month);\n\n      onChange(newDate, 'finish');\n      if (onMonthChange) {\n        onMonthChange(newDate);\n      }\n    },\n    [date, onChange, onMonthChange, utils]\n  );\n\n  return (\n    <div className={classes.root}>\n      {utils.getMonthArray(date).map(month => {\n        const monthNumber = utils.getMonth(month);\n        const monthText = utils.format(month, 'monthShort');\n\n        return (\n          <Month\n            key={monthText}\n            value={monthNumber}\n            selected={monthNumber === currentMonth}\n            onSelect={onMonthSelect}\n            disabled={shouldDisableMonth(month)}\n          >\n            {monthText}\n          </Month>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { CalendarViewProps } from './CalendarView';\nimport { SlideDirection } from './SlideTransition';\nimport { validateDate } from '../../_helpers/date-utils';\nimport { MuiPickersAdapter, useUtils, useNow } from '../../_shared/hooks/useUtils';\n\ninterface CalendarState {\n  isMonthSwitchingAnimating: boolean;\n  currentMonth: unknown;\n  focusedDay: unknown | null;\n  slideDirection: SlideDirection;\n}\n\ntype ReducerAction<TType, TAdditional = {}> = { type: TType } & TAdditional;\n\ninterface ChangeMonthPayload {\n  direction: SlideDirection;\n  newMonth: unknown;\n}\n\nexport const createCalendarStateReducer = (\n  reduceAnimations: boolean,\n  disableSwitchToMonthOnDayFocus: boolean,\n  utils: MuiPickersAdapter\n) => (\n  state: CalendarState,\n  action:\n    | ReducerAction<'finishMonthSwitchingAnimation'>\n    | ReducerAction<'changeMonth', ChangeMonthPayload>\n    | ReducerAction<'changeFocusedDay', { focusedDay: unknown }>\n): CalendarState => {\n  switch (action.type) {\n    case 'changeMonth': {\n      return {\n        ...state,\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations,\n      };\n    }\n    case 'finishMonthSwitchingAnimation': {\n      return {\n        ...state,\n        isMonthSwitchingAnimating: false,\n      };\n    }\n    case 'changeFocusedDay': {\n      const needMonthSwitch =\n        Boolean(action.focusedDay) &&\n        !disableSwitchToMonthOnDayFocus &&\n        !utils.isSameMonth(state.currentMonth, action.focusedDay);\n\n      return {\n        ...state,\n        focusedDay: action.focusedDay,\n        isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n        currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n        slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right',\n      };\n    }\n  }\n};\n\ntype CalendarStateInput = Pick<\n  CalendarViewProps,\n  | 'disableFuture'\n  | 'disablePast'\n  | 'shouldDisableDate'\n  | 'date'\n  | 'reduceAnimations'\n  | 'onMonthChange'\n> & {\n  minDate: unknown;\n  maxDate: unknown;\n  disableSwitchToMonthOnDayFocus?: boolean;\n};\n\nexport function useCalendarState({\n  date,\n  disableFuture,\n  disablePast,\n  disableSwitchToMonthOnDayFocus = false,\n  maxDate,\n  minDate,\n  onMonthChange,\n  reduceAnimations,\n  shouldDisableDate,\n}: CalendarStateInput) {\n  const now = useNow();\n  const utils = useUtils();\n  const dateForMonth = date || now;\n  const reducerFn = React.useRef(\n    createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)\n  ).current;\n\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date,\n    currentMonth: utils.startOfMonth(dateForMonth),\n    slideDirection: 'left',\n  });\n\n  const handleChangeMonth = React.useCallback(\n    (payload: ChangeMonthPayload) => {\n      dispatch({\n        type: 'changeMonth',\n        ...payload,\n      });\n\n      if (onMonthChange) {\n        onMonthChange(payload.newMonth);\n      }\n    },\n    [onMonthChange]\n  );\n\n  const changeMonth = React.useCallback(\n    (newDate: unknown) => {\n      const newDateRequested = newDate ?? now;\n      if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n        return;\n      }\n\n      handleChangeMonth({\n        newMonth: utils.startOfMonth(newDateRequested),\n        direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth)\n          ? 'left'\n          : 'right',\n      });\n    },\n    [calendarState.currentMonth, handleChangeMonth, now, utils]\n  );\n\n  const isDateDisabled = React.useCallback(\n    (day: unknown) =>\n      validateDate(utils, day, {\n        disablePast,\n        disableFuture,\n        minDate,\n        maxDate,\n        shouldDisableDate,\n      }) !== null,\n    [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]\n  );\n\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({ type: 'finishMonthSwitchingAnimation' });\n  }, []);\n\n  const changeFocusedDay = React.useCallback(\n    (newFocusedDate: unknown) => {\n      if (!isDateDisabled(newFocusedDate)) {\n        dispatch({ type: 'changeFocusedDay', focusedDay: newFocusedDate });\n      }\n    },\n    [isDateDisabled]\n  );\n\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth,\n  };\n}\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\ninterface FadeTransitionProps {\n  transKey: React.Key;\n  className?: string;\n  reduceAnimations: boolean;\n  children: React.ReactElement;\n}\n\nconst animationDuration = 500;\nexport const useStyles = makeStyles(\n  theme => {\n    return {\n      root: {\n        display: 'block',\n        position: 'relative',\n      },\n      fadeEnter: {\n        willChange: 'transform',\n        opacity: 0,\n      },\n      fadeEnterActive: {\n        opacity: 1,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration,\n        }),\n      },\n      fadeExit: {\n        opacity: 1,\n      },\n      fadeExitActive: {\n        opacity: 0,\n        transition: theme.transitions.create('opacity', {\n          duration: animationDuration / 2,\n        }),\n      },\n    };\n  },\n  { name: 'MuiPickersFadeTransition' }\n);\n\nexport const FadeTransitionGroup: React.FC<FadeTransitionProps> = ({\n  children,\n  className,\n  reduceAnimations,\n  transKey,\n}) => {\n  const classes = useStyles();\n  if (reduceAnimations) {\n    return children;\n  }\n\n  const transitionClasses = {\n    exit: classes.fadeExit,\n    enterActive: classes.fadeEnterActive,\n    enter: classes.fadeEnter,\n    exitActive: classes.fadeExitActive,\n  };\n\n  return (\n    <TransitionGroup\n      className={clsx(classes.root, className)}\n      childFactory={element =>\n        React.cloneElement(element, {\n          classNames: transitionClasses,\n        })\n      }\n    >\n      <CSSTransition\n        mountOnEnter\n        unmountOnExit\n        key={transKey}\n        timeout={{ appear: animationDuration, enter: animationDuration / 2, exit: 0 }}\n        classNames={transitionClasses}\n        children={children}\n      />\n    </TransitionGroup>\n  );\n};\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n\n/**\n * @ignore - internal component.\n */\nexport const ArrowDropDownIcon = createSvgIcon(<path d=\"M7 10l5 5 5-5z\" />, 'ArrowDropDown');\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DatePickerView } from '../../DatePicker';\nimport { SlideDirection } from './SlideTransition';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { DateValidationProps } from '../../_helpers/date-utils';\nimport { ArrowDropDownIcon } from '../../_shared/icons/ArrowDropDownIcon';\nimport { ArrowSwitcher, ExportedArrowSwitcherProps } from '../../_shared/ArrowSwitcher';\nimport {\n  usePreviousMonthDisabled,\n  useNextMonthDisabled,\n} from '../../_shared/hooks/date-helpers-hooks';\n\nexport interface CalendarHeaderProps\n  extends ExportedArrowSwitcherProps,\n    Omit<DateValidationProps, 'shouldDisableDate'> {\n  view: DatePickerView;\n  views: DatePickerView[];\n  currentMonth: unknown;\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText?: (currentView: DatePickerView) => string;\n  reduceAnimations: boolean;\n  changeView: (view: DatePickerView) => void;\n  minDate: unknown;\n  maxDate: unknown;\n  onMonthChange: (date: unknown, slideDirection: SlideDirection) => void;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 16,\n      marginBottom: 8,\n      paddingLeft: 24,\n      paddingRight: 12,\n      // prevent jumping in safari\n      maxHeight: 30,\n      minHeight: 30,\n    },\n    yearSelectionSwitcher: {\n      marginRight: 'auto',\n    },\n    previousMonthButton: {\n      marginRight: 24,\n    },\n    switchViewDropdown: {\n      willChange: 'transform',\n      transition: theme.transitions.create('transform'),\n      transform: 'rotate(0deg)',\n    },\n    switchViewDropdownDown: {\n      transform: 'rotate(180deg)',\n    },\n    monthTitleContainer: {\n      display: 'flex',\n      maxHeight: 30,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      marginRight: 'auto',\n    },\n    monthText: {\n      marginRight: 4,\n    },\n  }),\n  { name: 'MuiPickersCalendarHeader' }\n);\n\nfunction getSwitchingViewAriaText(view: DatePickerView) {\n  return view === 'year'\n    ? 'year view is open, switch to calendar view'\n    : 'calendar view is open, switch to year view';\n}\n\nexport const CalendarHeader: React.SFC<CalendarHeaderProps> = ({\n  view: currentView,\n  views,\n  currentMonth: month,\n  changeView,\n  minDate,\n  maxDate,\n  disablePast,\n  disableFuture,\n  onMonthChange,\n  reduceAnimations,\n  leftArrowButtonProps,\n  rightArrowButtonProps,\n  leftArrowIcon,\n  rightArrowIcon,\n  leftArrowButtonText = 'previous month',\n  rightArrowButtonText = 'next month',\n  getViewSwitchingButtonText = getSwitchingViewAriaText,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, { disableFuture, maxDate });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, { disablePast, minDate });\n\n  const toggleView = () => {\n    if (views.length === 1) {\n      return;\n    }\n\n    if (views.length === 2) {\n      changeView(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      changeView(views[nextIndexToOpen]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <div className={classes.monthTitleContainer} onClick={toggleView}>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'month')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-month-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              className={classes.monthText}\n              children={utils.format(month, 'month')}\n            />\n          </FadeTransitionGroup>\n          <FadeTransitionGroup\n            reduceAnimations={reduceAnimations}\n            transKey={utils.format(month, 'year')}\n          >\n            <Typography\n              aria-live=\"polite\"\n              data-mui-test=\"calendar-year-text\"\n              align=\"center\"\n              variant=\"subtitle1\"\n              children={utils.format(month, 'year')}\n            />\n          </FadeTransitionGroup>\n\n          {views.length > 1 && (\n            <IconButton\n              size=\"small\"\n              data-mui-test=\"calendar-view-switcher\"\n              onClick={toggleView}\n              className={classes.yearSelectionSwitcher}\n              aria-label={getViewSwitchingButtonText(currentView)}\n            >\n              <ArrowDropDownIcon\n                className={clsx(classes.switchViewDropdown, {\n                  [classes.switchViewDropdownDown]: currentView === 'year',\n                })}\n              />\n            </IconButton>\n          )}\n        </div>\n\n        <Fade in={currentView === 'date'}>\n          <ArrowSwitcher\n            leftArrowButtonProps={leftArrowButtonProps}\n            rightArrowButtonProps={rightArrowButtonProps}\n            leftArrowButtonText={leftArrowButtonText}\n            rightArrowButtonText={rightArrowButtonText}\n            leftArrowIcon={leftArrowIcon}\n            rightArrowIcon={rightArrowIcon}\n            onLeftClick={selectPreviousMonth}\n            onRightClick={selectNextMonth}\n            isLeftDisabled={isPreviousMonthDisabled}\n            isRightDisabled={isNextMonthDisabled}\n          />\n        </Fade>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCalendarHeader.displayName = 'PickersCalendarHeader';\n\nCalendarHeader.propTypes = {\n  leftArrowIcon: PropTypes.node,\n  rightArrowIcon: PropTypes.node,\n  leftArrowButtonText: PropTypes.string,\n  rightArrowButtonText: PropTypes.string,\n};\n\nexport default CalendarHeader;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { useForkRef } from '@material-ui/core/utils';\nimport { onSpaceOrEnter } from '../../_helpers/utils';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { useCanAutoFocus } from '../../_shared/hooks/useCanAutoFocus';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\n\nexport interface YearProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  onSelect: (value: any) => void;\n  selected: boolean;\n  focused: boolean;\n  value: any;\n  allowKeyboardControl?: boolean;\n  forwardedRef?: React.Ref<HTMLButtonElement>;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      flexBasis: '33.3%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&$disabled': {\n        color: theme.palette.text.secondary,\n      },\n      '&$selected': {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        backgroundColor: theme.palette.primary.main,\n        '&:focus, &:hover': {\n          backgroundColor: theme.palette.primary.dark,\n        },\n      },\n    },\n    modeDesktop: {\n      flexBasis: '25%',\n    },\n    yearButton: {\n      color: 'unset',\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 0,\n      ...theme.typography.subtitle1,\n      margin: '8px 0',\n      height: 36,\n      width: 72,\n      borderRadius: 16,\n      cursor: 'pointer',\n      '&:focus, &:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      },\n    },\n    disabled: {},\n    selected: {},\n  }),\n  { name: 'MuiPickersYear' }\n);\n\nexport const Year: React.FC<YearProps> = ({\n  allowKeyboardControl,\n  children,\n  disabled,\n  focused,\n  forwardedRef,\n  onSelect,\n  selected,\n  value,\n}) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLButtonElement>(null);\n  const refHandle = useForkRef(ref, forwardedRef as React.Ref<HTMLButtonElement>);\n  const canAutoFocus = useCanAutoFocus();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  React.useEffect(() => {\n    if (canAutoFocus && focused && ref.current && !disabled && allowKeyboardControl) {\n      ref.current.focus();\n    }\n  }, [allowKeyboardControl, canAutoFocus, disabled, focused]);\n\n  return (\n    <div\n      data-mui-test=\"year\"\n      className={clsx(classes.root, {\n        [classes.modeDesktop]: wrapperVariant === 'desktop',\n      })}\n    >\n      <button\n        ref={refHandle}\n        disabled={disabled}\n        data-mui-test={`year-${children}`}\n        tabIndex={selected ? 0 : -1}\n        onClick={() => onSelect(value)}\n        onKeyDown={onSpaceOrEnter(() => onSelect(value))}\n        className={clsx(classes.yearButton, {\n          [classes.disabled]: disabled,\n          [classes.selected]: selected,\n        })}\n      >\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default React.forwardRef<HTMLButtonElement, YearProps>((props, ref) => (\n  <Year {...props} forwardedRef={ref} />\n));\n","import * as React from 'react';\nimport Year from './Year';\nimport { useUtils, useNow } from '../../_shared/hooks/useUtils';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { findClosestEnabledDate } from '../../_helpers/date-utils';\nimport { PickerSelectionState } from '../../_shared/hooks/usePickerState';\nimport { WrapperVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { useGlobalKeyDown, keycode as keys } from '../../_shared/hooks/useKeyDown';\n\nexport interface ExportedYearSelectionProps {\n  /**\n   * Callback firing on year change @DateIOType.\n   */\n  onYearChange?: (date: unknown) => void;\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view. @DateIOType.\n   */\n  shouldDisableYear?: (day: unknown) => boolean;\n}\n\nexport interface YearSelectionProps extends ExportedYearSelectionProps {\n  allowKeyboardControl?: boolean;\n  changeFocusedDay: (day: unknown) => void;\n  date: unknown;\n  disableFuture?: boolean | null | undefined;\n  disablePast?: boolean | null | undefined;\n  isDateDisabled: (day: unknown) => boolean;\n  maxDate: unknown;\n  minDate: unknown;\n  onChange: PickerOnChangeFn;\n}\n\nexport const useStyles = makeStyles(\n  {\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      overflowY: 'auto',\n      height: '100%',\n      margin: '0 4px',\n    },\n  },\n  { name: 'MuiPickersYearSelection' }\n);\n\nexport const YearSelection: React.FC<YearSelectionProps> = ({\n  allowKeyboardControl,\n  changeFocusedDay,\n  date: __dateOrNull,\n  isDateDisabled,\n  maxDate,\n  minDate,\n  disableFuture,\n  disablePast,\n  onChange,\n  onYearChange,\n  shouldDisableYear,\n}) => {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const classes = useStyles();\n\n  const selectedDate = __dateOrNull || now;\n  const currentYear = utils.getYear(selectedDate);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef<HTMLButtonElement>(null);\n  const [focusedYear, setFocusedYear] = React.useState<number | null>(currentYear);\n\n  const handleYearSelection = React.useCallback(\n    (year: number, isFinish: PickerSelectionState = 'finish') => {\n      const submitDate = (newDate: unknown) => {\n        onChange(newDate, isFinish);\n        changeFocusedDay(newDate);\n\n        if (onYearChange) {\n          onYearChange(newDate);\n        }\n      };\n\n      const newDate = utils.setYear(selectedDate, year);\n      if (isDateDisabled(newDate)) {\n        const closestEnabledDate = findClosestEnabledDate({\n          utils,\n          date: newDate,\n          minDate,\n          maxDate,\n          disablePast: Boolean(disablePast),\n          disableFuture: Boolean(disableFuture),\n          shouldDisableDate: isDateDisabled,\n        });\n\n        submitDate(closestEnabledDate);\n      } else {\n        submitDate(newDate);\n      }\n    },\n    [\n      utils,\n      selectedDate,\n      isDateDisabled,\n      onChange,\n      changeFocusedDay,\n      onYearChange,\n      minDate,\n      maxDate,\n      disablePast,\n      disableFuture,\n    ]\n  );\n\n  const focusYear = React.useCallback(\n    (year: number) => {\n      if (!isDateDisabled(utils.setYear(selectedDate, year))) {\n        setFocusedYear(year);\n      }\n    },\n    [selectedDate, isDateDisabled, utils]\n  );\n\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n  const nowFocusedYear = focusedYear || currentYear;\n  useGlobalKeyDown(Boolean(allowKeyboardControl), {\n    [keys.ArrowUp]: () => focusYear(nowFocusedYear - yearsInRow),\n    [keys.ArrowDown]: () => focusYear(nowFocusedYear + yearsInRow),\n    [keys.ArrowLeft]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? -1 : 1)),\n    [keys.ArrowRight]: () => focusYear(nowFocusedYear + (theme.direction === 'ltr' ? 1 : -1)),\n  });\n\n  return (\n    <div className={classes.root}>\n      {utils.getYearRange(minDate, maxDate).map(year => {\n        const yearNumber = utils.getYear(year);\n        const selected = yearNumber === currentYear;\n\n        return (\n          <Year\n            key={utils.format(year, 'year')}\n            selected={selected}\n            value={yearNumber}\n            onSelect={handleYearSelection}\n            allowKeyboardControl={allowKeyboardControl}\n            focused={yearNumber === focusedYear}\n            ref={selected ? selectedYearRef : undefined}\n            disabled={\n              (disablePast && utils.isBeforeYear(year, now)) ||\n              (disableFuture && utils.isAfterYear(year, now)) ||\n              (shouldDisableYear && shouldDisableYear(year))\n            }\n          >\n            {utils.format(year, 'year')}\n          </Year>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { MonthSelection } from './MonthSelection';\nimport { DatePickerView } from '../../DatePicker';\nimport { useCalendarState } from './useCalendarState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\n\nimport { FadeTransitionGroup } from './FadeTransitionGroup';\nimport { Calendar, ExportedCalendarProps } from './Calendar';\nimport { PickerOnChangeFn } from '../../_shared/hooks/useViews';\nimport { withDefaultProps } from '../../_shared/withDefaultProps';\nimport { DAY_SIZE, DAY_MARGIN } from '../../constants/dimensions';\nimport { CalendarHeader, CalendarHeaderProps } from './CalendarHeader';\nimport { YearSelection, ExportedYearSelectionProps } from './YearSelection';\nimport { defaultMinDate, defaultMaxDate } from '../../constants/prop-types';\nimport { IsStaticVariantContext } from '../../wrappers/WrapperVariantContext';\nimport { DateValidationProps, findClosestEnabledDate } from '../../_helpers/date-utils';\n\ntype PublicCalendarHeaderProps = Pick<\n  CalendarHeaderProps,\n  | 'leftArrowIcon'\n  | 'rightArrowIcon'\n  | 'leftArrowButtonProps'\n  | 'rightArrowButtonProps'\n  | 'leftArrowButtonText'\n  | 'rightArrowButtonText'\n  | 'getViewSwitchingButtonText'\n>;\n\nexport interface CalendarViewProps\n  extends DateValidationProps,\n    ExportedCalendarProps,\n    ExportedYearSelectionProps,\n    PublicCalendarHeaderProps {\n  date: unknown;\n  view: DatePickerView;\n  views: DatePickerView[];\n  changeView: (view: DatePickerView) => void;\n  onChange: PickerOnChangeFn;\n  /**\n   * Disable heavy animations.\n   * @default /(android)/i.test(window.navigator.userAgent).\n   */\n  reduceAnimations?: boolean;\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange?: (date: unknown) => void;\n}\n\nexport type ExportedCalendarViewProps = Omit<\n  CalendarViewProps,\n  'date' | 'view' | 'views' | 'onChange' | 'changeView' | 'slideDirection' | 'currentMonth'\n>;\n\nconst muiComponentConfig = { name: 'MuiPickersCalendarView' };\n\nexport const useStyles = makeStyles(\n  {\n    viewTransitionContainer: {\n      overflowY: 'auto',\n    },\n    fullHeightContainer: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: (DAY_SIZE + DAY_MARGIN * 4) * 7,\n      height: '100%',\n    },\n  },\n  muiComponentConfig\n);\n\nexport const defaultReduceAnimations =\n  typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent);\n\nexport const CalendarView: React.FC<CalendarViewProps> = withDefaultProps(\n  muiComponentConfig,\n  ({\n    allowKeyboardControl: __allowKeyboardControlProp,\n    changeView,\n    date,\n    disableFuture,\n    disablePast,\n    loading,\n    maxDate: __maxDate,\n    minDate: __minDate,\n    onChange,\n    onMonthChange,\n    reduceAnimations = defaultReduceAnimations,\n    renderLoading,\n    shouldDisableDate,\n    shouldDisableYear,\n    view,\n    ...other\n  }) => {\n    const utils = useUtils();\n    const classes = useStyles();\n    const isStatic = React.useContext(IsStaticVariantContext);\n    const allowKeyboardControl = __allowKeyboardControlProp ?? !isStatic;\n\n    const minDate = __minDate || utils.date(defaultMinDate);\n    const maxDate = __maxDate || utils.date(defaultMaxDate);\n\n    const {\n      calendarState,\n      changeFocusedDay,\n      changeMonth,\n      isDateDisabled,\n      handleChangeMonth,\n      onMonthSwitchingAnimationEnd,\n    } = useCalendarState({\n      date,\n      reduceAnimations,\n      onMonthChange,\n      minDate,\n      maxDate,\n      shouldDisableDate,\n      disablePast,\n      disableFuture,\n    });\n\n    React.useEffect(() => {\n      if (date && isDateDisabled(date)) {\n        const closestEnabledDate = findClosestEnabledDate({\n          utils,\n          date,\n          minDate,\n          maxDate,\n          disablePast: Boolean(disablePast),\n          disableFuture: Boolean(disableFuture),\n          shouldDisableDate: isDateDisabled,\n        });\n\n        onChange(closestEnabledDate, 'partial');\n      }\n      // This call is too expensive to run it on each prop change.\n      // So just ensure that we are not rendering disabled as selected on mount.\n    }, []); // eslint-disable-line\n\n    React.useEffect(() => {\n      changeMonth(date);\n    }, [date]); // eslint-disable-line\n\n    return (\n      <React.Fragment>\n        <CalendarHeader\n          {...other}\n          view={view}\n          currentMonth={calendarState.currentMonth}\n          changeView={changeView}\n          onMonthChange={(newMonth, direction) => handleChangeMonth({ newMonth, direction })}\n          minDate={minDate}\n          maxDate={maxDate}\n          disablePast={disablePast}\n          disableFuture={disableFuture}\n          reduceAnimations={reduceAnimations}\n        />\n\n        <FadeTransitionGroup\n          reduceAnimations={reduceAnimations}\n          className={classes.viewTransitionContainer}\n          transKey={view}\n        >\n          <div>\n            {view === 'year' && (\n              <YearSelection\n                {...other}\n                date={date}\n                onChange={onChange}\n                minDate={minDate}\n                maxDate={maxDate}\n                disableFuture={disableFuture}\n                disablePast={disablePast}\n                isDateDisabled={isDateDisabled}\n                allowKeyboardControl={allowKeyboardControl}\n                shouldDisableYear={shouldDisableYear}\n                changeFocusedDay={changeFocusedDay}\n              />\n            )}\n\n            {view === 'month' && (\n              <MonthSelection\n                {...other}\n                date={date}\n                onChange={onChange}\n                minDate={minDate}\n                maxDate={maxDate}\n                onMonthChange={onMonthChange}\n              />\n            )}\n\n            {view === 'date' && (\n              <Calendar\n                {...other}\n                {...calendarState}\n                onMonthSwitchingAnimationEnd={onMonthSwitchingAnimationEnd}\n                changeFocusedDay={changeFocusedDay}\n                reduceAnimations={reduceAnimations}\n                date={date}\n                onChange={onChange}\n                isDateDisabled={isDateDisabled}\n                allowKeyboardControl={allowKeyboardControl}\n                loading={loading}\n                renderLoading={renderLoading}\n              />\n            )}\n          </div>\n        </FadeTransitionGroup>\n      </React.Fragment>\n    );\n  }\n);\n","import * as React from 'react';\nimport { useIsomorphicEffect } from './useKeyDown';\nimport { arrayIncludes } from '../../_helpers/utils';\nimport { DateTimePickerView } from '../../DateTimePicker';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nconst getOrientation = () => {\n  if (typeof window === 'undefined') {\n    return 'portrait';\n  }\n\n  if (window.screen && window.screen.orientation && window.screen.orientation.angle) {\n    return Math.abs(window.screen.orientation.angle) === 90 ? 'landscape' : 'portrait';\n  }\n\n  // Support IOS safari\n  if (window.orientation) {\n    return Math.abs(Number(window.orientation)) === 90 ? 'landscape' : 'portrait';\n  }\n\n  return 'portrait';\n};\n\nexport function useIsLandscape(\n  views: DateTimePickerView[],\n  customOrientation?: BasePickerProps['orientation']\n): boolean {\n  const [orientation, setOrientation] = React.useState<BasePickerProps['orientation']>(\n    getOrientation()\n  );\n\n  useIsomorphicEffect(() => {\n    const eventHandler = () => {\n      setOrientation(getOrientation());\n    };\n    window.addEventListener('orientationchange', eventHandler);\n    return () => {\n      window.removeEventListener('orientationchange', eventHandler);\n    };\n  }, []);\n\n  if (arrayIncludes(views, ['hours', 'minutes', 'seconds'])) {\n    // could not display 13:34:44 in landscape mode\n    return false;\n  }\n\n  const orientationToUse = customOrientation || orientation;\n  return orientationToUse === 'landscape';\n}\n","import { styled } from '@material-ui/core/styles';\n\nexport const MobileKeyboardInputView = styled('div')(\n  {\n    padding: '16px 24px',\n  },\n  { name: 'MuiPickersMobileKeyboardInputView' }\n);\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { useViews } from '../_shared/hooks/useViews';\nimport { ClockView } from '../views/Clock/ClockView';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DateTimePickerView } from '../DateTimePicker';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DatePickerView } from '../DatePicker/DatePicker';\nimport { CalendarView } from '../views/Calendar/CalendarView';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { useIsLandscape } from '../_shared/hooks/useIsLandscape';\nimport { DIALOG_WIDTH, VIEW_HEIGHT } from '../constants/dimensions';\nimport { PickerSelectionState } from '../_shared/hooks/usePickerState';\nimport { WrapperVariantContext } from '../wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../views/MobileKeyboardInputView';\nimport {\n  WithViewsProps,\n  AnyPickerView,\n  SharedPickerProps,\n  CalendarAndClockProps,\n} from './SharedPickerProps';\n\nexport interface ExportedPickerProps<TView extends AnyPickerView>\n  extends Omit<BasePickerProps, 'value' | 'onChange'>,\n    CalendarAndClockProps,\n    WithViewsProps<TView> {\n  // TODO move out, cause it is DateTimePickerOnly\n  hideTabs?: boolean;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n}\n\nexport type PickerProps<\n  TView extends AnyPickerView,\n  TInputValue = any,\n  TDateValue = any\n> = ExportedPickerProps<TView> & SharedPickerProps<TInputValue, TDateValue>;\n\nconst muiComponentConfig = { name: 'MuiPickersBasePicker' };\n\nexport const useStyles = makeStyles(\n  {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    landscape: {\n      flexDirection: 'row',\n    },\n    pickerView: {\n      overflowX: 'hidden',\n      width: DIALOG_WIDTH,\n      maxHeight: VIEW_HEIGHT,\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0 auto',\n    },\n    pickerViewLandscape: {\n      padding: '0 8px',\n    },\n  },\n  muiComponentConfig\n);\n\nconst MobileKeyboardTextFieldProps = { fullWidth: true };\n\nconst isDatePickerView = (view: DateTimePickerView) =>\n  view === 'year' || view === 'month' || view === 'date';\n\nfunction Picker({\n  className,\n  date,\n  DateInputProps,\n  isMobileKeyboardViewOpen,\n  onDateChange,\n  openTo = 'date',\n  orientation,\n  showToolbar,\n  toggleMobileKeyboardView,\n  ToolbarComponent = () => null,\n  toolbarFormat,\n  toolbarPlaceholder,\n  toolbarTitle,\n  views = ['year', 'month', 'date', 'hours', 'minutes', 'seconds'],\n  ...other\n}: PickerProps<AnyPickerView>) {\n  const classes = useStyles();\n  const isLandscape = useIsLandscape(views, orientation);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n\n  const toShowToolbar =\n    typeof showToolbar === 'undefined' ? wrapperVariant !== 'desktop' : showToolbar;\n\n  const handleDateChange = React.useCallback(\n    (date: unknown, selectionState?: PickerSelectionState) => {\n      onDateChange(date, wrapperVariant, selectionState);\n    },\n    [onDateChange, wrapperVariant]\n  );\n\n  const { openView, nextView, previousView, setOpenView, handleChangeAndOpenNext } = useViews({\n    views,\n    openTo,\n    onChange: handleDateChange,\n    isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView,\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className, {\n        [classes.landscape]: isLandscape,\n      })}\n    >\n      {toShowToolbar && (\n        <ToolbarComponent\n          {...other}\n          views={views}\n          isLandscape={isLandscape}\n          date={date}\n          onChange={handleDateChange}\n          setOpenView={setOpenView}\n          openView={openView}\n          toolbarTitle={toolbarTitle}\n          toolbarFormat={toolbarFormat}\n          toolbarPlaceholder={toolbarPlaceholder}\n          isMobileKeyboardViewOpen={isMobileKeyboardViewOpen}\n          toggleMobileKeyboardView={toggleMobileKeyboardView}\n        />\n      )}\n\n      <div\n        className={clsx(classes.pickerView, {\n          [classes.pickerViewLandscape]: isLandscape,\n        })}\n      >\n        {isMobileKeyboardViewOpen ? (\n          <MobileKeyboardInputView>\n            <KeyboardDateInput\n              {...DateInputProps}\n              ignoreInvalidInputs\n              disableOpenPicker\n              TextFieldProps={MobileKeyboardTextFieldProps}\n            />\n          </MobileKeyboardInputView>\n        ) : (\n          <React.Fragment>\n            {(openView === 'year' || openView === 'month' || openView === 'date') && (\n              <CalendarView\n                date={date}\n                changeView={setOpenView}\n                // @ts-ignore\n                views={views}\n                onChange={handleChangeAndOpenNext}\n                view={openView as DatePickerView}\n                {...other}\n              />\n            )}\n\n            {(openView === 'hours' || openView === 'minutes' || openView === 'seconds') && (\n              <ClockView\n                {...other}\n                date={date}\n                type={openView as 'hours' | 'minutes' | 'seconds'}\n                onDateChange={handleDateChange}\n                onChange={handleChangeAndOpenNext}\n                openNextView={() => setOpenView(nextView)}\n                openPreviousView={() => setOpenView(previousView)}\n                nextViewAvailable={!Boolean(nextView)}\n                previousViewAvailable={!Boolean(previousView) || isDatePickerView(previousView)}\n                showViewSwitcher={wrapperVariant === 'desktop'}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default withDefaultProps(muiComponentConfig, Picker);\n"]},"metadata":{},"sourceType":"module"}