{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\components\\\\BrushChart.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport { createContainer, VictoryAxis, VictoryBar, VictoryBrushContainer, VictoryChart, VictoryTooltip } from 'victory';\nimport useResizeObserver from '@react-hook/resize-observer';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst formatDate = date => moment(date).format('YYYY-MM-DD HH:mm');\n\nclass BrushChartTooltip extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(VictoryTooltip, { ...this.props,\n      x: this.props.width / 2,\n      y: 40,\n      cornerRadius: 0,\n      pointerLength: 0,\n      flyoutWidth: 200,\n      dy: -20,\n      renderInPortal: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nBrushChartTooltip.defaultEvents = VictoryTooltip.defaultEvents;\n\nconst useSize = target => {\n  _s();\n\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  useLayoutEffect(() => {\n    if (target) {\n      setSize(target.getBoundingClientRect());\n    }\n  }, [target]); // Where the magic happens\n\n  useResizeObserver(target, entry => setSize(entry.contentRect));\n  return size;\n};\n\n_s(useSize, \"OPsWTCYZ9KlX4wcAoRr5eW541DE=\", false, function () {\n  return [useResizeObserver];\n});\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n_c = VictoryZoomVoronoiContainer;\nexport const BrushChart = ({\n  data\n}) => {\n  _s2();\n\n  const [target, setTarget] = useState(null);\n  const {\n    width\n  } = useSize(target);\n  const domain = data.reduce(([dStart, dEnd], {\n    x\n  }) => [Math.min(+x, dStart), Math.max(+x, dEnd)], [Infinity, -Infinity]).map(date => new Date(date));\n  const [zoomDomain, setZoomDomain] = useState(domain);\n\n  let brushCallback = ({\n    x\n  }) => setZoomDomain(x);\n\n  let theme = {\n    axis: {\n      style: {\n        axis: {\n          stroke: \"grey\",\n          strokeWidth: 1\n        },\n        tickLabels: {},\n        grid: {\n          stroke: \"grey\",\n          strokeDasharray: \"5,5\",\n          strokeWidth: 0.5\n        }\n      }\n    },\n    bar: {\n      style: {\n        data: {\n          fill: \"steelblue\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full\",\n    ref: setTarget,\n    children: [/*#__PURE__*/_jsxDEV(VictoryChart, {\n      theme: theme,\n      height: 300,\n      width: width,\n      padding: {\n        left: 40,\n        bottom: 20\n      },\n      scale: {\n        x: \"time\",\n        y: \"linear\"\n      },\n      domain: {\n        x: domain\n      },\n      containerComponent: /*#__PURE__*/_jsxDEV(VictoryZoomVoronoiContainer, {\n        style: {\n          touchAction: \"auto\"\n        },\n        zoomDimension: \"x\",\n        voronoiDimension: \"x\",\n        allowPan: false,\n        allowZoom: false,\n        zoomDomain: {\n          x: zoomDomain\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n        fixLabelOverlap: true,\n        gridComponent: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n        dependentAxis: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n        barRatio: 0.4,\n        labels: ({\n          datum: {\n            x,\n            y\n          }\n        }) => `${formatDate(x)} â€” ${y.toFixed(2)}`,\n        labelComponent: /*#__PURE__*/_jsxDEV(BrushChartTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this),\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n      theme: theme,\n      height: 100,\n      width: width,\n      padding: {\n        left: 40,\n        bottom: 20\n      },\n      scale: {\n        x: \"time\",\n        y: \"linear\"\n      },\n      domain: {\n        x: domain\n      },\n      containerComponent: /*#__PURE__*/_jsxDEV(VictoryBrushContainer, {\n        brushDimension: \"x\",\n        brushDomain: {\n          x: zoomDomain\n        },\n        onBrushDomainChangeEnd: brushCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n        fixLabelOverlap: true,\n        gridComponent: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n        barRatio: 0.4,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BrushChart, \"KnIPFwH0tEJ8tNfihpjmOs+lzUc=\", false, function () {\n  return [useSize];\n});\n\n_c2 = BrushChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VictoryZoomVoronoiContainer\");\n$RefreshReg$(_c2, \"BrushChart\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/components/BrushChart.js"],"names":["React","useState","useLayoutEffect","createContainer","VictoryAxis","VictoryBar","VictoryBrushContainer","VictoryChart","VictoryTooltip","useResizeObserver","moment","formatDate","date","format","BrushChartTooltip","Component","render","props","width","defaultEvents","useSize","target","size","setSize","height","getBoundingClientRect","entry","contentRect","VictoryZoomVoronoiContainer","BrushChart","data","setTarget","domain","reduce","dStart","dEnd","x","Math","min","max","Infinity","map","Date","zoomDomain","setZoomDomain","brushCallback","theme","axis","style","stroke","strokeWidth","tickLabels","grid","strokeDasharray","bar","fill","left","bottom","y","touchAction","datum","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\r\nimport { createContainer, VictoryAxis, VictoryBar, VictoryBrushContainer, VictoryChart, VictoryTooltip } from 'victory';\r\n\r\nimport useResizeObserver from '@react-hook/resize-observer';\r\nimport moment from 'moment';\r\n\r\nconst formatDate = date => moment(date).format('YYYY-MM-DD HH:mm');\r\n\r\nclass BrushChartTooltip extends React.Component {\r\n  static defaultEvents = VictoryTooltip.defaultEvents;\r\n\r\n  render() {\r\n    return (\r\n      <VictoryTooltip\r\n        { ... this.props }\r\n        x={this.props.width/2}\r\n        y={40}\r\n        cornerRadius={0}\r\n        pointerLength={0}\r\n        flyoutWidth={200}\r\n        dy={-20}\r\n        renderInPortal={false}\r\n      />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst useSize = (target) => {\r\n  const [size, setSize] = useState({width: 0, height: 0})\r\n  useLayoutEffect(() => {\r\n    if(target) {\r\n        setSize(target.getBoundingClientRect())\r\n    }\r\n  }, [target])\r\n\r\n  // Where the magic happens\r\n  useResizeObserver(target, (entry) => setSize(entry.contentRect))\r\n  return size;\r\n}\r\n\r\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\r\n\r\nexport const BrushChart = ({data}) => {\r\n  const [target, setTarget] = useState(null);\r\n  const { width } = useSize(target);\r\n\r\n  const domain = data\r\n    .reduce(([dStart, dEnd], { x }) => [Math.min(+x, dStart), Math.max(+x, dEnd)], [Infinity, -Infinity])\r\n    .map(date => new Date(date));\r\n  const [zoomDomain, setZoomDomain] = useState(domain);\r\n\r\n  let brushCallback = ({x}) => setZoomDomain(x);\r\n\r\n  let theme = {\r\n    axis: {\r\n      style: {\r\n        axis: {\r\n          stroke: \"grey\",\r\n          strokeWidth: 1\r\n        },\r\n        tickLabels: {\r\n        },\r\n        grid: {\r\n          stroke: \"grey\",\r\n          strokeDasharray: \"5,5\",\r\n          strokeWidth: 0.5,\r\n        }\r\n      }\r\n    },\r\n    bar: {\r\n      style: {\r\n        data: {\r\n          fill: \"steelblue\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full\" ref={setTarget}>\r\n        <VictoryChart\r\n          theme={theme}\r\n          height={300}\r\n          width={width}\r\n          padding={{left: 40, bottom: 20}}\r\n          scale={{x: \"time\", y: \"linear\"}}\r\n          domain={{x: domain}}\r\n          containerComponent={\r\n            <VictoryZoomVoronoiContainer\r\n              style={{\r\n                touchAction: \"auto\"\r\n              }}\r\n              zoomDimension=\"x\"\r\n              voronoiDimension=\"x\"\r\n              allowPan={false}\r\n              allowZoom={false}\r\n              zoomDomain={{x: zoomDomain}}\r\n            />\r\n          }>\r\n            <VictoryAxis fixLabelOverlap gridComponent={<></>}/>\r\n            <VictoryAxis dependentAxis />\r\n            <VictoryBar \r\n              barRatio={0.4} \r\n              labels={({ datum: {x, y} }) => `${formatDate(x)} â€” ${y.toFixed(2)}`}\r\n              labelComponent={<BrushChartTooltip/>}\r\n              data={data} \r\n              />\r\n        </VictoryChart>\r\n        <VictoryChart\r\n          theme={theme}\r\n          height={100}\r\n          width={width}\r\n          padding={{left: 40, bottom: 20}}\r\n          scale={{x: \"time\", y: \"linear\"}}\r\n          domain={{x: domain}}\r\n          containerComponent={\r\n            <VictoryBrushContainer\r\n              brushDimension=\"x\"\r\n              brushDomain={{ x: zoomDomain }}\r\n              onBrushDomainChangeEnd={brushCallback}\r\n            />\r\n          }>\r\n            <VictoryAxis fixLabelOverlap gridComponent={<></>}/>\r\n            <VictoryBar barRatio={0.4} data={data} />\r\n        </VictoryChart>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}