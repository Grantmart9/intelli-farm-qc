{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\pages\\\\tables\\\\HomeFlowFertilizerBarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport ApexChart from \"react-apexcharts\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomeFlowFertilizerBarChart = ({\n  data\n}) => {\n  _s();\n\n  const today = useMemo(() => new Date(), []);\n  const dates = [-6, -5, -4, -3, -2, -1, 0].map(d => {\n    const date = new Date(today);\n    date.setDate(date.getDate() + d);\n    return date;\n  });\n  const days = dates.map(date => [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][date.getDay()]);\n  const seriesNames = Array.from(new Set(data.map(({\n    name\n  }) => name)));\n  const series = seriesNames.map(seriesName => ({\n    name: seriesName,\n    data: dates.map(date => {\n      const dayUsage = data.find(dayUsage => new Date(dayUsage.date).getDay() === date.getDay() && dayUsage.name === seriesName);\n      return dayUsage ? dayUsage.value : 0;\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(ApexChart, {\n    type: \"bar\",\n    height: 300,\n    series: series,\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      tooltip: {\n        x: {\n          formatter: (_, {\n            dataPointIndex\n          }) => {\n            const date = moment(dates[dataPointIndex]).format(\"YYYY-MM-DD ddd\");\n            return date;\n          }\n        },\n        y: {\n          formatter: (y, {\n            dataPointIndex\n          }) => {\n            const unit = data[dataPointIndex].unit;\n            return `${y} ${unit}`;\n          }\n        }\n      },\n      xaxis: {\n        categories: days\n      },\n      plotOptions: {\n        bar: {\n          endingShape: \"rounded\",\n          columnWidth: \"55%\"\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      title: {\n        text: \"Field Valve History\",\n        offsetX: 30\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeFlowFertilizerBarChart, \"9Sq/0TFVWpUWVP0qfj7J75jaWrU=\");\n\n_c = HomeFlowFertilizerBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeFlowFertilizerBarChart\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/pages/tables/HomeFlowFertilizerBarChart.js"],"names":["React","useMemo","ApexChart","moment","HomeFlowFertilizerBarChart","data","today","Date","dates","map","d","date","setDate","getDate","days","getDay","seriesNames","Array","from","Set","name","series","seriesName","dayUsage","find","value","chart","toolbar","show","tooltip","x","formatter","_","dataPointIndex","format","y","unit","xaxis","categories","plotOptions","bar","endingShape","columnWidth","dataLabels","enabled","title","text","offsetX"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport moment from \"moment\";\r\n\r\nexport const HomeFlowFertilizerBarChart = ({ data }) => {\r\n  const today = useMemo(() => new Date(), []);\r\n  const dates = [-6, -5, -4, -3, -2, -1, 0].map((d) => {\r\n    const date = new Date(today);\r\n    date.setDate(date.getDate() + d);\r\n    return date;\r\n  });\r\n\r\n  const days = dates.map(\r\n    (date) => [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][date.getDay()]\r\n  );\r\n\r\n  const seriesNames = Array.from(new Set(data.map(({name}) => name)))\r\n  const series = seriesNames.map((seriesName) => ({\r\n    name: seriesName,\r\n    data: dates.map((date) => {\r\n      const dayUsage = data.find(\r\n        (dayUsage) =>\r\n          new Date(dayUsage.date).getDay() === date.getDay() &&\r\n          dayUsage.name === seriesName\r\n      );\r\n      return dayUsage ? dayUsage.value : 0;\r\n    }),\r\n  }));\r\n\r\n  return (\r\n    <ApexChart\r\n      type=\"bar\"\r\n      height={300}\r\n      series={series}\r\n      options={{\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            formatter: (_, { dataPointIndex }) => {\r\n              const date = moment(dates[dataPointIndex]).format(\r\n                \"YYYY-MM-DD ddd\"\r\n              );\r\n              return date;\r\n            },\r\n          },\r\n          y: {\r\n            formatter: (y, { dataPointIndex }) => {\r\n              const unit = data[dataPointIndex].unit;\r\n              return `${y} ${unit}`;\r\n            },\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: days,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            endingShape: \"rounded\",\r\n            columnWidth: \"55%\",\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        title: {\r\n          text: \"Field Valve History\",\r\n          offsetX: 30,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}