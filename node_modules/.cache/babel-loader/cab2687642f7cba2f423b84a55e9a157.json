{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport React__default, { useMemo, createElement, useRef, useEffect, useState, useCallback, useDebugValue, forwardRef } from 'react';\nimport { instanceOf, func, string, object, node, bool } from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { M as MuiPickersAdapterContext, w as withDefaultProps } from './LocalizationProvider-24410efe.js';\nimport { u as useUtils, c as DIALOG_WIDTH, d as DIALOG_WIDTH_WIDER, I as IS_TOUCH_DEVICE_MEDIA, a as useNow } from './dimensions-2cbdfb98.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport clsx from 'clsx';\nimport { useForkRef } from '@material-ui/core/utils';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport { o as onSpaceOrEnter, e as executeInTheNextEventLoopTick, b as useAutoFocusControl, C as CanAutoFocusContext } from './useCanAutoFocus-1eacc580.js';\nimport { t as getDisplayDate, w as getTextFieldAriaText, K as KeyboardDateInput, P as Picker, x as parsePickerInputValue } from './Picker-2424ad9f.js';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { W as WrapperVariantContext, I as IsStaticVariantContext } from './Clock-156019bb.js';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport TrapFocus from '@material-ui/core/Unstable_TrapFocus';\nimport { u as useGlobalKeyDown, k as keycode } from './useKeyDown-b5264e56.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar PureDateInput = function PureDateInput(_ref) {\n  var containerRef = _ref.containerRef,\n      disabled = _ref.disabled,\n      forwardedRef = _ref.forwardedRef,\n      _ref$getOpenDialogAri = _ref.getOpenDialogAriaText,\n      getOpenDialogAriaText = _ref$getOpenDialogAri === void 0 ? getTextFieldAriaText : _ref$getOpenDialogAri,\n      inputFormat = _ref.inputFormat,\n      InputProps = _ref.InputProps,\n      label = _ref.label,\n      onOpen = _ref.openPicker,\n      rawValue = _ref.rawValue,\n      renderInput = _ref.renderInput,\n      _ref$TextFieldProps = _ref.TextFieldProps,\n      TextFieldProps = _ref$TextFieldProps === void 0 ? {} : _ref$TextFieldProps,\n      validationError = _ref.validationError;\n  var utils = useUtils();\n  var PureDateInputProps = useMemo(function () {\n    return _objectSpread(_objectSpread({}, InputProps), {}, {\n      readOnly: true\n    });\n  }, [InputProps]);\n  var inputValue = getDisplayDate(utils, rawValue, inputFormat);\n  return renderInput(_objectSpread({\n    label: label,\n    disabled: disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    inputProps: {\n      disabled: disabled,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue,\n      onClick: onOpen,\n      onKeyDown: onSpaceOrEnter(onOpen)\n    }\n  }, TextFieldProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? PureDateInput.propTypes = {\n  acceptRegex: instanceOf(RegExp),\n  getOpenDialogAriaText: func,\n  mask: string,\n  OpenPickerButtonProps: object,\n  openPickerIcon: node,\n  renderInput: func.isRequired,\n  rifmFormatter: func\n} : void 0;\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useStyles = makeStyles({\n  dialogRoot: {\n    minWidth: DIALOG_WIDTH\n  },\n  dialogRootWider: {\n    minWidth: DIALOG_WIDTH_WIDER\n  },\n  dialogContainer: {\n    '&:focus > $dialogRoot': {\n      outline: 'auto',\n      '@media (pointer:coarse)': {\n        outline: 0\n      }\n    }\n  },\n  dialog: {\n    '&:first-child': {\n      padding: 0\n    }\n  },\n  dialogAction: {// requested for overrides\n  },\n  withAdditionalAction: {\n    // set justifyContent to default value to fix IE11 layout bug\n    // see https://github.com/mui-org/material-ui-pickers/pull/267\n    justifyContent: 'flex-start',\n    '& > *:first-child': {\n      marginRight: 'auto'\n    }\n  }\n}, {\n  name: 'MuiPickersModalDialog'\n});\n\nvar PickersModalDialog = function PickersModalDialog(_ref) {\n  var _ref$cancelText = _ref.cancelText,\n      cancelText = _ref$cancelText === void 0 ? 'Cancel' : _ref$cancelText,\n      children = _ref.children,\n      MuiDialogClasses = _ref.classes,\n      _ref$clearable = _ref.clearable,\n      clearable = _ref$clearable === void 0 ? false : _ref$clearable,\n      _ref$clearText = _ref.clearText,\n      clearText = _ref$clearText === void 0 ? 'Clear' : _ref$clearText,\n      _ref$okText = _ref.okText,\n      okText = _ref$okText === void 0 ? 'OK' : _ref$okText,\n      onAccept = _ref.onAccept,\n      onClear = _ref.onClear,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      showTabs = _ref.showTabs,\n      _ref$showTodayButton = _ref.showTodayButton,\n      showTodayButton = _ref$showTodayButton === void 0 ? false : _ref$showTodayButton,\n      _ref$todayText = _ref.todayText,\n      todayText = _ref$todayText === void 0 ? 'Today' : _ref$todayText,\n      wider = _ref.wider,\n      other = _objectWithoutProperties(_ref, [\"cancelText\", \"children\", \"classes\", \"clearable\", \"clearText\", \"okText\", \"onAccept\", \"onClear\", \"onDismiss\", \"onSetToday\", \"showTabs\", \"showTodayButton\", \"todayText\", \"wider\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/createElement(Dialog, _extends({\n    onClose: onDismiss,\n    classes: _objectSpread$1({\n      container: classes.dialogContainer,\n      paper: clsx(classes.dialogRoot, wider && classes.dialogRootWider)\n    }, MuiDialogClasses)\n  }, other), /*#__PURE__*/createElement(DialogContent, {\n    children: children,\n    className: classes.dialog\n  }), /*#__PURE__*/createElement(DialogActions, {\n    className: clsx(classes.dialogAction, (clearable || showTodayButton) && classes.withAdditionalAction)\n  }, clearable && /*#__PURE__*/createElement(Button, {\n    \"data-mui-test\": \"clear-action-button\",\n    color: \"primary\",\n    onClick: onClear\n  }, clearText), showTodayButton && /*#__PURE__*/createElement(Button, {\n    \"data-mui-test\": \"today-action-button\",\n    color: \"primary\",\n    onClick: onSetToday\n  }, todayText), cancelText && /*#__PURE__*/createElement(Button, {\n    color: \"primary\",\n    onClick: onDismiss\n  }, cancelText), okText && /*#__PURE__*/createElement(Button, {\n    color: \"primary\",\n    onClick: onAccept\n  }, okText)));\n};\n\nvar MobileWrapper = function MobileWrapper(_ref) {\n  var cancelText = _ref.cancelText,\n      children = _ref.children,\n      clearable = _ref.clearable,\n      clearText = _ref.clearText,\n      DateInputProps = _ref.DateInputProps,\n      DialogProps = _ref.DialogProps,\n      displayStaticWrapperAs = _ref.displayStaticWrapperAs,\n      KeyboardDateInputComponent = _ref.KeyboardDateInputComponent,\n      okText = _ref.okText,\n      onAccept = _ref.onAccept,\n      onClear = _ref.onClear,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      open = _ref.open,\n      PopperProps = _ref.PopperProps,\n      _ref$PureDateInputCom = _ref.PureDateInputComponent,\n      PureDateInputComponent = _ref$PureDateInputCom === void 0 ? PureDateInput : _ref$PureDateInputCom,\n      showTabs = _ref.showTabs,\n      showTodayButton = _ref.showTodayButton,\n      todayText = _ref.todayText,\n      wider = _ref.wider,\n      other = _objectWithoutProperties(_ref, [\"cancelText\", \"children\", \"clearable\", \"clearText\", \"DateInputProps\", \"DialogProps\", \"displayStaticWrapperAs\", \"KeyboardDateInputComponent\", \"okText\", \"onAccept\", \"onClear\", \"onDismiss\", \"onSetToday\", \"open\", \"PopperProps\", \"PureDateInputComponent\", \"showTabs\", \"showTodayButton\", \"todayText\", \"wider\"]);\n\n  return /*#__PURE__*/createElement(WrapperVariantContext.Provider, {\n    value: \"mobile\"\n  }, /*#__PURE__*/createElement(PureDateInputComponent, _extends({}, other, DateInputProps)), /*#__PURE__*/createElement(PickersModalDialog, _extends({\n    wider: wider,\n    showTabs: showTabs,\n    open: open,\n    onClear: onClear,\n    onAccept: onAccept,\n    onDismiss: onDismiss,\n    onSetToday: onSetToday,\n    clearText: clearText,\n    todayText: todayText,\n    okText: okText,\n    cancelText: cancelText,\n    clearable: clearable,\n    showTodayButton: showTodayButton,\n    children: children,\n    \"data-mui-test\": \"mobile-wrapper-dialog\"\n  }, DialogProps)));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MobileWrapper.propTypes = {\n  okText: node,\n  cancelText: node,\n  clearText: node,\n  clearable: bool,\n  todayText: node,\n  showTodayButton: bool,\n  DialogProps: object\n} : void 0;\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    root: {\n      zIndex: theme.zIndex.modal\n    },\n    paper: {\n      transformOrigin: 'top center',\n      '&:focus': _defineProperty({}, IS_TOUCH_DEVICE_MEDIA, {\n        outline: 0\n      })\n    },\n    topTransition: {\n      transformOrigin: 'bottom center'\n    }\n  };\n}, {\n  name: 'MuiPickersPopper'\n});\n\nvar PickersPopper = function PickersPopper(_ref) {\n  var anchorEl = _ref.anchorEl,\n      children = _ref.children,\n      _ref$innerRef = _ref.innerRef,\n      innerRef = _ref$innerRef === void 0 ? null : _ref$innerRef,\n      onClose = _ref.onClose,\n      onOpen = _ref.onOpen,\n      open = _ref.open,\n      PopperProps = _ref.PopperProps,\n      role = _ref.role,\n      _ref$TransitionCompon = _ref.TransitionComponent,\n      TransitionComponent = _ref$TransitionCompon === void 0 ? Grow : _ref$TransitionCompon,\n      TrapFocusProps = _ref.TrapFocusProps;\n  var classes = useStyles$1();\n  var paperRef = useRef(null);\n  var handlePopperRef = useForkRef(paperRef, innerRef);\n  var lastFocusedElementRef = useRef(null);\n  var popperOptions = useMemo(function () {\n    return {\n      onCreate: onOpen\n    };\n  }, [onOpen]);\n  useGlobalKeyDown(open, _defineProperty({}, keycode.Esc, onClose));\n  useEffect(function () {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n\n  var handleBlur = function handleBlur() {\n    if (!open) {\n      return;\n    } // document.activeElement is updating on the next tick after `blur` called\n\n\n    executeInTheNextEventLoopTick(function () {\n      var _paperRef$current;\n\n      if ((_paperRef$current = paperRef.current) === null || _paperRef$current === void 0 ? void 0 : _paperRef$current.contains(document.activeElement)) {\n        return;\n      }\n\n      onClose();\n    });\n  };\n\n  return /*#__PURE__*/createElement(Popper, _extends({\n    transition: true,\n    role: role,\n    open: open,\n    anchorEl: anchorEl,\n    className: clsx(classes.root, PopperProps === null || PopperProps === void 0 ? void 0 : PopperProps.className),\n    popperOptions: popperOptions\n  }, PopperProps), function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return /*#__PURE__*/createElement(TrapFocus, _extends({\n      open: open,\n      disableAutoFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: function isEnabled() {\n        return true;\n      },\n      getDoc: function getDoc() {\n        var _paperRef$current$own, _paperRef$current2;\n\n        return (_paperRef$current$own = (_paperRef$current2 = paperRef.current) === null || _paperRef$current2 === void 0 ? void 0 : _paperRef$current2.ownerDocument) !== null && _paperRef$current$own !== void 0 ? _paperRef$current$own : document;\n      }\n    }, TrapFocusProps), /*#__PURE__*/createElement(TransitionComponent, TransitionProps, /*#__PURE__*/createElement(Paper, {\n      tabIndex: -1,\n      elevation: 8,\n      ref: handlePopperRef,\n      className: clsx(classes.paper, placement === 'top' && classes.topTransition),\n      onBlur: handleBlur\n    }, children)));\n  });\n};\n\nvar DesktopWrapper = function DesktopWrapper(_ref) {\n  var children = _ref.children,\n      DateInputProps = _ref.DateInputProps,\n      _ref$KeyboardDateInpu = _ref.KeyboardDateInputComponent,\n      KeyboardDateInputComponent = _ref$KeyboardDateInpu === void 0 ? KeyboardDateInput : _ref$KeyboardDateInpu,\n      onDismiss = _ref.onDismiss,\n      open = _ref.open,\n      PopperProps = _ref.PopperProps,\n      TransitionComponent = _ref.TransitionComponent;\n  var inputRef = useRef(null);\n\n  var _useAutoFocusControl = useAutoFocusControl(open),\n      canAutoFocus = _useAutoFocusControl.canAutoFocus,\n      onOpen = _useAutoFocusControl.onOpen;\n\n  return /*#__PURE__*/createElement(WrapperVariantContext.Provider, {\n    value: \"desktop\"\n  }, /*#__PURE__*/createElement(CanAutoFocusContext.Provider, {\n    value: canAutoFocus\n  }, /*#__PURE__*/createElement(KeyboardDateInputComponent, _extends({}, DateInputProps, {\n    inputRef: inputRef\n  })), /*#__PURE__*/createElement(PickersPopper, {\n    role: \"dialog\",\n    open: open,\n    anchorEl: inputRef.current,\n    TransitionComponent: TransitionComponent,\n    PopperProps: PopperProps,\n    onClose: onDismiss,\n    onOpen: onOpen\n  }, children)));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DesktopWrapper.propTypes = {\n  onOpen: func,\n  onClose: func\n} : void 0;\n\nvar DesktopTooltipWrapper = function DesktopTooltipWrapper(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      PopperProps = _ref.PopperProps,\n      onDismiss = _ref.onDismiss,\n      DateInputProps = _ref.DateInputProps,\n      TransitionComponent = _ref.TransitionComponent,\n      _ref$KeyboardDateInpu = _ref.KeyboardDateInputComponent,\n      KeyboardDateInputComponent = _ref$KeyboardDateInpu === void 0 ? KeyboardDateInput : _ref$KeyboardDateInpu;\n  var inputRef = useRef(null);\n  var popperRef = useRef(null);\n\n  var _useAutoFocusControl = useAutoFocusControl(open),\n      canAutoFocus = _useAutoFocusControl.canAutoFocus,\n      onOpen = _useAutoFocusControl.onOpen;\n\n  var handleBlur = function handleBlur() {\n    executeInTheNextEventLoopTick(function () {\n      var _inputRef$current, _popperRef$current;\n\n      if (((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.contains(document.activeElement)) || ((_popperRef$current = popperRef.current) === null || _popperRef$current === void 0 ? void 0 : _popperRef$current.contains(document.activeElement))) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return /*#__PURE__*/createElement(WrapperVariantContext.Provider, {\n    value: \"desktop\"\n  }, /*#__PURE__*/createElement(CanAutoFocusContext.Provider, {\n    value: canAutoFocus\n  }, /*#__PURE__*/createElement(KeyboardDateInputComponent, _extends({}, DateInputProps, {\n    containerRef: inputRef,\n    onBlur: handleBlur\n  })), /*#__PURE__*/createElement(PickersPopper, {\n    role: \"tooltip\",\n    open: open,\n    innerRef: popperRef,\n    anchorEl: inputRef.current,\n    TransitionComponent: TransitionComponent,\n    PopperProps: PopperProps,\n    onBlur: handleBlur,\n    onClose: onDismiss,\n    onOpen: onOpen\n  }, children)));\n};\n\nvar makeResponsiveWrapper = function makeResponsiveWrapper(DesktopWrapperComponent, MobileWrapperComponent) {\n  var ResponsiveWrapper = function ResponsiveWrapper(_ref) {\n    var cancelText = _ref.cancelText,\n        clearable = _ref.clearable,\n        clearText = _ref.clearText,\n        _ref$desktopModeMedia = _ref.desktopModeMediaQuery,\n        desktopModeMediaQuery = _ref$desktopModeMedia === void 0 ? IS_TOUCH_DEVICE_MEDIA : _ref$desktopModeMedia,\n        DialogProps = _ref.DialogProps,\n        displayStaticWrapperAs = _ref.displayStaticWrapperAs,\n        okText = _ref.okText,\n        PopperProps = _ref.PopperProps,\n        showTodayButton = _ref.showTodayButton,\n        todayText = _ref.todayText,\n        TransitionComponent = _ref.TransitionComponent,\n        other = _objectWithoutProperties(_ref, [\"cancelText\", \"clearable\", \"clearText\", \"desktopModeMediaQuery\", \"DialogProps\", \"displayStaticWrapperAs\", \"okText\", \"PopperProps\", \"showTodayButton\", \"todayText\", \"TransitionComponent\"]);\n\n    var isDesktop = useMediaQuery(desktopModeMediaQuery);\n    return isDesktop ? /*#__PURE__*/createElement(DesktopWrapperComponent, _extends({\n      PopperProps: PopperProps,\n      TransitionComponent: TransitionComponent\n    }, other)) : /*#__PURE__*/createElement(MobileWrapperComponent, _extends({\n      okText: okText,\n      cancelText: cancelText,\n      clearText: clearText,\n      todayText: todayText,\n      showTodayButton: showTodayButton,\n      clearable: clearable,\n      DialogProps: DialogProps\n    }, other));\n  };\n\n  return ResponsiveWrapper;\n};\n\nvar ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\nvar ResponsiveTooltipWrapper = makeResponsiveWrapper(DesktopTooltipWrapper, MobileWrapper);\nvar useStyles$2 = makeStyles(function (theme) {\n  return {\n    root: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n}, {\n  name: 'MuiPickersStaticWrapper'\n});\n\nvar StaticWrapper = function StaticWrapper(_ref) {\n  var _ref$displayStaticWra = _ref.displayStaticWrapperAs,\n      displayStaticWrapperAs = _ref$displayStaticWra === void 0 ? 'static' : _ref$displayStaticWra,\n      children = _ref.children;\n  var classes = useStyles$2();\n  return /*#__PURE__*/createElement(IsStaticVariantContext.Provider, {\n    value: true\n  }, /*#__PURE__*/createElement(WrapperVariantContext.Provider, {\n    value: displayStaticWrapperAs\n  }, /*#__PURE__*/createElement(\"div\", {\n    className: classes.root,\n    children: children\n  })));\n};\n\nvar defaultIsSameError = function defaultIsSameError(a, b) {\n  return a === b;\n};\n\nfunction makeValidationHook(validateFn) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      defaultValidationError = _ref.defaultValidationError,\n      _ref$isSameError = _ref.isSameError,\n      isSameError = _ref$isSameError === void 0 ? defaultIsSameError : _ref$isSameError;\n\n  return function (value, props) {\n    var utils = useUtils();\n    var previousValidationErrorRef = useRef(defaultValidationError || null);\n    var validationError = validateFn(utils, value, props);\n    useEffect(function () {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n    return validationError;\n  };\n}\n\nfunction withDateAdapterProp(Component) {\n  return function (_ref) {\n    var dateAdapter = _ref.dateAdapter,\n        other = _objectWithoutProperties(_ref, [\"dateAdapter\"]);\n\n    if (dateAdapter) {\n      return /*#__PURE__*/createElement(MuiPickersAdapterContext.Provider, {\n        value: dateAdapter\n      }, /*#__PURE__*/createElement(Component, other));\n    }\n\n    return /*#__PURE__*/createElement(Component, other);\n  };\n}\n/* Creates a component that rendering modal/popover/nothing and spreading props down to text field */\n\n\nfunction makeWrapperComponent(Wrapper, _ref) {\n  var KeyboardDateInputComponent = _ref.KeyboardDateInputComponent,\n      PureDateInputComponent = _ref.PureDateInputComponent;\n\n  function WrapperComponent(props) {\n    var disableCloseOnSelect = props.disableCloseOnSelect,\n        cancelText = props.cancelText,\n        children = props.children,\n        clearable = props.clearable,\n        clearText = props.clearText,\n        DateInputProps = props.DateInputProps,\n        DialogProps = props.DialogProps,\n        displayStaticWrapperAs = props.displayStaticWrapperAs,\n        inputFormat = props.inputFormat,\n        okText = props.okText,\n        onAccept = props.onAccept,\n        onChange = props.onChange,\n        onClose = props.onClose,\n        onOpen = props.onOpen,\n        open = props.open,\n        PopperProps = props.PopperProps,\n        showTabs = props.showTabs,\n        todayText = props.todayText,\n        value = props.value,\n        wider = props.wider,\n        wrapperProps = props.wrapperProps,\n        restPropsForTextField = _objectWithoutProperties(props, [\"disableCloseOnSelect\", \"cancelText\", \"children\", \"clearable\", \"clearText\", \"DateInputProps\", \"DialogProps\", \"displayStaticWrapperAs\", \"inputFormat\", \"okText\", \"onAccept\", \"onChange\", \"onClose\", \"onOpen\", \"open\", \"PopperProps\", \"showTabs\", \"todayText\", \"value\", \"wider\", \"wrapperProps\"]);\n\n    var WrapperComponent = Wrapper;\n    return /*#__PURE__*/React__default.createElement(WrapperComponent, _extends({\n      clearable: clearable,\n      clearText: clearText,\n      DialogProps: DialogProps,\n      PopperProps: PopperProps,\n      okText: okText,\n      todayText: todayText,\n      cancelText: cancelText,\n      DateInputProps: DateInputProps // @ts-ignore\n      ,\n      KeyboardDateInputComponent: KeyboardDateInputComponent // @ts-ignore\n      ,\n      PureDateInputComponent: PureDateInputComponent,\n      wider: wider,\n      showTabs: showTabs,\n      displayStaticWrapperAs: displayStaticWrapperAs\n    }, wrapperProps, restPropsForTextField), children);\n  }\n\n  return WrapperComponent;\n}\n\nfunction useOpenState(_ref) {\n  var open = _ref.open,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose;\n  var isControllingOpenProp = useRef(typeof open === 'boolean').current;\n\n  var _React$useState = useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _open = _React$useState2[0],\n      _setIsOpen = _React$useState2[1]; // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n\n\n  useEffect(function () {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n\n      _setIsOpen(open);\n    }\n  }, [isControllingOpenProp, open]);\n  var setIsOpen = useCallback(function (newIsOpen) {\n    if (!isControllingOpenProp) {\n      _setIsOpen(newIsOpen);\n    }\n\n    return newIsOpen ? onOpen && onOpen() : onClose && onClose();\n  }, [isControllingOpenProp, onOpen, onClose]);\n  return {\n    isOpen: _open,\n    setIsOpen: setIsOpen\n  };\n}\n\nfunction usePickerState(props, valueManager) {\n  var inputFormat = props.inputFormat,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      onAccept = props.onAccept,\n      onChange = props.onChange,\n      disableCloseOnSelect = props.disableCloseOnSelect,\n      value = props.value;\n\n  if (!inputFormat) {\n    throw new Error('inputFormat prop is required');\n  }\n\n  var now = useNow();\n  var utils = useUtils();\n\n  var _useOpenState = useOpenState(props),\n      isOpen = _useOpenState.isOpen,\n      setIsOpen = _useOpenState.setIsOpen;\n\n  var _React$useState = useState(valueManager.parseInput(utils, props)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pickerDate = _React$useState2[0],\n      setPickerDate = _React$useState2[1]; // Mobile keyboard view is a special case.\n  // When it's open picker should work like closed, cause we are just showing text field\n\n\n  var _React$useState3 = useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isMobileKeyboardViewOpen = _React$useState4[0],\n      setMobileKeyboardViewOpen = _React$useState4[1];\n\n  useEffect(function () {\n    var parsedDateValue = valueManager.parseInput(utils, props);\n    setPickerDate(function (currentPickerDate) {\n      if (!valueManager.areValuesEqual(utils, currentPickerDate, parsedDateValue)) {\n        return parsedDateValue;\n      }\n\n      return currentPickerDate;\n    }); // We need to react only on value change, because `date` could potentially return new Date() on each render\n  }, [value, utils]); // eslint-disable-line\n\n  var acceptDate = useCallback(function (acceptedDate, needClosePicker) {\n    onChange(acceptedDate);\n\n    if (needClosePicker) {\n      setIsOpen(false);\n\n      if (onAccept) {\n        onAccept(acceptedDate);\n      }\n    }\n  }, [onAccept, onChange, setIsOpen]);\n  var wrapperProps = useMemo(function () {\n    return {\n      open: isOpen,\n      onClear: function onClear() {\n        return acceptDate(valueManager.emptyValue, true);\n      },\n      onAccept: function onAccept() {\n        return acceptDate(pickerDate, true);\n      },\n      onDismiss: function onDismiss() {\n        return setIsOpen(false);\n      },\n      onSetToday: function onSetToday() {\n        // TODO FIX ME\n        setPickerDate(now);\n        acceptDate(now, !disableCloseOnSelect);\n      }\n    };\n  }, [acceptDate, disableCloseOnSelect, isOpen, now, pickerDate, setIsOpen, valueManager.emptyValue]);\n  var pickerProps = useMemo(function () {\n    return {\n      // canAutoFocus,\n      date: pickerDate,\n      isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: function toggleMobileKeyboardView() {\n        if (!isMobileKeyboardViewOpen) {\n          // accept any partial input done by React.user\n          setPickerDate(pickerDate);\n        }\n\n        setMobileKeyboardViewOpen(!isMobileKeyboardViewOpen);\n      },\n      onDateChange: function onDateChange(newDate, wrapperVariant) {\n        var selectionState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'partial';\n        setPickerDate(newDate);\n\n        if (selectionState === 'partial') {\n          acceptDate(newDate, false);\n        }\n\n        if (selectionState === 'finish') {\n          var shouldCloseOnSelect = !(disableCloseOnSelect !== null && disableCloseOnSelect !== void 0 ? disableCloseOnSelect : wrapperVariant === 'mobile');\n          acceptDate(newDate, shouldCloseOnSelect);\n        } // if selectionState === \"shallow\" do nothing (we already update picker state)\n\n      }\n    };\n  }, [acceptDate, disableCloseOnSelect, isMobileKeyboardViewOpen, pickerDate]);\n  var inputProps = useMemo(function () {\n    return {\n      onChange: onChange,\n      inputFormat: inputFormat,\n      open: isOpen,\n      rawValue: value,\n      openPicker: function openPicker() {\n        return !readOnly && !disabled && setIsOpen(true);\n      }\n    };\n  }, [onChange, inputFormat, isOpen, value, readOnly, disabled, setIsOpen]);\n  var pickerState = {\n    pickerProps: pickerProps,\n    inputProps: inputProps,\n    wrapperProps: wrapperProps\n  };\n  useDebugValue(pickerState, function () {\n    return {\n      MuiPickerState: {\n        pickerDate: pickerDate,\n        other: pickerState\n      }\n    };\n  });\n  return pickerState;\n}\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar valueManager = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  areValuesEqual: function areValuesEqual(utils, a, b) {\n    return utils.isEqual(a, b);\n  }\n};\n\nfunction makePickerWithStateAndWrapper(Wrapper, _ref) {\n  var name = _ref.name,\n      useInterceptProps = _ref.useInterceptProps,\n      useValidation = _ref.useValidation,\n      DefaultToolbarComponent = _ref.DefaultToolbarComponent;\n  var WrapperComponent = makeWrapperComponent(Wrapper, {\n    KeyboardDateInputComponent: KeyboardDateInput,\n    PureDateInputComponent: PureDateInput\n  });\n\n  function PickerWithState(__props) {\n    var allProps = useInterceptProps(__props);\n    var validationError = useValidation(allProps.value, allProps) !== null;\n\n    var _usePickerState = usePickerState(allProps, valueManager),\n        pickerProps = _usePickerState.pickerProps,\n        inputProps = _usePickerState.inputProps,\n        wrapperProps = _usePickerState.wrapperProps; // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n\n\n    var value = allProps.value,\n        onChange = allProps.onChange,\n        other = _objectWithoutProperties(allProps, [\"value\", \"onChange\"]);\n\n    var AllDateInputProps = _objectSpread$2(_objectSpread$2(_objectSpread$2({}, inputProps), other), {}, {\n      validationError: validationError\n    });\n\n    return /*#__PURE__*/createElement(WrapperComponent, _extends({\n      wrapperProps: wrapperProps,\n      DateInputProps: AllDateInputProps\n    }, other), /*#__PURE__*/createElement(Picker, _extends({}, pickerProps, {\n      toolbarTitle: allProps.label || allProps.toolbarTitle,\n      ToolbarComponent: other.ToolbarComponent || DefaultToolbarComponent,\n      DateInputProps: AllDateInputProps\n    }, other)));\n  }\n\n  var FinalPickerComponent = withDefaultProps({\n    name: name\n  }, withDateAdapterProp(PickerWithState)); // @ts-ignore Simply ignore generic values in props, because it is impossible\n  // to keep generics without additional cast when using forwardRef\n  // @see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/35834\n\n  return forwardRef(function (props, ref) {\n    return /*#__PURE__*/createElement(FinalPickerComponent, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport { DesktopTooltipWrapper as D, MobileWrapper as M, ResponsiveTooltipWrapper as R, StaticWrapper as S, makeWrapperComponent as a, makePickerWithStateAndWrapper as b, ResponsiveWrapper as c, DesktopWrapper as d, makeValidationHook as m, usePickerState as u, withDateAdapterProp as w };","map":{"version":3,"sources":["../src/_shared/PureDateInput.tsx","../src/_shared/PickersModalDialog.tsx","../src/wrappers/MobileWrapper.tsx","../src/_shared/PickersPopper.tsx","../src/wrappers/DesktopWrapper.tsx","../src/wrappers/DesktopTooltipWrapper.tsx","../src/wrappers/ResponsiveWrapper.tsx","../src/wrappers/StaticWrapper.tsx","../src/_shared/hooks/useValidation.ts","../src/_shared/withDateAdapterProp.tsx","../src/wrappers/makeWrapperComponent.tsx","../src/_shared/hooks/useOpenState.ts","../src/_shared/hooks/usePickerState.ts","../src/Picker/makePickerWithState.tsx"],"names":["PureDateInput","containerRef","disabled","forwardedRef","getOpenDialogAriaText","getTextFieldAriaText","inputFormat","InputProps","label","openPicker","onOpen","rawValue","renderInput","TextFieldProps","validationError","utils","useUtils","PureDateInputProps","readOnly","inputValue","getDisplayDate","ref","inputRef","error","inputProps","value","onClick","onKeyDown","onSpaceOrEnter","acceptRegex","PropTypes","mask","OpenPickerButtonProps","openPickerIcon","rifmFormatter","useStyles","makeStyles","dialogRoot","minWidth","DIALOG_WIDTH","dialogRootWider","DIALOG_WIDTH_WIDER","dialogContainer","outline","dialog","padding","dialogAction","withAdditionalAction","justifyContent","marginRight","name","PickersModalDialog","cancelText","children","classes","MuiDialogClasses","clearable","clearText","okText","onAccept","onClear","onDismiss","onSetToday","showTabs","showTodayButton","todayText","wider","other","container","paper","clsx","MobileWrapper","DateInputProps","DialogProps","displayStaticWrapperAs","KeyboardDateInputComponent","open","PopperProps","PureDateInputComponent","React.createElement","root","zIndex","theme","modal","transformOrigin","topTransition","PickersPopper","anchorEl","innerRef","onClose","role","TransitionComponent","Grow","TrapFocusProps","paperRef","React","handlePopperRef","useForkRef","lastFocusedElementRef","popperOptions","onCreate","useGlobalKeyDown","keycode","document","handleBlur","executeInTheNextEventLoopTick","TransitionProps","placement","DesktopWrapper","KeyboardDateInput","canAutoFocus","useAutoFocusControl","DesktopTooltipWrapper","popperRef","makeResponsiveWrapper","ResponsiveWrapper","desktopModeMediaQuery","IS_TOUCH_DEVICE_MEDIA","isDesktop","useMediaQuery","ResponsiveTooltipWrapper","overflow","display","flexDirection","backgroundColor","StaticWrapper","defaultIsSameError","a","defaultValidationError","isSameError","previousValidationErrorRef","validateFn","props","dateAdapter","disableCloseOnSelect","onChange","wrapperProps","restPropsForTextField","WrapperComponent","isControllingOpenProp","_open","_setIsOpen","setIsOpen","newIsOpen","isOpen","now","useNow","useOpenState","pickerDate","setPickerDate","valueManager","isMobileKeyboardViewOpen","setMobileKeyboardViewOpen","parsedDateValue","acceptDate","pickerProps","date","toggleMobileKeyboardView","onDateChange","selectionState","shouldCloseOnSelect","wrapperVariant","pickerState","MuiPickerState","emptyValue","parseInput","areValuesEqual","useInterceptProps","useValidation","DefaultToolbarComponent","makeWrapperComponent","allProps","usePickerState","AllDateInputProps","FinalPickerComponent","withDefaultProps","withDateAdapterProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { onSpaceOrEnter } from '../_helpers/utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { IconButtonProps } from '@material-ui/core/IconButton';\nimport { useUtils, MuiPickersAdapter } from './hooks/useUtils';\nimport { InputAdornmentProps } from '@material-ui/core/InputAdornment';\nimport { getDisplayDate, getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport type MuiTextFieldProps = TextFieldProps | Omit<TextFieldProps, 'variant'>;\n\nexport interface DateInputProps<TInputValue = ParsableDate<unknown>, TDateValue = unknown> {\n  open: boolean;\n  rawValue: TInputValue;\n  inputFormat: string;\n  onChange: (date: TDateValue, keyboardInputValue?: string) => void;\n  openPicker: () => void;\n  readOnly?: boolean;\n  disabled?: boolean;\n  validationError?: boolean;\n  label?: TextFieldProps['label'];\n  InputProps?: TextFieldProps['InputProps'];\n  TextFieldProps?: Partial<MuiTextFieldProps>;\n  // lib/src/wrappers/DesktopPopperWrapper.tsx:87\n  onBlur?: () => void;\n  // ?? TODO when it will be possible to display \"empty\" date in datepicker use it instead of ignoring invalid inputs\n  ignoreInvalidInputs?: boolean;\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   */\n  renderInput: (props: MuiTextFieldProps) => React.ReactElement;\n  /**\n   * Icon displaying for open picker button.\n   * */\n  openPickerIcon?: React.ReactNode;\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__ or __/__/____ __:__ _M)\n   */\n  mask?: string;\n  /**\n   *Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex?: RegExp;\n  /**\n   * Props to pass to keyboard input adornment.\n   * @type {Partial<InputAdornmentProps>}\n   */\n  InputAdornmentProps?: Partial<InputAdornmentProps>;\n  /**\n   * Props to pass to keyboard adornment button.\n   * @type {Partial<IconButtonProps>}\n   */\n  OpenPickerButtonProps?: Partial<IconButtonProps>;\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter?: (str: string) => string;\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker?: boolean;\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput?: boolean;\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText?: (value: ParsableDate, utils: MuiPickersAdapter) => string;\n}\n\nexport type ExportedDateInputProps<TInputValue, TDateValue> = Omit<\n  DateInputProps<TInputValue, TDateValue>,\n  | 'openPicker'\n  | 'inputValue'\n  | 'onChange'\n  | 'inputFormat'\n  | 'validationError'\n  | 'rawValue'\n  | 'forwardedRef'\n  | 'open'\n  | 'TextFieldProps'\n  | 'onBlur'\n>;\n\nexport interface DateInputRefs {\n  inputRef?: React.Ref<HTMLInputElement>;\n  containerRef?: React.Ref<HTMLDivElement>;\n  forwardedRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const PureDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  containerRef,\n  disabled,\n  forwardedRef,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  inputFormat,\n  InputProps,\n  label,\n  openPicker: onOpen,\n  rawValue,\n  renderInput,\n  TextFieldProps = {},\n  validationError,\n}) => {\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(\n    () => ({\n      ...InputProps,\n      readOnly: true,\n    }),\n    [InputProps]\n  );\n\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n\n  return renderInput({\n    label,\n    disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    inputProps: {\n      disabled,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue,\n      onClick: onOpen,\n      onKeyDown: onSpaceOrEnter(onOpen),\n    },\n    ...TextFieldProps,\n  });\n};\n\nPureDateInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH, DIALOG_WIDTH_WIDER } from '../constants/dimensions';\n\nexport interface ExportedPickerModalProps {\n  /**\n   * \"OK\" button text.\n   * @default \"OK\"\n   */\n  okText?: React.ReactNode;\n  /**\n   * \"CANCEL\" Text message\n   * @default \"CANCEL\"\n   */\n  cancelText?: React.ReactNode;\n  /**\n   * \"CLEAR\" Text message\n   * @default \"CLEAR\"\n   */\n  clearText?: React.ReactNode;\n  /**\n   * \"TODAY\" Text message\n   * @default \"TODAY\"\n   */\n  todayText?: React.ReactNode;\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * If `true`, the today button will be displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton?: boolean;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport interface PickerModalDialogProps extends ExportedPickerModalProps, DialogProps {\n  onAccept: () => void;\n  onClear: () => void;\n  onDismiss: () => void;\n  onSetToday: () => void;\n}\n\nexport const useStyles = makeStyles(\n  {\n    dialogRoot: {\n      minWidth: DIALOG_WIDTH,\n    },\n    dialogRootWider: {\n      minWidth: DIALOG_WIDTH_WIDER,\n    },\n    dialogContainer: {\n      '&:focus > $dialogRoot': {\n        outline: 'auto',\n        '@media (pointer:coarse)': {\n          outline: 0,\n        },\n      },\n    },\n    dialog: {\n      '&:first-child': {\n        padding: 0,\n      },\n    },\n    dialogAction: {\n      // requested for overrides\n    },\n    withAdditionalAction: {\n      // set justifyContent to default value to fix IE11 layout bug\n      // see https://github.com/mui-org/material-ui-pickers/pull/267\n      justifyContent: 'flex-start',\n\n      '& > *:first-child': {\n        marginRight: 'auto',\n      },\n    },\n  },\n  { name: 'MuiPickersModalDialog' }\n);\n\nexport const PickersModalDialog: React.FC<PickerModalDialogProps> = ({\n  cancelText = 'Cancel',\n  children,\n  classes: MuiDialogClasses,\n  clearable = false,\n  clearText = 'Clear',\n  okText = 'OK',\n  onAccept,\n  onClear,\n  onDismiss,\n  onSetToday,\n  showTabs,\n  showTodayButton = false,\n  todayText = 'Today',\n  wider,\n  ...other\n}) => {\n  const classes = useStyles();\n  return (\n    <Dialog\n      onClose={onDismiss}\n      classes={{\n        container: classes.dialogContainer,\n        paper: clsx(classes.dialogRoot, {\n          [classes.dialogRootWider]: wider,\n        }),\n        ...MuiDialogClasses,\n      }}\n      {...other}\n    >\n      <DialogContent children={children} className={classes.dialog} />\n\n      <DialogActions\n        className={clsx(classes.dialogAction, {\n          [classes.withAdditionalAction]: clearable || showTodayButton,\n        })}\n      >\n        {clearable && (\n          <Button data-mui-test=\"clear-action-button\" color=\"primary\" onClick={onClear}>\n            {clearText}\n          </Button>\n        )}\n\n        {showTodayButton && (\n          <Button data-mui-test=\"today-action-button\" color=\"primary\" onClick={onSetToday}>\n            {todayText}\n          </Button>\n        )}\n\n        {cancelText && (\n          <Button color=\"primary\" onClick={onDismiss}>\n            {cancelText}\n          </Button>\n        )}\n\n        {okText && (\n          <Button color=\"primary\" onClick={onAccept}>\n            {okText}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { DialogProps as MuiDialogProps } from '@material-ui/core/Dialog';\nimport { PickersModalDialog, ExportedPickerModalProps } from '../_shared/PickersModalDialog';\n\nexport interface InnerMobileWrapperProps extends ExportedPickerModalProps {\n  /**\n   * Props to be passed directly to material-ui Dialog\n   * @type {Partial<MuiDialogProps>}\n   */\n  DialogProps?: Partial<MuiDialogProps>;\n}\n\nexport interface MobileWrapperProps\n  extends InnerMobileWrapperProps,\n    WrapperProps,\n    Partial<InnerDesktopWrapperProps & StaticWrapperProps> {}\n\nexport const MobileWrapper: React.FC<MobileWrapperProps> = ({\n  cancelText,\n  children,\n  clearable,\n  clearText,\n  DateInputProps,\n  DialogProps,\n  displayStaticWrapperAs,\n  KeyboardDateInputComponent,\n  okText,\n  onAccept,\n  onClear,\n  onDismiss,\n  onSetToday,\n  open,\n  PopperProps,\n  PureDateInputComponent = PureDateInput,\n  showTabs,\n  showTodayButton,\n  todayText,\n  wider,\n  ...other\n}) => {\n  return (\n    <WrapperVariantContext.Provider value=\"mobile\">\n      <PureDateInputComponent {...other} {...DateInputProps} />\n\n      <PickersModalDialog\n        wider={wider}\n        showTabs={showTabs}\n        open={open}\n        onClear={onClear}\n        onAccept={onAccept}\n        onDismiss={onDismiss}\n        onSetToday={onSetToday}\n        clearText={clearText}\n        todayText={todayText}\n        okText={okText}\n        cancelText={cancelText}\n        clearable={clearable}\n        showTodayButton={showTodayButton}\n        children={children}\n        data-mui-test=\"mobile-wrapper-dialog\"\n        {...DialogProps}\n      />\n    </WrapperVariantContext.Provider>\n  );\n};\n\nMobileWrapper.propTypes = {\n  okText: PropTypes.node,\n  cancelText: PropTypes.node,\n  clearText: PropTypes.node,\n  clearable: PropTypes.bool,\n  todayText: PropTypes.node,\n  showTodayButton: PropTypes.bool,\n  DialogProps: PropTypes.object,\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport TrapFocus, { TrapFocusProps } from '@material-ui/core/Unstable_TrapFocus';\nimport { useForkRef } from '@material-ui/core/utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useGlobalKeyDown, keycode } from './hooks/useKeyDown';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nexport interface ExportedPickerPopperProps {\n  /**\n   * Popper props passed down to [Popper](https://material-ui.com/api/popper/) component.\n   */\n  PopperProps?: Partial<PopperProps>;\n  /**\n   * Custom component for [Transition](https://material-ui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent?: React.ComponentType<TransitionProps>;\n}\n\nexport interface PickerPopperProps extends ExportedPickerPopperProps, PaperProps {\n  role: 'tooltip' | 'dialog';\n  TrapFocusProps?: Partial<TrapFocusProps>;\n  anchorEl: PopperProps['anchorEl'];\n  open: PopperProps['open'];\n  onClose: () => void;\n  onOpen: () => void;\n}\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      zIndex: theme.zIndex.modal,\n    },\n    paper: {\n      transformOrigin: 'top center',\n      '&:focus': {\n        [IS_TOUCH_DEVICE_MEDIA]: {\n          outline: 0,\n        },\n      },\n    },\n    topTransition: {\n      transformOrigin: 'bottom center',\n    },\n  }),\n  { name: 'MuiPickersPopper' }\n);\n\nexport const PickersPopper: React.FC<PickerPopperProps> = ({\n  anchorEl,\n  children,\n  innerRef = null,\n  onClose,\n  onOpen,\n  open,\n  PopperProps,\n  role,\n  TransitionComponent = Grow,\n  TrapFocusProps,\n}) => {\n  const classes = useStyles();\n  const paperRef = React.useRef<HTMLElement>(null);\n  const handlePopperRef = useForkRef(paperRef, innerRef);\n  const lastFocusedElementRef = React.useRef<Element | null>(null);\n  const popperOptions = React.useMemo(() => ({ onCreate: onOpen }), [onOpen]);\n\n  useGlobalKeyDown(open, {\n    [keycode.Esc]: onClose,\n  });\n\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (\n      lastFocusedElementRef.current &&\n      lastFocusedElementRef.current instanceof HTMLElement\n    ) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n\n  const handleBlur = () => {\n    if (!open) {\n      return;\n    }\n\n    // document.activeElement is updating on the next tick after `blur` called\n    executeInTheNextEventLoopTick(() => {\n      if (paperRef.current?.contains(document.activeElement)) {\n        return;\n      }\n\n      onClose();\n    });\n  };\n\n  return (\n    <Popper\n      transition\n      role={role}\n      open={open}\n      anchorEl={anchorEl}\n      className={clsx(classes.root, PopperProps?.className)}\n      popperOptions={popperOptions}\n      {...PopperProps}\n    >\n      {({ TransitionProps, placement }) => (\n        <TrapFocus\n          open={open}\n          disableAutoFocus\n          disableEnforceFocus={role === 'tooltip'}\n          isEnabled={() => true}\n          getDoc={() => paperRef.current?.ownerDocument ?? document}\n          {...TrapFocusProps}\n        >\n          <TransitionComponent {...TransitionProps}>\n            <Paper\n              tabIndex={-1}\n              elevation={8}\n              ref={handlePopperRef}\n              className={clsx(classes.paper, {\n                [classes.topTransition]: placement === 'top',\n              })}\n              onBlur={handleBlur}\n            >\n              {children}\n            </Paper>\n          </TransitionComponent>\n        </TrapFocus>\n      )}\n    </Popper>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { InnerDesktopTooltipWrapperProps } from './DesktopTooltipWrapper';\nimport { PickersPopper, ExportedPickerPopperProps } from '../_shared/PickersPopper';\nimport { CanAutoFocusContext, useAutoFocusControl } from '../_shared/hooks/useCanAutoFocus';\n\nexport interface InnerDesktopWrapperProps extends ExportedPickerPopperProps {}\n\nexport interface DesktopWrapperProps\n  extends InnerDesktopWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & InnerDesktopTooltipWrapperProps & StaticWrapperProps> {}\n\nexport const DesktopWrapper: React.FC<DesktopWrapperProps> = ({\n  children,\n  DateInputProps,\n  KeyboardDateInputComponent = KeyboardDateInput,\n  onDismiss,\n  open,\n  PopperProps,\n  TransitionComponent,\n}) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const { canAutoFocus, onOpen } = useAutoFocusControl(open);\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <CanAutoFocusContext.Provider value={canAutoFocus}>\n        <KeyboardDateInputComponent {...DateInputProps} inputRef={inputRef} />\n\n        <PickersPopper\n          role=\"dialog\"\n          open={open}\n          anchorEl={inputRef.current}\n          TransitionComponent={TransitionComponent}\n          PopperProps={PopperProps}\n          onClose={onDismiss}\n          onOpen={onOpen}\n        >\n          {children}\n        </PickersPopper>\n      </CanAutoFocusContext.Provider>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nDesktopWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n} as any;\n","import * as React from 'react';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { ExportedPickerPopperProps, PickersPopper } from '../_shared/PickersPopper';\nimport { CanAutoFocusContext, useAutoFocusControl } from '../_shared/hooks/useCanAutoFocus';\n\nexport interface InnerDesktopTooltipWrapperProps extends ExportedPickerPopperProps {}\n\nexport interface DesktopTooltipWrapperProps\n  extends InnerDesktopTooltipWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & StaticWrapperProps & InnerDesktopWrapperProps> {}\n\nexport const DesktopTooltipWrapper: React.FC<DesktopTooltipWrapperProps> = ({\n  open,\n  children,\n  PopperProps,\n  onDismiss,\n  DateInputProps,\n  TransitionComponent,\n  KeyboardDateInputComponent = KeyboardDateInput,\n}) => {\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const popperRef = React.useRef<HTMLElement>(null);\n  const { canAutoFocus, onOpen } = useAutoFocusControl(open);\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      if (\n        inputRef.current?.contains(document.activeElement) ||\n        popperRef.current?.contains(document.activeElement)\n      ) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <CanAutoFocusContext.Provider value={canAutoFocus}>\n        <KeyboardDateInputComponent\n          {...DateInputProps}\n          containerRef={inputRef}\n          onBlur={handleBlur}\n        />\n\n        <PickersPopper\n          role=\"tooltip\"\n          open={open}\n          innerRef={popperRef}\n          anchorEl={inputRef.current}\n          TransitionComponent={TransitionComponent}\n          PopperProps={PopperProps}\n          onBlur={handleBlur}\n          onClose={onDismiss}\n          onOpen={onOpen}\n        >\n          {children}\n        </PickersPopper>\n      </CanAutoFocusContext.Provider>\n    </WrapperVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { MobileWrapperProps, MobileWrapper } from './MobileWrapper';\nimport { DesktopWrapperProps, DesktopWrapper } from './DesktopWrapper';\nimport { DesktopTooltipWrapperProps, DesktopTooltipWrapper } from './DesktopTooltipWrapper';\n\nexport interface ResponsiveWrapperProps\n  extends DesktopWrapperProps,\n    DesktopTooltipWrapperProps,\n    MobileWrapperProps {\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   *\n   * @default \"@media (pointer: fine)\"\n   * @example \"@media (min-width: 720px)\" or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery?: string;\n}\n\nexport const makeResponsiveWrapper = (\n  DesktopWrapperComponent: React.FC<DesktopWrapperProps | DesktopTooltipWrapperProps>,\n  MobileWrapperComponent: React.FC<MobileWrapperProps>\n) => {\n  const ResponsiveWrapper: React.FC<ResponsiveWrapperProps> = ({\n    cancelText,\n    clearable,\n    clearText,\n    desktopModeMediaQuery = IS_TOUCH_DEVICE_MEDIA,\n    DialogProps,\n    displayStaticWrapperAs,\n    okText,\n    PopperProps,\n    showTodayButton,\n    todayText,\n    TransitionComponent,\n    ...other\n  }) => {\n    const isDesktop = useMediaQuery(desktopModeMediaQuery);\n\n    return isDesktop ? (\n      <DesktopWrapperComponent\n        PopperProps={PopperProps}\n        TransitionComponent={TransitionComponent}\n        {...other}\n      />\n    ) : (\n      <MobileWrapperComponent\n        okText={okText}\n        cancelText={cancelText}\n        clearText={clearText}\n        todayText={todayText}\n        showTodayButton={showTodayButton}\n        clearable={clearable}\n        DialogProps={DialogProps}\n        {...other}\n      />\n    );\n  };\n\n  return ResponsiveWrapper;\n};\n\nexport const ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\n\nexport const ResponsiveTooltipWrapper = makeResponsiveWrapper(DesktopTooltipWrapper, MobileWrapper);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\n\nconst useStyles = makeStyles(\n  theme => ({\n    root: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n  { name: 'MuiPickersStaticWrapper' }\n);\n\nexport interface StaticWrapperProps {\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode\n   * @default \"static\"\n   */\n  displayStaticWrapperAs?: 'desktop' | 'mobile' | 'static';\n}\n\nexport const StaticWrapper: React.FC<StaticWrapperProps> = ({\n  displayStaticWrapperAs = 'static',\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <IsStaticVariantContext.Provider value={true}>\n      <WrapperVariantContext.Provider value={displayStaticWrapperAs}>\n        <div className={classes.root} children={children} />\n      </WrapperVariantContext.Provider>\n    </IsStaticVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { useUtils, MuiPickersAdapter } from './useUtils';\n\nexport interface ValidationProps<TError, TDateValue> {\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError?: (reason: TError, value: TDateValue) => void;\n}\n\nexport interface ValidationHookOptions<TError> {\n  defaultValidationError?: TError;\n  isSameError?: (a: TError, b: TError) => boolean;\n}\n\nconst defaultIsSameError = (a: unknown, b: unknown) => a === b;\n\nexport function makeValidationHook<\n  TError,\n  TDateValue,\n  TProps extends ValidationProps<TError, TDateValue>\n>(\n  validateFn: (utils: MuiPickersAdapter, value: TDateValue, props: TProps) => TError,\n  { defaultValidationError, isSameError = defaultIsSameError }: ValidationHookOptions<TError> = {}\n) {\n  return (value: TDateValue, props: TProps) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef<TError>(\n      defaultValidationError || null\n    ) as React.MutableRefObject<TError>;\n\n    const validationError = validateFn(utils, value, props);\n\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n\n    return validationError;\n  };\n}\n","import * as React from 'react';\nimport { MuiPickersAdapter } from './hooks/useUtils';\nimport { MuiPickersAdapterContext } from '../LocalizationProvider';\n\nexport interface WithDateAdapterProps<TDate> {\n  /**\n   * Allows to pass configured date-io adapter directly. More info [here](https://material-ui-pickers.dev/guides/date-adapter-passing)\n   * ```jsx\n   * dateAdapter={new DateFnsAdapter({ locale: ruLocale })}\n   * ```\n   */\n  dateAdapter?: MuiPickersAdapter<TDate>;\n}\n\nexport function withDateAdapterProp<TProps>(\n  Component: React.ComponentType<TProps>\n): React.FC<TProps & WithDateAdapterProps<unknown>> {\n  return ({ dateAdapter, ...other }: TProps & WithDateAdapterProps<unknown>) => {\n    if (dateAdapter) {\n      return (\n        <MuiPickersAdapterContext.Provider value={dateAdapter}>\n          <Component {...(other as TProps)} />\n        </MuiPickersAdapterContext.Provider>\n      );\n    }\n    return <Component {...(other as TProps)} />;\n  };\n}\n","import React from 'react';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DateInputProps } from '../_shared/PureDateInput';\nimport { ResponsiveWrapperProps } from './ResponsiveWrapper';\nimport { OmitInnerWrapperProps, SomeWrapper, WrapperProps, DateInputPropsLike } from './Wrapper';\n\ninterface MakePickerOptions<TInputProps> {\n  PureDateInputComponent?: React.FC<TInputProps>;\n  KeyboardDateInputComponent?: React.FC<TInputProps>;\n}\n\ninterface WithWrapperProps<TInputProps = DateInputProps> {\n  children: React.ReactNode;\n  DateInputProps: TInputProps;\n  wrapperProps: Omit<WrapperProps, 'DateInputProps'>;\n}\n\n/* Creates a component that rendering modal/popover/nothing and spreading props down to text field */\nexport function makeWrapperComponent<\n  TInputProps extends DateInputPropsLike<any, any>,\n  TWrapper extends SomeWrapper = any\n>(\n  Wrapper: TWrapper,\n  { KeyboardDateInputComponent, PureDateInputComponent }: MakePickerOptions<TInputProps>\n) {\n  function WrapperComponent(\n    props: Partial<BasePickerProps<any, any>> &\n      WithWrapperProps<TInputProps> &\n      Partial<OmitInnerWrapperProps<ResponsiveWrapperProps> & StaticWrapperProps>\n  ) {\n    const {\n      disableCloseOnSelect,\n      cancelText,\n      children,\n      clearable,\n      clearText,\n      DateInputProps,\n      DialogProps,\n      displayStaticWrapperAs,\n      inputFormat,\n      okText,\n      onAccept,\n      onChange,\n      onClose,\n      onOpen,\n      open,\n      PopperProps,\n      showTabs,\n      todayText,\n      value,\n      wider,\n      wrapperProps,\n      ...restPropsForTextField\n    } = props;\n\n    const WrapperComponent = Wrapper as SomeWrapper;\n\n    return (\n      <WrapperComponent\n        clearable={clearable}\n        clearText={clearText}\n        DialogProps={DialogProps}\n        PopperProps={PopperProps}\n        okText={okText}\n        todayText={todayText}\n        cancelText={cancelText}\n        DateInputProps={DateInputProps}\n        // @ts-ignore\n        KeyboardDateInputComponent={KeyboardDateInputComponent}\n        // @ts-ignore\n        PureDateInputComponent={PureDateInputComponent}\n        wider={wider}\n        showTabs={showTabs}\n        displayStaticWrapperAs={displayStaticWrapperAs}\n        {...wrapperProps}\n        {...restPropsForTextField}\n      >\n        {children}\n      </WrapperComponent>\n    );\n  }\n\n  return WrapperComponent;\n}\n","import * as React from 'react';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nexport function useOpenState({ open, onOpen, onClose }: BasePickerProps<any, any>) {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [_open, _setIsOpen] = React.useState(false);\n\n  // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n\n      _setIsOpen(open);\n    }\n  }, [isControllingOpenProp, open]);\n\n  const setIsOpen = React.useCallback(\n    (newIsOpen: boolean) => {\n      if (!isControllingOpenProp) {\n        _setIsOpen(newIsOpen);\n      }\n\n      return newIsOpen ? onOpen && onOpen() : onClose && onClose();\n    },\n    [isControllingOpenProp, onOpen, onClose]\n  );\n\n  return { isOpen: _open, setIsOpen };\n}\n","import * as React from 'react';\nimport { useOpenState } from './useOpenState';\nimport { WrapperVariant } from '../../wrappers/Wrapper';\nimport { BasePickerProps } from '../../typings/BasePicker';\nimport { useUtils, useNow, MuiPickersAdapter } from './useUtils';\n\nexport interface PickerStateValueManager<TInput, TDateValue> {\n  parseInput: (utils: MuiPickersAdapter, props: BasePickerProps<TInput, TDateValue>) => TDateValue;\n  emptyValue: TDateValue;\n  areValuesEqual: (\n    utils: MuiPickersAdapter,\n    valueLeft: TDateValue,\n    valueRight: TDateValue\n  ) => boolean;\n}\n\nexport type PickerSelectionState = 'partial' | 'shallow' | 'finish';\n\nexport function usePickerState<TInput, TDateValue>(\n  props: BasePickerProps<TInput, TDateValue>,\n  valueManager: PickerStateValueManager<TInput, TDateValue>\n) {\n  const {\n    inputFormat,\n    disabled,\n    readOnly,\n    onAccept,\n    onChange,\n    disableCloseOnSelect,\n    value,\n  } = props;\n\n  if (!inputFormat) {\n    throw new Error('inputFormat prop is required');\n  }\n\n  const now = useNow();\n  const utils = useUtils();\n  const { isOpen, setIsOpen } = useOpenState(props);\n  const [pickerDate, setPickerDate] = React.useState(valueManager.parseInput(utils, props));\n\n  // Mobile keyboard view is a special case.\n  // When it's open picker should work like closed, cause we are just showing text field\n  const [isMobileKeyboardViewOpen, setMobileKeyboardViewOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const parsedDateValue = valueManager.parseInput(utils, props);\n    setPickerDate(currentPickerDate => {\n      if (!valueManager.areValuesEqual(utils, currentPickerDate, parsedDateValue)) {\n        return parsedDateValue;\n      }\n\n      return currentPickerDate;\n    });\n    // We need to react only on value change, because `date` could potentially return new Date() on each render\n  }, [value, utils]); // eslint-disable-line\n\n  const acceptDate = React.useCallback(\n    (acceptedDate: TDateValue, needClosePicker: boolean) => {\n      onChange(acceptedDate);\n\n      if (needClosePicker) {\n        setIsOpen(false);\n\n        if (onAccept) {\n          onAccept(acceptedDate);\n        }\n      }\n    },\n    [onAccept, onChange, setIsOpen]\n  );\n\n  const wrapperProps = React.useMemo(\n    () => ({\n      open: isOpen,\n      onClear: () => acceptDate(valueManager.emptyValue, true),\n      onAccept: () => acceptDate(pickerDate, true),\n      onDismiss: () => setIsOpen(false),\n      onSetToday: () => {\n        // TODO FIX ME\n        setPickerDate(now as any);\n        acceptDate(now as any, !disableCloseOnSelect);\n      },\n    }),\n    [acceptDate, disableCloseOnSelect, isOpen, now, pickerDate, setIsOpen, valueManager.emptyValue]\n  );\n\n  const pickerProps = React.useMemo(\n    () => ({\n      // canAutoFocus,\n      date: pickerDate,\n      isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: () => {\n        if (!isMobileKeyboardViewOpen) {\n          // accept any partial input done by React.user\n          setPickerDate(pickerDate);\n        }\n\n        setMobileKeyboardViewOpen(!isMobileKeyboardViewOpen);\n      },\n      onDateChange: (\n        newDate: TDateValue,\n        wrapperVariant: WrapperVariant,\n        selectionState: PickerSelectionState = 'partial'\n      ) => {\n        setPickerDate(newDate);\n        if (selectionState === 'partial') {\n          acceptDate(newDate, false);\n        }\n\n        if (selectionState === 'finish') {\n          const shouldCloseOnSelect = !(disableCloseOnSelect ?? wrapperVariant === 'mobile');\n          acceptDate(newDate, shouldCloseOnSelect);\n        }\n\n        // if selectionState === \"shallow\" do nothing (we already update picker state)\n      },\n    }),\n    [acceptDate, disableCloseOnSelect, isMobileKeyboardViewOpen, pickerDate]\n  );\n\n  const inputProps = React.useMemo(\n    () => ({\n      onChange,\n      inputFormat,\n      open: isOpen,\n      rawValue: value,\n      openPicker: () => !readOnly && !disabled && setIsOpen(true),\n    }),\n    [onChange, inputFormat, isOpen, value, readOnly, disabled, setIsOpen]\n  );\n\n  const pickerState = { pickerProps, inputProps, wrapperProps };\n  React.useDebugValue(pickerState, () => ({\n    MuiPickerState: {\n      pickerDate,\n      other: pickerState,\n    },\n  }));\n\n  return pickerState;\n}\n","import * as React from 'react';\nimport Picker, { ExportedPickerProps } from './Picker';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { parsePickerInputValue } from '../_helpers/date-utils';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { SomeWrapper, ExtendWrapper } from '../wrappers/Wrapper';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { PureDateInput, DateInputProps } from '../_shared/PureDateInput';\nimport { usePickerState, PickerStateValueManager } from '../_shared/hooks/usePickerState';\nimport { AnyPickerView, AllSharedPickerProps, ToolbarComponentProps } from './SharedPickerProps';\n\ntype AllAvailableForOverrideProps = ExportedPickerProps<AnyPickerView>;\n\nexport type AllPickerProps<T, TWrapper extends SomeWrapper = SomeWrapper> = T &\n  AllSharedPickerProps &\n  ExtendWrapper<TWrapper>;\n\nexport interface MakePickerOptions<T extends unknown> {\n  name: string;\n  /**\n   * Hook that running validation for the `value` and input.\n   */\n  useValidation: (value: ParsableDate<unknown>, props: T) => string | null;\n  /**\n   * Intercept props to override or inject default props specifically for picker.\n   */\n  useInterceptProps: (props: AllPickerProps<T>) => AllPickerProps<T> & { inputFormat: string };\n  DefaultToolbarComponent: React.ComponentType<ToolbarComponentProps>;\n}\n\nconst valueManager: PickerStateValueManager<unknown, unknown> = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  areValuesEqual: (utils: MuiPickersAdapter, a: unknown, b: unknown) => utils.isEqual(a, b),\n};\n\ntype PickerComponent<\n  TViewProps extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper\n> = <TDate>(\n  props: TViewProps &\n    ExtendWrapper<TWrapper> &\n    AllSharedPickerProps<ParsableDate<TDate>, TDate | null> &\n    React.RefAttributes<HTMLInputElement>\n) => JSX.Element;\n\nexport function makePickerWithStateAndWrapper<\n  T extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper = typeof ResponsiveWrapper\n>(\n  Wrapper: TWrapper,\n  { name, useInterceptProps, useValidation, DefaultToolbarComponent }: MakePickerOptions<T>\n): PickerComponent<T, TWrapper> {\n  const WrapperComponent = makeWrapperComponent<DateInputProps<any, any>>(Wrapper, {\n    KeyboardDateInputComponent: KeyboardDateInput,\n    PureDateInputComponent: PureDateInput,\n  });\n\n  function PickerWithState<TDate>(\n    __props: T & AllSharedPickerProps<ParsableDate<TDate>, TDate> & ExtendWrapper<TWrapper>\n  ) {\n    const allProps = useInterceptProps(__props) as AllPickerProps<T, TWrapper>;\n\n    const validationError = useValidation(allProps.value, allProps) !== null;\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<ParsableDate<TDate>, TDate>(\n      allProps,\n      valueManager as PickerStateValueManager<ParsableDate<TDate>, TDate>\n    );\n\n    // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n    const { value, onChange, ...other } = allProps;\n    const AllDateInputProps = { ...inputProps, ...other, validationError };\n\n    return (\n      <WrapperComponent wrapperProps={wrapperProps} DateInputProps={AllDateInputProps} {...other}>\n        <Picker\n          {...pickerProps}\n          toolbarTitle={allProps.label || allProps.toolbarTitle}\n          ToolbarComponent={other.ToolbarComponent || DefaultToolbarComponent}\n          DateInputProps={AllDateInputProps}\n          {...other}\n        />\n      </WrapperComponent>\n    );\n  }\n\n  const FinalPickerComponent = withDefaultProps({ name }, withDateAdapterProp(PickerWithState));\n\n  // @ts-ignore Simply ignore generic values in props, because it is impossible\n  // to keep generics without additional cast when using forwardRef\n  // @see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/35834\n  return React.forwardRef<HTMLInputElement, React.ComponentProps<typeof FinalPickerComponent>>(\n    (props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}