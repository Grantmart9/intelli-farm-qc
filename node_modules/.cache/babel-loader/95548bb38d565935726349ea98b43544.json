{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grant\\\\Desktop\\\\Intelli-Farm-new\\\\intelli-farm\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SimpleBar from 'simplebar-react';\nimport { useLocation } from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport { Nav, Badge, Image, Button, Accordion, Navbar } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Routes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = (props = {}) => {\n  _s();\n\n  const {\n    title,\n    items\n  } = props;\n  const location = useLocation();\n  const {\n    pathname\n  } = location;\n  const [show, setShow] = useState(false);\n  const showClass = show ? \"show\" : \"\";\n\n  const onCollapse = () => setShow(!show);\n\n  const CollapsableNavItem = props => {\n    const {\n      eventKey,\n      title,\n      icon,\n      children = null\n    } = props;\n    const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      as: Nav.Item,\n      defaultActiveKey: defaultKey,\n      children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: eventKey,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Button, {\n          as: Nav.Link,\n          className: \"d-flex justify-content-between align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sidebar-icon\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 46\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sidebar-text\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          className: \"multi-level\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"flex-column\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  };\n\n  const NavItem = props => {\n    const {\n      title,\n      link,\n      external,\n      target,\n      icon,\n      image,\n      badgeText,\n      badgeBg = \"secondary\",\n      badgeColor = \"primary\"\n    } = props;\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\n    const navItemClassName = link === pathname ? \"active\" : \"\";\n    const linkProps = external ? {\n      href: link\n    } : {\n      as: Link,\n      to: link\n    };\n    return /*#__PURE__*/_jsxDEV(Nav.Item, {\n      className: navItemClassName,\n      onClick: () => setShow(false),\n      children: /*#__PURE__*/_jsxDEV(Nav.Link, { ...linkProps,\n        target: target,\n        className: classNames,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sidebar-icon\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 52\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this) : null, image ? /*#__PURE__*/_jsxDEV(Image, {\n            src: image,\n            width: 20,\n            height: 20,\n            className: \"sidebar-icon svg-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sidebar-text\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          bg: badgeBg,\n          text: badgeColor,\n          className: \"badge-md notification-count ms-2\",\n          children: badgeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n\n  const toNavItem = (item, i) => {\n    switch (item.action.type) {\n      case \"link\":\n        return /*#__PURE__*/_jsxDEV(NavItem, {\n          title: item.title,\n          link: item.action.path,\n          image: item.image\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n\n      case \"accordion\":\n        return /*#__PURE__*/_jsxDEV(CollapsableNavItem, {\n          title: item.title,\n          eventKey: item.title,\n          image: item.image,\n          children: item.action.items.map(toNavItem)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n\n      default:\n        throw Error(\"impossible\");\n    }\n  };\n\n  const navItems = items.map(toNavItem);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      expand: false,\n      collapseOnSelect: true,\n      variant: \"dark\",\n      className: \"navbar-theme-primary px-4 d-md-none\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        className: \"me-lg-5\",\n        as: Link,\n        to: Routes.DashboardOverview.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        as: Button,\n        \"aria-controls\": \"main-navbar\",\n        onClick: onCollapse,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 300,\n      in: show,\n      classNames: \"sidebar-transition\",\n      children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n        className: `collapse ${showClass} sidebar d-md-block bg-primary text-white`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-inner px-4 pt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\",\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              className: \"collapse-close d-md-none\",\n              onClick: onCollapse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"flex-column pt-3 pt-md-0\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                display: \"flex\",\n                alignContent: \"center\",\n                backgroundColor: \"#293354\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                fontSize: \"2.5rem\",\n                fontWeight: \"bold\",\n                fontFamily: \"'Noto Sans JP', sans-serif\",\n                gap: \"0.5rem\",\n                padding: \"0.5rem\",\n                marginBottom: \"3.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                style: {\n                  padding: \"0.5rem\"\n                },\n                icon: faLeaf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontFamily: \"Times New Roman\"\n              },\n              children: navItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                alignContent: \"center\",\n                justifyContent: \"center\",\n                marginTop: \"1rem\",\n                backgroundColor: \"#293354\"\n              },\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"0Lv9T7knrWky2k48vhkAYdI90ig=\", false, function () {\n  return [useLocation];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Grant/Desktop/Intelli-Farm-new/intelli-farm/src/components/Sidebar.js"],"names":["React","useState","SimpleBar","useLocation","CSSTransition","FontAwesomeIcon","faLeaf","Nav","Badge","Image","Button","Accordion","Navbar","Link","Routes","Sidebar","props","title","items","location","pathname","show","setShow","showClass","onCollapse","CollapsableNavItem","eventKey","icon","children","defaultKey","indexOf","Item","NavItem","link","external","target","image","badgeText","badgeBg","badgeColor","classNames","navItemClassName","linkProps","href","as","to","toNavItem","item","i","action","type","path","map","Error","navItems","DashboardOverview","display","alignContent","backgroundColor","justifyContent","alignItems","fontSize","fontWeight","fontFamily","gap","padding","marginBottom","marginTop"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Nav, Badge, Image, Button, Accordion, Navbar } from '@themesberg/react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes } from \"../routes\";\r\n\r\n\r\nconst Sidebar = (props = {}) => {\r\n  const { title, items } = props;\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n  const onCollapse = () => setShow(!show);\r\n  const CollapsableNavItem = (props) => {\r\n    const { eventKey, title, icon, children = null } = props;\r\n    const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\r\n            <span>\r\n              <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">\r\n              {children}\r\n            </Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\r\n    const classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\r\n            {image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  const toNavItem = (item, i) => {\r\n    switch(item.action.type) {\r\n      case \"link\":\r\n        return <NavItem key={i} title={item.title} link={item.action.path} image={item.image}/>\r\n      case \"accordion\":\r\n        return (\r\n          <CollapsableNavItem key={i} title={item.title} eventKey={item.title} image={item.image}>\r\n          { item.action.items.map(toNavItem) }\r\n          </CollapsableNavItem>\r\n        );\r\n      default:\r\n        throw Error(\"impossible\");\r\n    }\r\n  };\r\n  const navItems = items.map(toNavItem);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        expand={false}\r\n        collapseOnSelect\r\n        variant=\"dark\"\r\n        className=\"navbar-theme-primary px-4 d-md-none\"\r\n      >\r\n        <Navbar.Brand\r\n          className=\"me-lg-5\"\r\n          as={Link}\r\n          to={Routes.DashboardOverview.path}\r\n        ></Navbar.Brand>\r\n        <Navbar.Toggle\r\n          as={Button}\r\n          aria-controls=\"main-navbar\"\r\n          onClick={onCollapse}\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar\r\n          {\r\n            ...{} /* style={{ width: \"420px\" }} */\r\n          }\r\n          className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}\r\n        >\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <Nav.Link\r\n                className=\"collapse-close d-md-none\"\r\n                onClick={onCollapse}\r\n              ></Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              <Button\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignContent: \"center\",\r\n                  backgroundColor: \"#293354\",\r\n                  justifyContent: \"center\",\r\n                  alignItems:\"center\",\r\n                  fontSize: \"2.5rem\",\r\n                  fontWeight:\"bold\",\r\n                  fontFamily: \"'Noto Sans JP', sans-serif\",\r\n                  gap: \"0.5rem\",\r\n                  padding:\"0.5rem\",\r\n                  marginBottom:\"3.5rem\",\r\n                }}\r\n              >\r\n                <FontAwesomeIcon style={{padding:\"0.5rem\"}}icon={faLeaf} />\r\n                {title}\r\n              </Button>\r\n              <div style={{ fontFamily: \"Times New Roman\" }}>{navItems}</div>\r\n              <Button\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"1rem\",\r\n                  backgroundColor: \"#293354\",\r\n                }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}